kuptsovtable = read.table("../../Body/2Derived/EcologyMammalianTable01_KuptsovA_ver2_Full.txt", sep='\t', header=TRUE)
HG = MUTFROMK[MUTFROMK$Species == "Heterocephalus_glaber",]
MM = MUTFROMK[MUTFROMK$Species == "Mus_musculus",]
CH = MUTFROMK[MUTFROMK$Species == "Cryptomys_hottentotus",]
ALL = rbind(HG, CH)
###########Taxonomy###################################################################
Taxa = read.table("../../Body/1Raw/TaxaFromKostya.Names.stat", sep = '\t',header = FALSE)
###########Taxonomy###################################################################
Taxa = read.table("../../Body/1Raw/TaxaFromKostya.Names.stat", sep = '\t',header = FALSE)
Taxa$Species = gsub(";.*",'',Taxa$V1);
for (i in (1:nrow(Taxa)))  {Taxa$Species[i] = paste(unlist(strsplit(as.character(Taxa$Species[i]),split = ' '))[1],unlist(strsplit(as.character(Taxa$Species[i]),split = ' '))[2], sep = '_')}
Taxa$Class = gsub(";Chordata;.*",'',Taxa$V1); Taxa$Class = gsub(".*;",'',Taxa$Class); table(Taxa$Class)
Taxa$Class = gsub('Actinopteri','Actinopterygii',Taxa$Class)
Taxa$Class = gsub("Testudines|Squamata|Crocodylia|Sphenodontia",'Reptilia',Taxa$Class)
###########Taxonomy###################################################################
Taxa = read.table("../../Body/1Raw/TaxaFromKostya.Names.stat", sep = '\t',header = FALSE)
Taxa$Species = gsub(";.*",'',Taxa$V1);
for (i in (1:nrow(Taxa)))  {Taxa$Species[i] = paste(unlist(strsplit(as.character(Taxa$Species[i]),split = ' '))[1],unlist(strsplit(as.character(Taxa$Species[i]),split = ' '))[2], sep = '_')}
Taxa$Class = gsub(";Chordata;.*",'',Taxa$V1); Taxa$Class = gsub(".*;",'',Taxa$Class); table(Taxa$Class)
Taxa$Class = gsub('Actinopteri','Actinopterygii',Taxa$Class)
Taxa$Class = gsub("Testudines|Squamata|Crocodylia|Sphenodontia",'Reptilia',Taxa$Class)
length(unique(Taxa$Species)) # 1708
table(Taxa$Class)
Taxa = Taxa[,-1]
TaxaMore = read.table("../../Body/1Raw/TaxaFromKostya.2NeedTaxa.tax.txt", sep = '\t',header = FALSE)
TaxaMore$Species = ''
for (i in (1:nrow(TaxaMore)))
{TaxaMore$Species[i] = paste(unlist(strsplit(as.character(TaxaMore$V1[i]),split = ' '))[1],unlist(strsplit(as.character(TaxaMore$V1[i]),split = ' '))[2], sep = '_')}
rm(list=ls(all=TRUE))
if (!require(ggpubr)) install.packages("ggpubr")
library("ggpubr")
###########Taxonomy###################################################################
Taxa = read.table("../../Body/1Raw/TaxaFromKostya.Names.stat", sep = '\t',header = FALSE)
Taxa$Species = gsub(";.*",'',Taxa$V1);
library(vioplot)
if (!require(vioplot)) install.packages("vioplot")
library(vioplot)
###########Taxonomy###################################################################
Taxa = read.table("../../Body/1Raw/TaxaFromKostya.Names.stat", sep = '\t',header = FALSE)
Taxa$Species = gsub(";.*",'',Taxa$V1);
for (i in (1:nrow(Taxa)))  {Taxa$Species[i] = paste(unlist(strsplit(as.character(Taxa$Species[i]),split = ' '))[1],unlist(strsplit(as.character(Taxa$Species[i]),split = ' '))[2], sep = '_')}
Taxa$Class = gsub(";Chordata;.*",'',Taxa$V1); Taxa$Class = gsub(".*;",'',Taxa$Class); table(Taxa$Class)
Taxa$Class = gsub('Actinopteri','Actinopterygii',Taxa$Class)
Taxa$Class = gsub("Testudines|Squamata|Crocodylia|Sphenodontia",'Reptilia',Taxa$Class)
length(unique(Taxa$Species)) # 1708
table(Taxa$Class)
###########Taxonomy###################################################################
Taxa = read.table("../../Body/1Raw/TaxaFromKostya.Names.stat", sep = '\t',header = FALSE)
setwd("~/GitHub/mtDNA_mutspectrum/Body")
###########Taxonomy###################################################################
Taxa = read.table("../../Body/1Raw/TaxaFromKostya.Names.stat", sep = '\t',header = FALSE)
setwd("~/GitHub/mtDNA_mutspectrum/Head/2Scripts")
###########Taxonomy###################################################################
Taxa = read.table("../../Body/1Raw/TaxaFromKostya.Names.stat", sep = '\t',header = FALSE)
Taxa$Species = gsub(";.*",'',Taxa$V1);
for (i in (1:nrow(Taxa)))  {Taxa$Species[i] = paste(unlist(strsplit(as.character(Taxa$Species[i]),split = ' '))[1],unlist(strsplit(as.character(Taxa$Species[i]),split = ' '))[2], sep = '_')}
Taxa$Class = gsub(";Chordata;.*",'',Taxa$V1); Taxa$Class = gsub(".*;",'',Taxa$Class); table(Taxa$Class)
Taxa$Class = gsub('Actinopteri','Actinopterygii',Taxa$Class)
Taxa$Class = gsub("Testudines|Squamata|Crocodylia|Sphenodontia",'Reptilia',Taxa$Class)
length(unique(Taxa$Species)) # 1708
table(Taxa$Class)
Taxa = Taxa[,-1]
TaxaMore = read.table("../../Body/1Raw/TaxaFromKostya.2NeedTaxa.tax.txt", sep = '\t',header = FALSE)
TaxaMore$Species = ''
for (i in (1:nrow(TaxaMore)))
{TaxaMore$Species[i] = paste(unlist(strsplit(as.character(TaxaMore$V1[i]),split = ' '))[1],unlist(strsplit(as.character(TaxaMore$V1[i]),split = ' '))[2], sep = '_')}
TaxaMore$Class = gsub("; Chordata;.*",'',TaxaMore$V2);
TaxaMore$Class = gsub(".*; ",'',TaxaMore$Class);
TaxaMore$Class = gsub('Actinopteri','Actinopterygii',TaxaMore$Class)
TaxaMore$Class = gsub("Testudines|Squamata|Crocodylia",'Reptilia',TaxaMore$Class)
table(TaxaMore$Class)
TaxaMore = TaxaMore[,-c(1,2)]
Taxa = rbind(Taxa,TaxaMore); Taxa = unique(Taxa)
###########################MUT spectrum in Actinoptery##################################
MUT = read.table('../../Body/3Results/VertebratePolymorphisms.MutSpecData.OnlyFourFoldDegAllGenes.txt', header = TRUE)
MUTFROMK = merge(MUT, Taxa)
MUTFROMK = MUTFROMK[MUTFROMK$T_C > 0,]
MUTFROMK = MUTFROMK[MUTFROMK$A_G > 0,]
MUTFROMK$TCdivAG = MUTFROMK$T_C / MUTFROMK$A_G
MUTFROMK[MUTFROMK$Class == "Actinopterygii",]$TCdivAG
with(MUTFROMK, vioplot(
T_C[Class=="Actinopterygii"], T_C[Class=="Amphibia"], T_C[Class=="Reptilia"],T_C[Class=="Mammalia"],T_C[Class=="Aves"],
names = c(  "Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves")
))
with(MUTFROMK, vioplot(
T_C[Class=="Actinopterygii"], T_C[Class=="Amphibia"], T_C[Class=="Reptilia"],T_C[Class=="Mammalia"],T_C[Class=="Aves"],
names = c(  "Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), col=c("#6760db", "#6760db", "#6760db", "#db84cb", "#c7467e")
))
with(MUTFROMK, vioplot(
T_C[Class=="Actinopterygii"], T_C[Class=="Amphibia"], T_C[Class=="Reptilia"],T_C[Class=="Mammalia"],T_C[Class=="Aves"],
names = c(  "Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), col=c("#6760db", "#7849bf", "#9145c4", "#db84cb", "#c7467e")
))
with(MUTFROMK, vioplot(
T_C[Class=="Actinopterygii"], T_C[Class=="Amphibia"], T_C[Class=="Reptilia"],T_C[Class=="Mammalia"],T_C[Class=="Aves"],
names = c(  "Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), col=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c")
))
with(MUTFROMK, vioplot(
T_C[Class=="Actinopterygii"], T_C[Class=="Amphibia"], T_C[Class=="Reptilia"],T_C[Class=="Mammalia"],T_C[Class=="Aves"],
names = c(  "Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), col=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"),  ylab = "AH>GH"
))
with(MUTFROMK, vioplot(
TCdivAG[Class=="Actinopterygii"], TCdivAG[Class=="Amphibia"], TCdivAG[Class=="Reptilia"],TCdivAG[Class=="Mammalia"],TCdivAG_C[Class=="Aves"],
names = c(  "Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), col=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"),  ylab = "AH>GH"
))
table(MUTFROMK$Class)
MUTFROMK = MUTFROMK[MUTFROMK$T_C > 0,]
MUTFROMK = MUTFROMK[MUTFROMK$A_G > 0,]
MUTFROMK$TCdivAG = MUTFROMK$T_C / MUTFROMK$A_G
with(MUTFROMK, vioplot(
TCdivAG[Class=="Actinopterygii"], TCdivAG[Class=="Amphibia"], TCdivAG[Class=="Reptilia"],TCdivAG[Class=="Mammalia"],TCdivAG_C[Class=="Aves"],
names = c(  "Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), col=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"),  ylab = "AH>GH"
))
MUTFROMK$TCdivAG = MUTFROMK$T_C / MUTFROMK$A_G
with(MUTFROMK, vioplot(
TCdivAG[Class=="Actinopterygii"], TCdivAG[Class=="Amphibia"], TCdivAG[Class=="Reptilia"],TCdivAG[Class=="Mammalia"],TCdivAG_C[Class=="Aves"],
names = c(  "Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), col=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"),  ylab = "AH>GH"
))
with(MUTFROMK, vioplot(
TCdivAG[Class=="Actinopterygii"], TCdivAG[Class=="Amphibia"], TCdivAG[Class=="Reptilia"],TCdivAG[Class=="Mammalia"],TCdivAG[Class=="Aves"],
names = c(  "Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), col=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"),  ylab = "AH>GH"
))
with(MUTFROMK, vioplot(
TCdivAG[Class=="Actinopterygii"], TCdivAG[Class=="Amphibia"], TCdivAG[Class=="Reptilia"],TCdivAG[Class=="Mammalia"],TCdivAG[Class=="Aves"],
names = c(  "Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), col=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"),  ylab = "AH>GH",  outline = FALSE
))
with(MUTFROMK, vioplot(
TCdivAG[Class=="Actinopterygii"], TCdivAG[Class=="Amphibia"], TCdivAG[Class=="Reptilia"],TCdivAG[Class=="Mammalia"],TCdivAG[Class=="Aves"],
names = c(  "Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), col=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"),  ylab = "AH>GH",  outline = FALSE
))
with(MUTFROMK, vioplot(
TCdivAG[Class=="Actinopterygii"], TCdivAG[Class=="Amphibia"], TCdivAG[Class=="Reptilia"],TCdivAG[Class=="Mammalia"],TCdivAG[Class=="Aves"],
names = c(  "Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), col=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"),  ylab = "AH>GH",
))
with(MUTFROMK, vioplot(
TCdivAG[Class=="Actinopterygii"], TCdivAG[Class=="Amphibia"], TCdivAG[Class=="Reptilia"],TCdivAG[Class=="Mammalia"],TCdivAG[Class=="Aves"],
names = c(  "Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), col=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"),  ylab = "AH>GH",
))
with(MUTFROMK, vioplot(
TCdivAG[Class=="Actinopterygii"], TCdivAG[Class=="Amphibia"], TCdivAG[Class=="Reptilia"],TCdivAG[Class=="Mammalia"],TCdivAG[Class=="Aves"],
names = c(  "Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), col=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"),  ylab = "AH>GH"
))
with(MUTFROMK, vioplot(
TCdivAG[Class=="Actinopterygii"], TCdivAG[Class=="Amphibia"], TCdivAG[Class=="Reptilia"],TCdivAG[Class=="Mammalia"],TCdivAG[Class=="Aves"],
names = c(  "Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), col=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"),  ylab = "AH>GH",  outline = FALSE
))
with(MUTFROMK, vioplot(
TCdivAG[Class=="Actinopterygii"], TCdivAG[Class=="Amphibia"], TCdivAG[Class=="Reptilia"],TCdivAG[Class=="Mammalia"],TCdivAG[Class=="Aves"],
names = c(  "Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), col=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"),  ylab = "AH>GH",
))
with(MUTFROMK, vioplot(
TCdivAG[Class=="Actinopterygii"], TCdivAG[Class=="Amphibia"], TCdivAG[Class=="Reptilia"],TCdivAG[Class=="Mammalia"],TCdivAG[Class=="Aves"],
names = c(  "Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), col=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"),  ylab = "AH>GH",
))
with(MUTFROMK, vioplot(
TCdivAG[Class=="Actinopterygii"], TCdivAG[Class=="Amphibia"], TCdivAG[Class=="Reptilia"],TCdivAG[Class=="Mammalia"],TCdivAG[Class=="Aves"],
names = c(  "Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), col=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"),  ylab = "AH>GH"
))
ggviolin(MUTFROMK, x = "T_C", y = "Class", fill=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), xlab = c(  "Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves") )
ggviolin(MUTFROMK, x = "Class", y = "T_C", fill=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), xlab = c(  "Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves") )
ggviolin(MUTFROMK, x = "Class", y = "T_C", fill=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
ggviolin(MUTFROMK, x = "Class", y = "T_C")
ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"))
ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), col=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"),  ylab = "AH>GH")
ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), col=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), fill=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), fill=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves")
ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"))
ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"))
ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"),  fill=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"),  fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"),  fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), ylab = "AH>GH")
ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"),  fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), ylab = "AH>GH", add="box-plot")
ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"),  fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), ylab = "AH>GH", order=c(1,5,3,2,4))
ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"),  fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), ylab = "AH>GH", order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves")
ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"),  fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), ylab = "AH>GH", order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"))
ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"),  fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), ylab = "AH>GH", order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add='mean')
?desc_statby
ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"),  fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), ylab = "AH>GH", order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"),draw_quantiles = 0.5')
ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"),  fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), ylab = "AH>GH",\
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), draw_quantiles = 0.5)
ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"),  fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), ylab = "AH>GH",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), draw_quantiles = 0.5)
ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"),  fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), ylab = "AH>GH",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot")
p = ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"),  fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), ylab = "AH>GH",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot")
p + gradient_color(c("blue", "white", "red"))
p = ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "AH>GH",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot")
p + gradient_color(c("blue", "white", "red"))
p
gradient_color(c("blue", "white", "red")
gradient_color(c("blue", "white", "red"))
gradient_color(c("blue", "white", "red"))
p = ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "AH>GH",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "AH>GH",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
ggviolin(MUTFROMK, x = "Class", y = "TCdivAG", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "AH>GH div TH>CH",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
ggviolin(MUTFROMK, x = "Class", y = "TCdivAG", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "AH>GH div TH>CH",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"),
outlier.shape = NA)
ggviolin(MUTFROMK, x = "Class", y = "TCdivAG", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "AH>GH div TH>CH",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"),outlier.shape = NA, add = "jitter")
ggviolin(MUTFROMK, x = "Class", y = "TCdivAG", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "AH>GH div TH>CH",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), add = "jitter")
ggviolin(MUTFROMK, x = "Class", y = "TCdivAG", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "AH>GH div TH>CH",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
MUTFROMK = MUTFROMK[MUTFROMK$TCdivAG < 50,]
ggviolin(MUTFROMK, x = "Class", y = "TCdivAG", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "AH>GH div TH>CH",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
MUTFROMK = MUTFROMK[MUTFROMK$TCdivAG < 30,]
ggviolin(MUTFROMK, x = "Class", y = "TCdivAG", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "AH>GH div TH>CH",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
MUTFROMK = merge(MUT, Taxa)
MUTFROMK = merge(MUT, Taxa)
MUTFROMK = MUTFROMK[MUTFROMK$T_C > 0,]
MUTFROMK = MUTFROMK[MUTFROMK$A_G > 0,]
MUTFROMK$TCdivAG = MUTFROMK$T_C / MUTFROMK$A_G
pdf("../../Body/4Figures/VertebratePolymorphisms.MutSpecComparisons.Ecology.AtoG.DiffClasses.MutSpectrum.VIOLIN.pdf")
ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "AH>GH",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
MUTFROMK = MUTFROMK[MUTFROMK$TCdivAG < 30,]
ggviolin(MUTFROMK, x = "Class", y = "TCdivAG", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "AH>GH div TH>CH",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
dev.off()
rm(list=ls(all=TRUE))
if (!require(ggpubr)) install.packages("ggpubr")
library("ggpubr")
###########Taxonomy###################################################################
Taxa = read.table("../../Body/1Raw/TaxaFromKostya.Names.stat", sep = '\t',header = FALSE)
Taxa$Species = gsub(";.*",'',Taxa$V1);
for (i in (1:nrow(Taxa)))  {Taxa$Species[i] = paste(unlist(strsplit(as.character(Taxa$Species[i]),split = ' '))[1],unlist(strsplit(as.character(Taxa$Species[i]),split = ' '))[2], sep = '_')}
Taxa$Class = gsub(";Chordata;.*",'',Taxa$V1); Taxa$Class = gsub(".*;",'',Taxa$Class); table(Taxa$Class)
Taxa$Class = gsub('Actinopteri','Actinopterygii',Taxa$Class)
Taxa$Class = gsub("Testudines|Squamata|Crocodylia|Sphenodontia",'Reptilia',Taxa$Class)
length(unique(Taxa$Species)) # 1708
table(Taxa$Class)
Taxa = Taxa[,-1]
TaxaMore = read.table("../../Body/1Raw/TaxaFromKostya.2NeedTaxa.tax.txt", sep = '\t',header = FALSE)
TaxaMore$Species = ''
for (i in (1:nrow(TaxaMore)))
{TaxaMore$Species[i] = paste(unlist(strsplit(as.character(TaxaMore$V1[i]),split = ' '))[1],unlist(strsplit(as.character(TaxaMore$V1[i]),split = ' '))[2], sep = '_')}
TaxaMore$Class = gsub("; Chordata;.*",'',TaxaMore$V2);
TaxaMore$Class = gsub(".*; ",'',TaxaMore$Class);
TaxaMore$Class = gsub('Actinopteri','Actinopterygii',TaxaMore$Class)
TaxaMore$Class = gsub("Testudines|Squamata|Crocodylia",'Reptilia',TaxaMore$Class)
table(TaxaMore$Class)
TaxaMore = TaxaMore[,-c(1,2)]
Taxa = rbind(Taxa,TaxaMore); Taxa = unique(Taxa)
###########################MUT spectrum in Actinoptery##################################
MUT = read.table('../../Body/3Results/VertebratePolymorphisms.MutSpecData.OnlyFourFoldDegAllGenes.txt', header = TRUE)
MUTACTINOPTERITAXAFROMK = merge(MUT, Taxa)
MUTACTINOPTERITAXAFROMK = MUTACTINOPTERITAXAFROMK[MUTACTINOPTERITAXAFROMK$Class == "Actinopterygii",]
names(MUTACTINOPTERITAXAFROMK) = as.character(c("TH_GH", "TH_CH", "TH_AH", "GH_TH", "GH_CH", "GH_AH", "CH_TH", "CH_GH", "CH_AH", "AH_TH", "AH_GH", "AH_CH"))
MUTACTINOPTERITAXAFROMK=MUTACTINOPTERITAXAFROMK[,-1]
MUTACTINOPTERITAXAFROMK=MUTACTINOPTERITAXAFROMK[,-13]
temp = data.frame(t(MUTACTINOPTERITAXAFROMK))
a=c()
View(MUTACTINOPTERITAXAFROMK)
names(MUTACTINOPTERITAXAFROMK) = c("TH_GH", "TH_CH", "TH_AH", "GH_TH", "GH_CH", "GH_AH", "CH_TH", "CH_GH", "CH_AH", "AH_TH", "AH_GH", "AH_CH")
View(MUTACTINOPTERITAXAFROMK)
###########################MUT spectrum in Actinoptery##################################
MUT = read.table('../../Body/3Results/VertebratePolymorphisms.MutSpecData.OnlyFourFoldDegAllGenes.txt', header = TRUE)
MUTACTINOPTERITAXAFROMK = merge(MUT, Taxa)
MUTACTINOPTERITAXAFROMK = MUTACTINOPTERITAXAFROMK[MUTACTINOPTERITAXAFROMK$Class == "Actinopterygii",]
names(MUTACTINOPTERITAXAFROMK) = c("TH_GH", "TH_CH", "TH_AH", "GH_TH", "GH_CH", "GH_AH", "CH_TH", "CH_GH", "CH_AH", "AH_TH", "AH_GH", "AH_CH")
MUTACTINOPTERITAXAFROMK=MUTACTINOPTERITAXAFROMK[,-1]
MUTACTINOPTERITAXAFROMK=MUTACTINOPTERITAXAFROMK[,-13]
temp = data.frame(t(MUTACTINOPTERITAXAFROMK))
View(temp)
rm(list=ls(all=TRUE))
if (!require(ggpubr)) install.packages("ggpubr")
library("ggpubr")
###########Taxonomy###################################################################
Taxa = read.table("../../Body/1Raw/TaxaFromKostya.Names.stat", sep = '\t',header = FALSE)
Taxa$Species = gsub(";.*",'',Taxa$V1);
for (i in (1:nrow(Taxa)))  {Taxa$Species[i] = paste(unlist(strsplit(as.character(Taxa$Species[i]),split = ' '))[1],unlist(strsplit(as.character(Taxa$Species[i]),split = ' '))[2], sep = '_')}
Taxa$Class = gsub(";Chordata;.*",'',Taxa$V1); Taxa$Class = gsub(".*;",'',Taxa$Class); table(Taxa$Class)
Taxa$Class = gsub('Actinopteri','Actinopterygii',Taxa$Class)
Taxa$Class = gsub("Testudines|Squamata|Crocodylia|Sphenodontia",'Reptilia',Taxa$Class)
length(unique(Taxa$Species)) # 1708
table(Taxa$Class)
Taxa = Taxa[,-1]
TaxaMore = read.table("../../Body/1Raw/TaxaFromKostya.2NeedTaxa.tax.txt", sep = '\t',header = FALSE)
TaxaMore$Species = ''
for (i in (1:nrow(TaxaMore)))
{TaxaMore$Species[i] = paste(unlist(strsplit(as.character(TaxaMore$V1[i]),split = ' '))[1],unlist(strsplit(as.character(TaxaMore$V1[i]),split = ' '))[2], sep = '_')}
TaxaMore$Class = gsub("; Chordata;.*",'',TaxaMore$V2);
TaxaMore$Class = gsub(".*; ",'',TaxaMore$Class);
TaxaMore$Class = gsub('Actinopteri','Actinopterygii',TaxaMore$Class)
TaxaMore$Class = gsub("Testudines|Squamata|Crocodylia",'Reptilia',TaxaMore$Class)
table(TaxaMore$Class)
TaxaMore = TaxaMore[,-c(1,2)]
Taxa = rbind(Taxa,TaxaMore); Taxa = unique(Taxa)
###########################MUT spectrum in Actinoptery##################################
MUT = read.table('../../Body/3Results/VertebratePolymorphisms.MutSpecData.OnlyFourFoldDegAllGenes.txt', header = TRUE)
MUTACTINOPTERITAXAFROMK = merge(MUT, Taxa)
MUTACTINOPTERITAXAFROMK = MUTACTINOPTERITAXAFROMK[MUTACTINOPTERITAXAFROMK$Class == "Actinopterygii",]
MUTACTINOPTERITAXAFROMK=MUTACTINOPTERITAXAFROMK[,-1]
MUTACTINOPTERITAXAFROMK=MUTACTINOPTERITAXAFROMK[,-13]
temp = data.frame(t(MUTACTINOPTERITAXAFROMK))
a=c()
View(temp)
###########################MUT spectrum in Actinoptery##################################
MUT = read.table('../../Body/3Results/VertebratePolymorphisms.MutSpecData.OnlyFourFoldDegAllGenes.txt', header = TRUE)
MUTACTINOPTERITAXAFROMK = merge(MUT, Taxa)
MUTACTINOPTERITAXAFROMK = MUTACTINOPTERITAXAFROMK[MUTACTINOPTERITAXAFROMK$Class == "Actinopterygii",]
names(MUTACTINOPTERITAXAFROMK) = c("T_G", "T_C", "T_A", "G_T", "G_C", "G_A", "C_T", "C_G", "C_A", "A_T", "A_G", "A_C")
MUTACTINOPTERITAXAFROMK=MUTACTINOPTERITAXAFROMK[,-1]
MUTACTINOPTERITAXAFROMK=MUTACTINOPTERITAXAFROMK[,-13]
temp = data.frame(t(MUTACTINOPTERITAXAFROMK))
a=c()
View(temp)
###########################MUT spectrum in Actinoptery##################################
MUT = read.table('../../Body/3Results/VertebratePolymorphisms.MutSpecData.OnlyFourFoldDegAllGenes.txt', header = TRUE)
MUTACTINOPTERITAXAFROMK = merge(MUT, Taxa)
MUTACTINOPTERITAXAFROMK = MUTACTINOPTERITAXAFROMK[MUTACTINOPTERITAXAFROMK$Class == "Actinopterygii",]
MUTACTINOPTERITAXAFROMK=MUTACTINOPTERITAXAFROMK[,-1]
MUTACTINOPTERITAXAFROMK=MUTACTINOPTERITAXAFROMK[,-13]
temp = data.frame(t(MUTACTINOPTERITAXAFROMK))
a=c()
View(TaxaMore)
View(temp)
for(i in 1:ncol(temp)){
b = data.frame(temp[i], rownames(temp))
colnames(b)=c("Freq", "Sub")
a = rbind(a, b)
}
#c("TH>GH", "TH>CH", "TH>AH", "GH>TH", "GH>CH", "GH>AH", "CH>TH", "CH>GH", "CH>AH", "AH>TH", "AH>GH", "AH>CH")
pdf("../../Body/4Figures/VertebratePolymorphisms.MutSpecComparisons.Analyses.Ecology.Actinopterygii.FishBaseData.FIGURE1A.pdf")
ggbarplot(a, x = "Sub", y = "Freq", fill = "Sub", color = "Sub",
palette = c("#bdbdbd", "#73514f", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#055088", "#9c3d37", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#036a5b", "#bdbdbd"),
xlab="Substitution types", ylab="Normalised frequencies", add = "mean_se")
dev.off()
svg("../../Body/4Figures/VertebratePolymorphisms.MutSpecComparisons.Analyses.Ecology.Actinopterygii.FishBaseData.FIGURE1A.svg")
ggbarplot(a, x = "Sub", y = "Freq", fill = "Sub", color = "Sub",
palette = c("#bdbdbd", "#73514f", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#055088", "#9c3d37", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#036a5b", "#bdbdbd"),
xlab="Substitution types", ylab="Normalised frequencies", add = "mean_se", legend = "none")
dev.off()
#c("TH>GH", "TH>CH", "TH>AH", "GH>TH", "GH>CH", "GH>AH", "CH>TH", "CH>GH", "CH>AH", "AH>TH", "AH>GH", "AH>CH")
pdf("../../Body/4Figures/VertebratePolymorphisms.MutSpecComparisons.Analyses.Ecology.Actinopterygii.FishBaseData.FIGURE1A.pdf")
ggbarplot(a, x = "Sub", y = "Freq", fill = "Sub", color = "Sub",
palette = c("#bdbdbd", "#73514f", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#055088", "#9c3d37", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#036a5b", "#bdbdbd"),
xlab="Substitution types", ylab="Normalised frequencies", add = "mean_se", legend = "none")
dev.off()
svg("../../Body/4Figures/VertebratePolymorphisms.MutSpecComparisons.Analyses.Ecology.Actinopterygii.FishBaseData.FIGURE1A.svg")
ggbarplot(a, x = "Sub", y = "Freq", fill = "Sub", color = "Sub",
palette = c("#bdbdbd", "#73514f", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#055088", "#9c3d37", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#036a5b", "#bdbdbd"),
xlab="Substitution types", ylab="Normalised frequencies", add = "mean_se")
dev.off()
###################################
rm(list=ls(all=TRUE))
library(ggpubr)
setwd("../../Body/3Results")
unzip("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt.zip")
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep = '\t')
if (file.exists("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")) {file.remove("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")}
# SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE)
names(SynNuc)
SynNuc = SynNuc[SynNuc$Gene != 'ND6',]
SynNuc = aggregate(list(SynNuc$NeutralA,SynNuc$NeutralT,SynNuc$NeutralG,SynNuc$NeutralC), by = list(SynNuc$Species), FUN = sum)
names(SynNuc) = c('Species','NeutralA','NeutralT','NeutralG','NeutralC')
SynNuc$FrA = SynNuc$NeutralA / (SynNuc$NeutralA + SynNuc$NeutralT + SynNuc$NeutralG + SynNuc$NeutralC)
# SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE)
names(SynNuc)
SynNuc = SynNuc[SynNuc$Gene != 'ND6',]
SynNuc = aggregate(list(SynNuc$NeutralA,SynNuc$NeutralT,SynNuc$NeutralG,SynNuc$NeutralC), by = list(SynNuc$Species), FUN = sum)
names(SynNuc) = c('Species','NeutralA','NeutralT','NeutralG','NeutralC')
SynNuc$FrA = SynNuc$NeutralA / (SynNuc$NeutralA + SynNuc$NeutralT + SynNuc$NeutralG + SynNuc$NeutralC)
SynNuc$FrT = SynNuc$NeutralT / (SynNuc$NeutralA + SynNuc$NeutralT + SynNuc$NeutralG + SynNuc$NeutralC)
SynNuc$FrG = SynNuc$NeutralG / (SynNuc$NeutralA + SynNuc$NeutralT + SynNuc$NeutralG + SynNuc$NeutralC)
SynNuc$FrC = SynNuc$NeutralC / (SynNuc$NeutralA + SynNuc$NeutralT + SynNuc$NeutralG + SynNuc$NeutralC)
### merge with temperature
TEMPE = read.table('../../Body/1Raw/FishBaseTemperature.txt', header = TRUE)
TEMPE = aggregate(Temperature ~ ., median, data = TEMPE); summary(TEMPE$Temperature)
SynNuc = merge(TEMPE,SynNuc, by = 'Species', all = TRUE); summary(SynNuc$Temperature)
MATUTM = read.table('../../Body/1Raw/FishBaseMaturity_Tm.txt',  header = TRUE)
MATUTM = aggregate(Tm ~ ., median, data = MATUTM)
SynNuc = merge(MATUTM,SynNuc, by = 'Species', all = TRUE); nrow(SynNuc)
SynNuc$CtoTSkew = (SynNuc$FrC-SynNuc$FrT)/(SynNuc$FrC+SynNuc$FrT); summary(SynNuc$CtoTSkew)
SynNuc$GtoASkew = (SynNuc$FrG-SynNuc$FrA)/(SynNuc$FrG+SynNuc$FrA); summary(SynNuc$GtoASkew)
SynNuc$AtoGSkew = (SynNuc$FrA-SynNuc$FrG)/(SynNuc$FrA+SynNuc$FrG); summary(SynNuc$AtoGSkew)
SynNuc$TtoCSkew = (SynNuc$FrT-SynNuc$FrC)/(SynNuc$FrT+SynNuc$FrC); summary(SynNuc$TtoCSkew)
SynNuc$TG = SynNuc$FrT+SynNuc$FrG
SynNuc$AC = SynNuc$FrA+SynNuc$FrC
SynNuc$TG_ACSkew = (SynNuc$TG-SynNuc$AC)/(SynNuc$TG+SynNuc$AC); summary(SynNuc$TG_ACSkew)
summary(lm(TG_ACSkew ~ scale(Temperature + 2)+scale(Tm), data = SynNuc))
Temperature
SynNuc$Temperature
### ANALYSES:
summary(SynNuc$Temperature)
summary(SynNuc$Tm)
summary(lm(TG_ACSkew ~ scale(Temperature + 2)+scale(Tm), data = SynNuc))
summary(lm(TG_ACSkew ~ log2(Temperature + 2)+log2(Tm), data = SynNuc))
###################################
rm(list=ls(all=TRUE))
library(ggpubr)
setwd("../../Body/3Results")
unzip("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt.zip")
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep = '\t')
if (file.exists("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")) {file.remove("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")}
# SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE)
names(SynNuc)
SynNuc = SynNuc[SynNuc$Gene != 'ND6',]
SynNuc = aggregate(list(SynNuc$NeutralA,SynNuc$NeutralT,SynNuc$NeutralG,SynNuc$NeutralC), by = list(SynNuc$Species), FUN = sum)
names(SynNuc) = c('Species','NeutralA','NeutralT','NeutralG','NeutralC')
SynNuc$FrA = SynNuc$NeutralA / (SynNuc$NeutralA + SynNuc$NeutralT + SynNuc$NeutralG + SynNuc$NeutralC)
SynNuc$FrT = SynNuc$NeutralT / (SynNuc$NeutralA + SynNuc$NeutralT + SynNuc$NeutralG + SynNuc$NeutralC)
SynNuc$FrG = SynNuc$NeutralG / (SynNuc$NeutralA + SynNuc$NeutralT + SynNuc$NeutralG + SynNuc$NeutralC)
SynNuc$FrC = SynNuc$NeutralC / (SynNuc$NeutralA + SynNuc$NeutralT + SynNuc$NeutralG + SynNuc$NeutralC)
### merge with temperature
TEMPE = read.table('../../Body/1Raw/FishBaseTemperature.txt', header = TRUE)
TEMPE = aggregate(Temperature ~ ., median, data = TEMPE); summary(TEMPE$Temperature)
SynNuc = merge(TEMPE,SynNuc, by = 'Species', all = TRUE); summary(SynNuc$Temperature)
MATUTM = read.table('../../Body/1Raw/FishBaseMaturity_Tm.txt',  header = TRUE)
MATUTM = aggregate(Tm ~ ., median, data = MATUTM)
SynNuc = merge(MATUTM,SynNuc, by = 'Species', all = TRUE); nrow(SynNuc)
SynNuc$CtoTSkew = (SynNuc$FrC-SynNuc$FrT)/(SynNuc$FrC+SynNuc$FrT); summary(SynNuc$CtoTSkew)
SynNuc$GtoASkew = (SynNuc$FrG-SynNuc$FrA)/(SynNuc$FrG+SynNuc$FrA); summary(SynNuc$GtoASkew)
SynNuc$AtoGSkew = (SynNuc$FrA-SynNuc$FrG)/(SynNuc$FrA+SynNuc$FrG); summary(SynNuc$AtoGSkew)
SynNuc$TtoCSkew = (SynNuc$FrT-SynNuc$FrC)/(SynNuc$FrT+SynNuc$FrC); summary(SynNuc$TtoCSkew)
SynNuc$TG = SynNuc$FrT+SynNuc$FrG
SynNuc$AC = SynNuc$FrA+SynNuc$FrC
SynNuc$TG_ACSkew = (SynNuc$TG-SynNuc$AC)/(SynNuc$TG+SynNuc$AC); summary(SynNuc$TG_ACSkew)
summary(lm(TG_ACSkew ~ scale(Temperature + 2)+scale(Tm), data = SynNuc))
###################################
######
###################################
rm(list=ls(all=TRUE))
library(ggpubr)
############ Syn mut
unzip("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt.zip")
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep = '\t')
if (file.exists("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")) {file.remove("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")}
kuptsovtable = read.table("../../Body/2Derived/EcologyMammalianTable01_KuptsovA_ver2_Full.txt", sep='\t', header=TRUE)
SynNuc = SynNuc[SynNuc$Gene != 'ND6',]
SynNuc = aggregate(list(SynNuc$NeutralA,SynNuc$NeutralT,SynNuc$NeutralG,SynNuc$NeutralC), by = list(SynNuc$Species), FUN = sum)
names(SynNuc) = c('Species','NeutralA','NeutralT','NeutralG','NeutralC')
SynNuc$FrA = SynNuc$NeutralA / (SynNuc$NeutralA + SynNuc$NeutralT + SynNuc$NeutralG + SynNuc$NeutralC)
SynNuc$FrT = SynNuc$NeutralT / (SynNuc$NeutralA + SynNuc$NeutralT + SynNuc$NeutralG + SynNuc$NeutralC)
SynNuc$FrG = SynNuc$NeutralG / (SynNuc$NeutralA + SynNuc$NeutralT + SynNuc$NeutralG + SynNuc$NeutralC)
SynNuc$FrC = SynNuc$NeutralC / (SynNuc$NeutralA + SynNuc$NeutralT + SynNuc$NeutralG + SynNuc$NeutralC)
kuptsovtable$FrT= NULL
allparameters = merge(kuptsovtable, SynNuc, by="Species")
allparameters$Temper = as.numeric(gsub(",", ".", allparameters$Temperature.C._White2003.2006.other.close.species))
allparameters$GenerationLength_d = as.numeric(gsub(",", ".", allparameters$GenerationLength_d))
summary(allparameters$Temper)
allparameters$TG = allparameters$FrT+allparameters$FrG
allparameters$AC = allparameters$FrA+allparameters$FrC
allparameters$TG_ACSkew = (allparameters$TG-allparameters$AC)/(allparameters$TG+allparameters$AC); summary(allparameters$TG_ACSkew)
summary(lm(TG_ACSkew ~ scale(Temper + 2)+scale(GenerationLength_d), data = SynNuc))
summary(lm(TG_ACSkew ~ scale(Temper + 2)+scale(GenerationLength_d), data = allparameters))
summary(lm(TG_ACSkew ~ scale(Temper)+scale(GenerationLength_d), data = allparameters))
summary(lm(TG_ACSkew ~ log2(Temper)+log2(GenerationLength_d), data = allparameters))
summary(lm(formula = FrT ~ scale(GenerationLength_d)+scale(Hib), data = allparameters))
summary(lm(formula = FrT ~ scale(GenerationLength_d)+scale(Hib.unconfirmedHib), data = allparameters))
ltest = lm(formula = FrT ~ scale(GenerationLength_d)+scale(Daily), data = allparameters)
summary(ltest)
#######Lm ~ Daily
summary(lm(formula = FrT ~ scale(GenerationLength_d)+scale(Daily.unconfirmedDaily), data = allparameters))
allparameters$MarsMono = allparameters$Mars + allparameters$Mono
table(allparameters$MarsMono)
summary(lm(formula = FrT ~ scale(GenerationLength_d)+scale(MarsMono), data = allparameters))
summary(lm(formula = FrT ~ scale(GenerationLength_d)+scale(Temper), data = allparameters))
#######Lm ~ cold
formediantemperature = allparameters[!is.na(allparameters$Temper),]$Temper
coldspeciesnames = allparameters[allparameters$Temper <= mean(formediantemperature) & !is.na(allparameters$Temper),]$Species
allparameters$colddummy = 0
allparameters[allparameters$Species %in% coldspeciesnames,]$colddummy = 1
summary(lm(formula = FrT ~ scale(GenerationLength_d)+scale(colddummy), data = allparameters))
allparameters$allcolddummy = allparameters$Hib.unconfirmedHib + allparameters$Daily.unconfirmedDaily + allparameters$MarsMono + allparameters$colddummy
table(allparameters$allcolddummy)
allparameters[allparameters$allcolddummy > 0,]$allcolddummy = 1
summary(lm(formula = FrT ~ log2(GenerationLength_d)+scale(allcolddummy), data = allparameters))
ltest = lm(formula = FrT  ~ log2(GenerationLength_d), data = allparameters)
summary(ltest)
allparameters$residuals = ltest$residuals ## residuals added
summary(lm(formula = TG_ACSkew ~ log2(GenerationLength_d)+scale(allcolddummy), data = allparameters))
summary(lm(formula = TG_ACSkew ~ scale(GenerationLength_d)+scale(allcolddummy), data = allparameters))
ggscatter(allparameters, x = "GenerationLength_d", y = "TG_ACSkew",
color = "TwoMammaliaGroups", shape = "TwoMammaliaGroups",
palette = c("#08519c", "#de6a85"),
ellipse = TRUE, mean.point = TRUE, add = "reg.line",  xscale = "log2", xlab="Generation Length, log2", ylab="Fraction of A")
allparameters$TwoMammaliaGroups = as.character(allparameters$allcolddummy)
for (i in 1:nrow(allparameters)){
if(allparameters$TwoMammaliaGroups[i] == 0){
allparameters$TwoMammaliaGroups[i] = "Warmer mammals"
}else{
allparameters$TwoMammaliaGroups[i] = "Colder mammals"
}
}
ggscatter(allparameters, x = "GenerationLength_d", y = "TG_ACSkew",
color = "TwoMammaliaGroups", shape = "TwoMammaliaGroups",
palette = c("#08519c", "#de6a85"),
ellipse = TRUE, mean.point = TRUE, add = "reg.line",  xscale = "log2", xlab="Generation Length, log2", ylab="Fraction of A")
pdf("../../Body/4Figures/WholeGenomeAnalyses.EcologyAndMutSpecChordata.Mammals.KuptsovData.FIGURE2D.pdf", width = 9, height = 5.5)
ggscatter(allparameters, x = "GenerationLength_d", y = "FrT",
color = "TwoMammaliaGroups", shape = "TwoMammaliaGroups",
palette = c("#08519c", "#de6a85"),
ellipse = TRUE, mean.point = TRUE, add = "reg.line",  xscale = "log2", xlab="Generation Length, log2", ylab="Fraction of A")
dev.off()
summary(lm(formula = FrT ~ scale(GenerationLength_d)+scale(allcolddummy), data = allparameters))
table(allparameters$GenerationLength_d)
summary(allparameters$GenerationLength_d)
summary(allparameters$Temper)
View(allparameters)
nrow(allparameters[!is.na(allparameters$Temper),])
allparameters$TtoCSkew = (allparameters$FrT-allparameters$FrC)/(allparameters$FrT+allparameters$FrC); summary(allparameters$TtoCSkew)
summary(lm(TtoCSkew ~ scale(Temper)+scale(GenerationLength_d), data = allparameters))
