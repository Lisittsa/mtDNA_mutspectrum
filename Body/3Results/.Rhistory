vec_of_Marsupials_orders = c("Dasyuromorphia", 'Didelphimorphia', "Diprotodontia", "Microbiotheria", "Notoryctemorphia", "Paucituberculata", "Peramelemorphia")
Marsupials = Mammalia[Mammalia$Order %in% vec_of_Marsupials_orders,]
table(Marsupials$Order)
Monotremata = Mammalia[Mammalia$Order == "Monotremata",]
Monotremata
table(Monotremata$Order)
for (i in 1:nrows(Mammalia)){
if (Mammalia$Order[i] %in% vec_of_Marsupials_orders){
Mammalia$Subdivision[i] = "Marsupials"
}else{
Mammalia$Subdivision[i] = "nonMarsupials"
}
}
for (i in 1:nrow(Mammalia)){
if (Mammalia$Order[i] %in% vec_of_Marsupials_orders){
Mammalia$Subdivision[i] = "Marsupials"
}else{
Mammalia$Subdivision[i] = "nonMarsupials"
}
}
names(Mammalia)
table(Mammalia$Subdivision)
for (i in 1:nrow(Mammalia)){
if (Mammalia$Subdivision[i] == "nonMarsupials"){
if (Mammalia$Order[i] == "Monotremata"){
Mammalia$Subdivision[i] = "Monotremata"
}else{
Mammalia$Subdivision[i] = "Placentals"
}
}
}
table(Mammalia$Subdivision)
library(ggpubr)
ggboxplot(Mammalia, "Subdivision", "NeutralA",
fill = "Subdivision", palette =c("#00AFBB", "#E7B800", "#FC4E07"))
ggboxplot(Mammalia, "Subdivision", "NeutralC",
fill = "Subdivision", palette =c("#00AFBB", "#E7B800", "#FC4E07"))
ggboxplot(Mammalia, "Subdivision", "NeutralT",
fill = "Subdivision", palette =c("#00AFBB", "#E7B800", "#FC4E07"))
ggboxplot(Mammalia, "Subdivision", "NeutralC",
fill = "Subdivision", palette =c("#00AFBB", "#E7B800", "#FC4E07"))
ggboxplot(Mammalia, "Subdivision", "Maximum.longevity..yrs.",
fill = "Subdivision", palette =c("#00AFBB", "#E7B800", "#FC4E07"))
ggboxplot(Mammalia, "Subdivision", "Maximum.longevity..yrs.",
ggboxplot(Mammalia, "Subdivision", "Maximum.longevity..yrs.",
ggboxplot(Mammalia, "Subdivision", "Maximum.longevity..yrs.",
ggboxplot(Mammalia, "Subdivision", "Maximum.longevity..yrs.",
fill = "Subdivision", palette =c("#e34a33", "#fdbb84", "#fee8c8"))
ggboxplot(Mammalia, "Subdivision", "NeutralT",
fill = "Subdivision", palette =c("#2b8cbe", "#a6bddb", "#ece7f2"))
ggboxplot(Mammalia, "Subdivision", "NeutralC",
ggboxplot(Mammalia, "Subdivision", "NeutralC", fill = "Subdivision", palette =c("#2ca25f", "#99d8c9", "#e5f5f9"))
ggboxplot(Mammalia, "Subdivision", "Maximum.longevity..yrs.", fill = "Subdivision", palette =c("#e34a33", "#fdbb84", "#fee8c8"))
pdf("../../Body/4Figures/WholeGenomeAnalyses.NoOverlap.Placentals_Monotremata_Marsupials_A_G_Longevity.pdf", height = 20, width = 40)
ggboxplot(Mammalia, "Subdivision", "NeutralT",
fill = "Subdivision", palette =c("#2b8cbe", "#a6bddb", "#ece7f2"))
ggboxplot(Mammalia, "Subdivision", "NeutralC", fill = "Subdivision", palette =c("#2ca25f", "#99d8c9", "#e5f5f9"))
ggboxplot(Mammalia, "Subdivision", "Maximum.longevity..yrs.", fill = "Subdivision", palette =c("#e34a33", "#fdbb84", "#fee8c8"))
dev.off()
ggboxplot(Mammalia, "Subdivision", "Maximum.longevity..yrs.", fill = "Subdivision", palette =c("#e34a33", "#fdbb84", "#fee8c8"))
table(Mammalia$Subdivision)
Mammalia$
library(ggpubr)
Mammalia$Maximum.longevity..yrs.
Mammalia= Mammalia[!is.na(Mammalia$Maximum.longevity..yrs.),]
ggboxplot(Mammalia, "Subdivision", "Maximum.longevity..yrs.", fill = "Subdivision", palette =c("#e34a33", "#fdbb84", "#fee8c8"))
install.packages("ape")
install.packages(c("caper", "pacman"))
rm(list=ls(all=TRUE))
library(gridExtra) # install.packages("gridExtra")
library(grid)
############ Syn mut
unzip("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt.zip", exdir = "../../Body/3Results/")
getwd()
############ Syn mut
unzip("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt.zip", exdir = "../../Body/3Results/")
exdir = "../../Body/3Results/"
getwd()
settwd("../../Body/3Results/")
setwd("../../Body/3Results/")
getwd()
############ Syn mut
unzip("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt.zip", exdir = "../../Body/3Results/")
############ Syn mut
unzip("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt.zip")
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep = '\t')
if (file.exists("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")) file.remove("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")
if (file.exists("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")){file.remove("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")}
SynNuc
############ Syn mut
unzip("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt.zip")
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep = '\t')
if (file.exists("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")){file.remove("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")}
### make ND6 complementary:
NotND6 = SynNuc[SynNuc$Gene != 'ND6',]
ND6 = SynNuc[SynNuc$Gene == 'ND6',]
A = ND6$NeutralT
T = ND6$NeutralA
G = ND6$NeutralC
C = ND6$NeutralG
ND6$NeutralA = A
ND6$NeutralT = T
ND6$NeutralG = G
ND6$NeutralC = C
SynNuc = rbind(NotND6,ND6)
### count fraction of nucleotides
SynNuc$FrA = SynNuc$NeutralA / (SynNuc$NeutralA + SynNuc$NeutralT + SynNuc$NeutralG + SynNuc$NeutralC)
SynNuc$FrT = SynNuc$NeutralT / (SynNuc$NeutralA + SynNuc$NeutralT + SynNuc$NeutralG + SynNuc$NeutralC)
SynNuc$FrG = SynNuc$NeutralG / (SynNuc$NeutralA + SynNuc$NeutralT + SynNuc$NeutralG + SynNuc$NeutralC)
SynNuc$FrC = SynNuc$NeutralC / (SynNuc$NeutralA + SynNuc$NeutralT + SynNuc$NeutralG + SynNuc$NeutralC)
SynNuc$TAXON = SynNuc$Class
VecOfTaxa = unique(SynNuc$TAXON)
VecOfTaxa
########### TEMPERATURE FISHES
TEMPE = read.table('../../Body/1Raw/FishBaseTemperature.txt', header = TRUE)
class(TEMPE$Temperature)
class(TEMPE$Species)
############ merge (work only with mammals since GT is only for mammals)
SynNucTEMPE = merge(TEMPE,SynNuc)
length(unique(SynNucGT$Species))  # 649 species
length(unique(SynNucTEMPE$Species))  # 649 species
table(SynNucTEMPE$TAXON)
View(SynNucTEMPE)
averageTEMPE = aggregate(Temperature ~ ., mean, data = TEMPE)
############ merge (work only with mammals since GT is only for mammals)
SynNucTEMPE = merge(TEMPE,SynNuc)
length(unique(SynNucTEMPE$Species))  # 333 species
table(SynNucTEMPE$TAXON)
View(SynNucTEMPE)
View(TEMPE)
TEMPE = aggregate(Temperature ~ ., mean, data = TEMPE)
View(TEMPE)
############ merge (work only with mammals since GT is only for mammals)
SynNucTEMPE = merge(TEMPE,SynNuc)
length(unique(SynNucTEMPE$Species))  # 333 species
table(SynNucTEMPE$TAXON)
########### question 1: which nucleotides better correlate with GT: log2(GT) = 11 - 0.29*scale(FrT) + 0.33*scale(FrC) (in line with our mutational spectrum result that T->C correlates with generation time)
AGG = aggregate(list(SynNucTEMPE$FrA,SynNucTEMPE$FrT,SynNucTEMPE$FrG,SynNucTEMPE$FrC), by = list(SynNucTEMPE$Species,SynNucTEMPE$Temperature), FUN = mean)
names(AGG) = c('Species','Temperature','FrA','FrT','FrG','FrC')
View(AGG)
pdf("../../Body/4Figures/WholeGenomeAnalyses.MutagensWithinFishesNoOverlap.R.01.pdf", width = 50, height = 30)
ColG = rgb(0.1,0.1,0.1,0.2)
ColT = rgb(0.1,0.1,1,0.2)
ColC = rgb(0.1,1,0.1,0.2)
ColA = rgb(1,0.1,0.1,0.2)
par(oma = c(2, 2, 0, 0), cex.main = 2, cex.lab = 1.5, cex = 6, pch =16)
plot(log2(AGG$Temperature),AGG$FrA, col = ColA, ylim = c(0,0.6), xlab = '', ylab = '', main = ''); par(new=TRUE);
plot(log2(AGG$Temperature),AGG$FrT, col = ColT, ylim = c(0,0.6), xlab = '', ylab = '', main = ''); par(new=TRUE);
plot(log2(AGG$Temperature),AGG$FrG, col = ColG, ylim = c(0,0.6), xlab = '', ylab = '', main = ''); par(new=TRUE);
plot(log2(AGG$Temperature),AGG$FrC, col = ColC, ylim = c(0,0.6), xlab = 'log2(Temperature)', ylab = 'Nucleotide Content', main = ''); par(new=TRUE);
abline(h =0.25, lt = 1, col = 'red');
legend("topright",legend=c('A','C','T','G'), col = c(ColA,ColC,ColT,ColG), pch = 16, horiz = FALSE)
par(mfrow=c(2,2), oma = c(0, 0, 2, 0),cex.main = 2, cex.lab = 2, cex = 2, pch = 16)
plot(log2(AGG$Temperature),AGG$FrA, col = ColA, ylim = c(0,0.6), xlab = 'log2(GT)', main = 'FrA', cex = 2); abline(h =0.25, lt = 2, col = 'red')
a <-lm(AGG$FrA ~ log2(AGG$Temperature)); summary(a); abline(a, lwd = 2, col = 'red')
plot(log2(AGG$Temperature),AGG$FrT, col = ColT, ylim = c(0,0.6), xlab = 'log2(GT)', main = 'FrT', cex = 2); abline(h =0.25, lt = 2, col = 'red')
a <-lm(AGG$FrT ~ log2(AGG$Temperature)); summary(a); abline(a, lwd = 5, col = 'dark blue')
plot(log2(AGG$Temperature),AGG$FrG, col = ColG, ylim = c(0,0.6), xlab = 'log2(GT)', main = 'FrG', cex = 2); abline(h =0.25, lt = 2, col = 'red')
a <-lm(AGG$FrG ~ log2(AGG$Temperature)); summary(a); abline(a, lwd = 2, col = 'red')
plot(log2(AGG$Temperature),AGG$FrC, col = ColC, ylim = c(0,0.6), xlab = 'log2(GT)', main = 'FrC', cex = 2); abline(h =0.25, lt = 2, col = 'red')
a <-lm(AGG$FrC ~ log2(AGG$Temperature)); summary(a); abline(a, lwd = 5, col = 'dark green')
mtext("log2(GT) = 11.08294 - 0.12 scale(FrT) + 0.45 scale(FrC)", outer = TRUE, cex = 1.5)
dev.off()
pdf("../../Body/4Figures/WholeGenomeAnalyses.MutagensWithinFishesNoOverlap.Tables.R.01.pdf")
Res = c()
AT = cor.test(AGG$FrA,AGG$FrT, method = 'spearman'); Res = c('AT', as.numeric(AT[3]), as.numeric(AT[4]));
AG = cor.test(AGG$FrA,AGG$FrG, method = 'spearman'); Res = rbind(Res, c('AG', as.numeric(AG[3]), as.numeric(AG[4])));
AC = cor.test(AGG$FrA,AGG$FrC, method = 'spearman'); Res = rbind(Res, c('AC', as.numeric(AC[3]), as.numeric(AC[4])));
TC = cor.test(AGG$FrT,AGG$FrC, method = 'spearman'); Res = rbind(Res, c('TC', as.numeric(TC[3]), as.numeric(TC[4])));
TG = cor.test(AGG$FrT,AGG$FrG, method = 'spearman'); Res = rbind(Res, c('TG', as.numeric(TG[3]), as.numeric(TG[4])));
CG = cor.test(AGG$FrC,AGG$FrG, method = 'spearman'); Res = rbind(Res, c('CG', as.numeric(CG[3]), as.numeric(CG[4])));
names(Res) = c('Subst', 'Pvalue','SpearmanRho')
grid.newpage()
grid.table(Res)
dev.off()
pdf("../../Body/4Figures/WholeGenomeAnalyses.MutagensWithinFishesNoOverlap.R.01.pdf", width = 50, height = 30)
#ColG = rainbow(4)[1]
#ColT = rainbow(4)[2]
#ColC = rainbow(4)[3]
#ColA = rainbow(4)[4]
ColG = rgb(0.1,0.1,0.1,0.2)
ColT = rgb(0.1,0.1,1,0.2)
ColC = rgb(0.1,1,0.1,0.2)
ColA = rgb(1,0.1,0.1,0.2)
par(oma = c(2, 2, 0, 0), cex.main = 2, cex.lab = 1.5, cex = 6, pch =16)
plot(log2(AGG$Temperature),AGG$FrA, col = ColA, ylim = c(0,0.6), xlab = '', ylab = '', main = ''); par(new=TRUE);
plot(log2(AGG$Temperature),AGG$FrT, col = ColT, ylim = c(0,0.6), xlab = '', ylab = '', main = ''); par(new=TRUE);
plot(log2(AGG$Temperature),AGG$FrG, col = ColG, ylim = c(0,0.6), xlab = '', ylab = '', main = ''); par(new=TRUE);
plot(log2(AGG$Temperature),AGG$FrC, col = ColC, ylim = c(0,0.6), xlab = 'log2(Temperature)', ylab = 'Nucleotide Content', main = ''); par(new=TRUE);
abline(h =0.25, lt = 1, col = 'red');
legend("topright",legend=c('A','C','T','G'), col = c(ColA,ColC,ColT,ColG), pch = 16, horiz = FALSE)
par(mfrow=c(2,2), oma = c(0, 0, 2, 0),cex.main = 2, cex.lab = 2, cex = 2, pch = 16)
plot(log2(AGG$Temperature),AGG$FrA, col = ColA, ylim = c(0,0.6), xlab = 'log2(T)', main = 'FrA', cex = 2); abline(h =0.25, lt = 2, col = 'red')
a <-lm(AGG$FrA ~ log2(AGG$Temperature)); summary(a); abline(a, lwd = 2, col = 'red')
plot(log2(AGG$Temperature),AGG$FrT, col = ColT, ylim = c(0,0.6), xlab = 'log2(T)', main = 'FrT', cex = 2); abline(h =0.25, lt = 2, col = 'red')
a <-lm(AGG$FrT ~ log2(AGG$Temperature)); summary(a); abline(a, lwd = 5, col = 'dark blue')
plot(log2(AGG$Temperature),AGG$FrG, col = ColG, ylim = c(0,0.6), xlab = 'log2(T)', main = 'FrG', cex = 2); abline(h =0.25, lt = 2, col = 'red')
a <-lm(AGG$FrG ~ log2(AGG$Temperature)); summary(a); abline(a, lwd = 2, col = 'red')
plot(log2(AGG$Temperature),AGG$FrC, col = ColC, ylim = c(0,0.6), xlab = 'log2(T)', main = 'FrC', cex = 2); abline(h =0.25, lt = 2, col = 'red')
a <-lm(AGG$FrC ~ log2(AGG$Temperature)); summary(a); abline(a, lwd = 5, col = 'dark green')
mtext("log2(GT) = 11.08294 - 0.12 scale(FrT) + 0.45 scale(FrC)", outer = TRUE, cex = 1.5)
dev.off()
pdf("../../Body/4Figures/WholeGenomeAnalyses.MutagensWithinFishesNoOverlap.Tables.R.01.pdf")
Res = c()
AT = cor.test(AGG$FrA,AGG$FrT, method = 'spearman'); Res = c('AT', as.numeric(AT[3]), as.numeric(AT[4]));
AG = cor.test(AGG$FrA,AGG$FrG, method = 'spearman'); Res = rbind(Res, c('AG', as.numeric(AG[3]), as.numeric(AG[4])));
AC = cor.test(AGG$FrA,AGG$FrC, method = 'spearman'); Res = rbind(Res, c('AC', as.numeric(AC[3]), as.numeric(AC[4])));
TC = cor.test(AGG$FrT,AGG$FrC, method = 'spearman'); Res = rbind(Res, c('TC', as.numeric(TC[3]), as.numeric(TC[4])));
TG = cor.test(AGG$FrT,AGG$FrG, method = 'spearman'); Res = rbind(Res, c('TG', as.numeric(TG[3]), as.numeric(TG[4])));
CG = cor.test(AGG$FrC,AGG$FrG, method = 'spearman'); Res = rbind(Res, c('CG', as.numeric(CG[3]), as.numeric(CG[4])));
names(Res) = c('Subst', 'Pvalue','SpearmanRho')
grid.newpage()
grid.table(Res)
dev.off()
pdf("../../Body/4Figures/WholeGenomeAnalyses.MutagensWithinFishesNoOverlap.R.01.pdf", width = 50, height = 30)
ColG = rgb(0.1,0.1,0.1,0.2)
ColT = rgb(0.1,0.1,1,0.2)
ColC = rgb(0.1,1,0.1,0.2)
ColA = rgb(1,0.1,0.1,0.2)
par(oma = c(2, 2, 0, 0), cex.main = 2, cex.lab = 1.5, cex = 6, pch =16)
plot(log2(AGG$Temperature),AGG$FrA, col = ColA, ylim = c(0,0.6), xlab = '', ylab = '', main = ''); par(new=TRUE);
plot(log2(AGG$Temperature),AGG$FrT, col = ColT, ylim = c(0,0.6), xlab = '', ylab = '', main = ''); par(new=TRUE);
plot(log2(AGG$Temperature),AGG$FrG, col = ColG, ylim = c(0,0.6), xlab = '', ylab = '', main = ''); par(new=TRUE);
plot(log2(AGG$Temperature),AGG$FrC, col = ColC, ylim = c(0,0.6), xlab = 'log2(Temperature)', ylab = 'Nucleotide Content', main = ''); par(new=TRUE);
abline(h =0.25, lt = 1, col = 'red');
legend("topright",legend=c('A','C','T','G'), col = c(ColA,ColC,ColT,ColG), pch = 16, horiz = FALSE)
par(mfrow=c(2,2), oma = c(0, 0, 2, 0),cex.main = 2, cex.lab = 2, cex = 2, pch = 16)
plot(log2(AGG$Temperature),AGG$FrA, col = ColA, ylim = c(0,0.6), xlab = 'log2(GT)', main = 'FrA', cex = 2); abline(h =0.25, lt = 2, col = 'red')
a <-lm(AGG$FrA ~ log2(AGG$Temperature)); summary(a); abline(a, lwd = 2, col = 'red')
plot(log2(AGG$Temperature),AGG$FrT, col = ColT, ylim = c(0,0.6), xlab = 'log2(GT)', main = 'FrT', cex = 2); abline(h =0.25, lt = 2, col = 'red')
a <-lm(AGG$FrT ~ log2(AGG$Temperature)); summary(a); abline(a, lwd = 5, col = 'dark blue')
plot(log2(AGG$Temperature),AGG$FrG, col = ColG, ylim = c(0,0.6), xlab = 'log2(GT)', main = 'FrG', cex = 2); abline(h =0.25, lt = 2, col = 'red')
a <-lm(AGG$FrG ~ log2(AGG$Temperature)); summary(a); abline(a, lwd = 2, col = 'red')
plot(log2(AGG$Temperature),AGG$FrC, col = ColC, ylim = c(0,0.6), xlab = 'log2(GT)', main = 'FrC', cex = 2); abline(h =0.25, lt = 2, col = 'red')
a <-lm(AGG$FrC ~ log2(AGG$Temperature)); summary(a); abline(a, lwd = 5, col = 'dark green')
mtext("log2(GT) = 11.08294 - 0.12 scale(FrT) + 0.45 scale(FrC)", outer = TRUE, cex = 1.5)
dev.off()
pdf("../../Body/4Figures/WholeGenomeAnalyses.MutagensWithinFishesNoOverlap.R.01.pdf", width = 50, height = 30)
ColG = rgb(0.1,0.1,0.1,0.2)
ColT = rgb(0.1,0.1,1,0.2)
ColC = rgb(0.1,1,0.1,0.2)
ColA = rgb(1,0.1,0.1,0.2)
par(oma = c(2, 2, 0, 0), cex.main = 2, cex.lab = 1.5, cex = 6, pch =16)
plot(log2(AGG$Temperature),AGG$FrA, col = ColA, ylim = c(0,0.6), xlab = '', ylab = '', main = ''); par(new=TRUE);
plot(log2(AGG$Temperature),AGG$FrT, col = ColT, ylim = c(0,0.6), xlab = '', ylab = '', main = ''); par(new=TRUE);
plot(log2(AGG$Temperature),AGG$FrG, col = ColG, ylim = c(0,0.6), xlab = '', ylab = '', main = ''); par(new=TRUE);
plot(log2(AGG$Temperature),AGG$FrC, col = ColC, ylim = c(0,0.6), xlab = 'log2(Temperature)', ylab = 'Nucleotide Content', main = ''); par(new=TRUE);
abline(h =0.25, lt = 1, col = 'red');
legend("topright",legend=c('A','C','T','G'), col = c(ColA,ColC,ColT,ColG), pch = 16, horiz = FALSE)
par(mfrow=c(2,2), oma = c(0, 0, 2, 0),cex.main = 2, cex.lab = 2, cex = 2, pch = 16)
plot(log2(AGG$Temperature),AGG$FrA, col = ColA, ylim = c(0,0.6), xlab = 'log2(GT)', main = 'FrA', cex = 2); abline(h =0.25, lt = 2, col = 'red')
a <-lm(AGG$FrA ~ log2(AGG$Temperature)); summary(a); abline(a, lwd = 2, col = 'red')
plot(log2(AGG$Temperature),AGG$FrT, col = ColT, ylim = c(0,0.6), xlab = 'log2(GT)', main = 'FrT', cex = 2); abline(h =0.25, lt = 2, col = 'red')
a <-lm(AGG$FrT ~ log2(AGG$Temperature)); summary(a); abline(a, lwd = 5, col = 'dark blue')
plot(log2(AGG$Temperature),AGG$FrG, col = ColG, ylim = c(0,0.6), xlab = 'log2(GT)', main = 'FrG', cex = 2); abline(h =0.25, lt = 2, col = 'red')
a <-lm(AGG$FrG ~ log2(AGG$Temperature)); summary(a); abline(a, lwd = 2, col = 'red')
plot(log2(AGG$Temperature),AGG$FrC, col = ColC, ylim = c(0,0.6), xlab = 'log2(GT)', main = 'FrC', cex = 2); abline(h =0.25, lt = 2, col = 'red')
a <-lm(AGG$FrC ~ log2(AGG$Temperature)); summary(a); abline(a, lwd = 5, col = 'dark green')
########### question 2: which genes better correlate with GT (why T in ATP6,COX3 and ND4 do not correlate with GT and high absolute value - fast replication, no tRNA before them?)
## T is negatively and C is positively (T->C)
VecOfGenes = c('COX1','COX2','ATP8','ATP6','COX3','ND3','ND4L','ND4','ND5','ND6','CytB','ND1','ND2') # ND1 ND2 ND6
dev.off()
rm(list=ls(all=TRUE))
setwd("../../Body/3Results/")
getwd()
############ Syn mut
unzip("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt.zip")
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep = '\t')
if (file.exists("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")){file.remove("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")}
names(SynNuc)
### make ND6 complementary:
NotND6 = SynNuc[SynNuc$Gene != 'ND6',]
ND6 = SynNuc[SynNuc$Gene == 'ND6',]
A = ND6$NeutralT
T = ND6$NeutralA
G = ND6$NeutralC
C = ND6$NeutralG
ND6$NeutralA = A
ND6$NeutralT = T
ND6$NeutralG = G
ND6$NeutralC = C
SynNuc = rbind(NotND6,ND6)
### count fraction of nucleotides
SynNuc$FrA = SynNuc$NeutralA / (SynNuc$NeutralA + SynNuc$NeutralT + SynNuc$NeutralG + SynNuc$NeutralC)
SynNuc$FrT = SynNuc$NeutralT / (SynNuc$NeutralA + SynNuc$NeutralT + SynNuc$NeutralG + SynNuc$NeutralC)
SynNuc$FrG = SynNuc$NeutralG / (SynNuc$NeutralA + SynNuc$NeutralT + SynNuc$NeutralG + SynNuc$NeutralC)
SynNuc$FrC = SynNuc$NeutralC / (SynNuc$NeutralA + SynNuc$NeutralT + SynNuc$NeutralG + SynNuc$NeutralC)
SynNuc$TAXON = SynNuc$Class
VecOfTaxa = unique(SynNuc$TAXON)
########### TEMPERATURE FISHES
TEMPE = read.table('../../Body/1Raw/FishBaseTemperature.txt', header = TRUE)
class(TEMPE$Temperature)
class(TEMPE$Species)
TEMPE = aggregate(Temperature ~ ., mean, data = TEMPE)
############ merge (work only with fishes)
SynNucTEMPE = merge(TEMPE,SynNuc)
length(unique(SynNucTEMPE$Species))  # 333 species
table(SynNucTEMPE$TAXON)
########### question 1: which nucleotides better correlate with GT:
AGG = aggregate(list(SynNucTEMPE$FrA,SynNucTEMPE$FrT,SynNucTEMPE$FrG,SynNucTEMPE$FrC), by = list(SynNucTEMPE$Species,SynNucTEMPE$Temperature), FUN = mean)
names(AGG) = c('Species','Temperature','FrA','FrT','FrG','FrC')
pdf("../../Body/4Figures/WholeGenomeAnalyses.MutagensWithinFishesNoOverlap.R.01.pdf", width = 50, height = 30)
ColG = rgb(0.1,0.1,0.1,0.2)
ColT = rgb(0.1,0.1,1,0.2)
ColC = rgb(0.1,1,0.1,0.2)
ColA = rgb(1,0.1,0.1,0.2)
par(oma = c(2, 2, 0, 0), cex.main = 2, cex.lab = 1.5, cex = 6, pch =16)
plot(log2(AGG$Temperature),AGG$FrA, col = ColA, ylim = c(0,0.6), xlab = '', ylab = '', main = ''); par(new=TRUE);
plot(log2(AGG$Temperature),AGG$FrT, col = ColT, ylim = c(0,0.6), xlab = '', ylab = '', main = ''); par(new=TRUE);
plot(log2(AGG$Temperature),AGG$FrG, col = ColG, ylim = c(0,0.6), xlab = '', ylab = '', main = ''); par(new=TRUE);
plot(log2(AGG$Temperature),AGG$FrC, col = ColC, ylim = c(0,0.6), xlab = 'log2(Temperature)', ylab = 'Nucleotide Content', main = ''); par(new=TRUE);
abline(h =0.25, lt = 1, col = 'red');
legend("topright",legend=c('A','C','T','G'), col = c(ColA,ColC,ColT,ColG), pch = 16, horiz = FALSE)
par(mfrow=c(2,2), oma = c(0, 0, 2, 0),cex.main = 2, cex.lab = 2, cex = 2, pch = 16)
plot(log2(AGG$Temperature),AGG$FrA, col = ColA, ylim = c(0,0.6), xlab = 'log2(T)', main = 'FrA', cex = 2); abline(h =0.25, lt = 2, col = 'red')
a <-lm(AGG$FrA ~ log2(AGG$Temperature)); summary(a); abline(a, lwd = 2, col = 'red')
plot(log2(AGG$Temperature),AGG$FrT, col = ColT, ylim = c(0,0.6), xlab = 'log2(T)', main = 'FrT', cex = 2); abline(h =0.25, lt = 2, col = 'red')
a <-lm(AGG$FrT ~ log2(AGG$Temperature)); summary(a); abline(a, lwd = 5, col = 'dark blue')
plot(log2(AGG$Temperature),AGG$FrG, col = ColG, ylim = c(0,0.6), xlab = 'log2(T)', main = 'FrG', cex = 2); abline(h =0.25, lt = 2, col = 'red')
a <-lm(AGG$FrG ~ log2(AGG$Temperature)); summary(a); abline(a, lwd = 2, col = 'red')
plot(log2(AGG$Temperature),AGG$FrC, col = ColC, ylim = c(0,0.6), xlab = 'log2(T)', main = 'FrC', cex = 2); abline(h =0.25, lt = 2, col = 'red')
a <-lm(AGG$FrC ~ log2(AGG$Temperature)); summary(a); abline(a, lwd = 5, col = 'dark green')
dev.off()
pdf("../../Body/4Figures/WholeGenomeAnalyses.MutagensWithinFishesNoOverlap.Tables.R.01.pdf")
Res = c()
AT = cor.test(AGG$FrA,AGG$FrT, method = 'spearman'); Res = c('AT', as.numeric(AT[3]), as.numeric(AT[4]));
AG = cor.test(AGG$FrA,AGG$FrG, method = 'spearman'); Res = rbind(Res, c('AG', as.numeric(AG[3]), as.numeric(AG[4])));
AC = cor.test(AGG$FrA,AGG$FrC, method = 'spearman'); Res = rbind(Res, c('AC', as.numeric(AC[3]), as.numeric(AC[4])));
TC = cor.test(AGG$FrT,AGG$FrC, method = 'spearman'); Res = rbind(Res, c('TC', as.numeric(TC[3]), as.numeric(TC[4])));
TG = cor.test(AGG$FrT,AGG$FrG, method = 'spearman'); Res = rbind(Res, c('TG', as.numeric(TG[3]), as.numeric(TG[4])));
CG = cor.test(AGG$FrC,AGG$FrG, method = 'spearman'); Res = rbind(Res, c('CG', as.numeric(CG[3]), as.numeric(CG[4])));
names(Res) = c('Subst', 'Pvalue','SpearmanRho')
grid.newpage()
grid.table(Res)
dev.off()
rm(list=ls(all=TRUE))
###TEMPERATURE another table
MUT = read.table('../../Body/3Results/VertebratePolymorphisms.MutSpecData.OnlyFourFoldDegAllGenes.txt', header = TRUE)
class(MUT$A_T)
class(MUT$Species)
TEMPE = read.table('../../Body/1Raw/FishBaseTemperature2.txt')                         # tempetature table
colnames(TEMPE)=c("Species", "Temperature")
TEMPE$Species=gsub(" ", "_", TEMPE$Species)
class(TEMPE$Temperature)
class(TEMPE$Species)
### calculating average for repeating species in TEMPE
averageTEMPE = aggregate(Temperature ~ ., mean, data = TEMPE)
averageTemperMut = merge(MUT,averageTEMPE)
######MATURITY
MATU = read.table('../../Body/1Raw/FishBaseLmTm.txt')
colnames(MATU)=c("Species", "Lm", "Tm")
MATU$Species=gsub(" ", "_", MATU$Species)
MATU=MATU[!is.na(MATU$Tm),]                           #maturity table
MATU$Lm = NULL
MATU = aggregate(Tm ~ ., mean, data = MATU)
allparameters=merge(averageTemperMut, MATU)
ltest = lm(formula = T_C ~ scale(Temperature)*scale(Tm), data = allparameters)
summary(ltest)
rm(list=ls(all=TRUE))
### read data
MUT = read.table('../../Body/3Results/VertebratePolymorphisms.MutSpecData.OnlyFourFoldDegAllGenes.txt', header = TRUE)
class(MUT$A_T)
class(MUT$Species)
TEMPE = read.table('../../Body/1Raw/FishBaseTemperature.txt', header = TRUE)
class(TEMPE$Temperature)
class(TEMPE$Species)
### calculating average for repeating species in TEMPE
averageTEMPE = aggregate(Temperature ~ ., mean, data = TEMPE)
### temperature in fishes
TemperMut = merge(MUT,TEMPE)   # 1170 rows
averageTemperMut = merge(MUT,averageTEMPE)  # 128 rows
###### Temperature ~ T_C
cor.test(averageTemperMut$T_C,averageTemperMut$Temperature, method = 'spearman')
###### Temperature ~ T_C
a = cor.test(averageTemperMut$T_C,averageTemperMut$Temperature, method = 'spearman')
summary(a)
###### Temperature ~ T_C
cor.test(averageTemperMut$T_C,averageTemperMut$Temperature, method = 'spearman')
ltest = lm(formula = T_C ~ scale(Temperature) + scale(Tm), data = allparameters)
rm(list=ls(all=TRUE))
###TEMPERATURE another table
MUT = read.table('../../Body/3Results/VertebratePolymorphisms.MutSpecData.OnlyFourFoldDegAllGenes.txt', header = TRUE)
class(MUT$A_T)
class(MUT$Species)
TEMPE = read.table('../../Body/1Raw/FishBaseTemperature2.txt')                         # tempetature table
colnames(TEMPE)=c("Species", "Temperature")
TEMPE$Species=gsub(" ", "_", TEMPE$Species)
class(TEMPE$Temperature)
class(TEMPE$Species)
### calculating average for repeating species in TEMPE
averageTEMPE = aggregate(Temperature ~ ., mean, data = TEMPE)
averageTemperMut = merge(MUT,averageTEMPE)
######MATURITY
MATU = read.table('../../Body/1Raw/FishBaseLmTm.txt')
colnames(MATU)=c("Species", "Lm", "Tm")
MATU$Species=gsub(" ", "_", MATU$Species)
MATU=MATU[!is.na(MATU$Tm),]                           #maturity table
MATU$Lm = NULL
MATU = aggregate(Tm ~ ., mean, data = MATU)
allparameters=merge(averageTemperMut, MATU)
ltest = lm(formula = T_C ~ scale(Temperature) + scale(Tm), data = allparameters)
summary(ltest)
rm(list=ls(all=TRUE))
### read data
MUT = read.table('../../Body/3Results/VertebratePolymorphisms.MutSpecData.OnlyFourFoldDegAllGenes.txt', header = TRUE)
class(MUT$A_T)
class(MUT$Species)
TEMPE = read.table('../../Body/1Raw/FishBaseTemperature2.txt', header = TRUE)
class(TEMPE$Temperature)
class(TEMPE$Species)
### calculating average for repeating species in TEMPE
averageTEMPE = aggregate(Temperature ~ ., mean, data = TEMPE)
### temperature in fishes
TemperMut = merge(MUT,TEMPE)   # 1170 rows
averageTemperMut = merge(MUT,averageTEMPE)  # 128 rows
###### Temperature ~ T_C
cor.test(averageTemperMut$T_C,averageTemperMut$Temperature, method = 'spearman')
rm(list=ls(all=TRUE))
### read data
MUT = read.table('../../Body/3Results/VertebratePolymorphisms.MutSpecData.OnlyFourFoldDegAllGenes.txt', header = TRUE)
class(MUT$A_T)
class(MUT$Species)
TEMPE = read.table('../../Body/1Raw/FishBaseTemperature2.txt', header = TRUE)
class(TEMPE$Temperature)
class(TEMPE$Species)
### calculating average for repeating species in TEMPE
averageTEMPE = aggregate(Temperature ~ ., mean, data = TEMPE)
rm(list=ls(all=TRUE))
###TEMPERATURE another table
MUT = read.table('../../Body/3Results/VertebratePolymorphisms.MutSpecData.OnlyFourFoldDegAllGenes.txt', header = TRUE)
class(MUT$A_T)
class(MUT$Species)
TEMPE = read.table('../../Body/1Raw/FishBaseTemperature2.txt')                         # tempetature table
View(TEMPE)
TEMPE = read.table('../../Body/1Raw/FishBaseTemperature.txt')                         # tempetature table
TEMPE = read.table('../../Body/1Raw/FishBaseTemperature.txt', header = TRUE)                         # tempetature table
class(TEMPE$Temperature)
class(TEMPE$Species)
### calculating average for repeating species in TEMPE
averageTEMPE = aggregate(Temperature ~ ., mean, data = TEMPE)
averageTemperMut = merge(MUT,averageTEMPE)
######MATURITY
MATU = read.table('../../Body/1Raw/FishBaseLmTm.txt')
colnames(MATU)=c("Species", "Lm", "Tm")
MATU$Species=gsub(" ", "_", MATU$Species)
MATU=MATU[!is.na(MATU$Tm),]                           #maturity table
MATU$Lm = NULL
MATU = aggregate(Tm ~ ., mean, data = MATU)
allparameters=merge(averageTemperMut, MATU)
ltest = lm(formula = T_C ~ scale(Temperature)*scale(Tm), data = allparameters)
summary(ltest)
ltest = lm(formula = T_C ~ scale(Temperature) + scale(Tm), data = allparameters)
summary(ltest)
#Call:
#Residuals:
#Residuals:
#  Min        1Q    Median        3Q       Max
#Coefficients:
#Coefficients:
#  Estimate Std. Error t value Pr(>|t|)
#Coefficients:
#  Estimate Std. Error t value Pr(>|t|)
#(Intercept)         0.118791   0.010158  11.694 1.06e-12 ***
#Coefficients:
#  Estimate Std. Error t value Pr(>|t|)
#(Intercept)         0.118791   0.010158  11.694 1.06e-12 ***
#  scale(Temperature)  0.024524   0.010529   2.329   0.0268 *
#Coefficients:
#  Estimate Std. Error t value Pr(>|t|)
#(Intercept)         0.118791   0.010158  11.694 1.06e-12 ***
#  scale(Temperature)  0.024524   0.010529   2.329   0.0268 *
#  scale(Tm)          -0.007043   0.010529  -0.669   0.5086
#Coefficients:
#  Estimate Std. Error t value Pr(>|t|)
#(Intercept)         0.118791   0.010158  11.694 1.06e-12 ***
#  scale(Temperature)  0.024524   0.010529   2.329   0.0268 *
#  scale(Tm)          -0.007043   0.010529  -0.669   0.5086
#---
#Residual standard error: 0.05835 on 30 degrees of freedom
#Residual standard error: 0.05835 on 30 degrees of freedom
#Multiple R-squared:  0.1841,	Adjusted R-squared:  0.1297
#Residual standard error: 0.05835 on 30 degrees of freedom
#Multiple R-squared:  0.1841,	Adjusted R-squared:  0.1297
#F-statistic: 3.384 on 2 and 30 DF,  p-value: 0.04729
#Residual standard error: 0.05835 on 30 degrees of freedom
#Multiple R-squared:  0.1841,	Adjusted R-squared:  0.1297
#F-statistic: 3.384 on 2 and 30 DF,  p-value: 0.04729
ltest = lm(formula = T_C ~ scale(Temperature)*scale(Tm), data = allparameters)
summary(ltest)
ltest = lm(formula = T_C ~ scale(Temperature) + scale(Tm), data = allparameters)
summary(ltest)
rm(list=ls(all=TRUE))
### read data
MUT = read.table('../../Body/3Results/VertebratePolymorphisms.MutSpecData.OnlyFourFoldDegAllGenes.txt', header = TRUE)
class(MUT$A_T)
class(MUT$Species)
TEMPE = read.table('../../Body/1Raw/FishBaseTemperature.txt', header = TRUE)
class(TEMPE$Temperature)
class(TEMPE$Species)
### calculating average for repeating species in TEMPE
averageTEMPE = aggregate(Temperature ~ ., mean, data = TEMPE)
### temperature in fishes
TemperMut = merge(MUT,TEMPE)   # 1170 rows
averageTemperMut = merge(MUT,averageTEMPE)  # 128 rows
###### Temperature ~ T_C
cor.test(averageTemperMut$T_C,averageTemperMut$Temperature, method = 'spearman')
#install.packages("ggpubr")
library("ggpubr")
ggscatter(averageTemperMut, x = "Temperature", y = "T_C",
add = "reg.line", conf.int = TRUE,
cor.coef = TRUE, cor.method = "spearman",
xlab = "Temperature", ylab = "A>G")
