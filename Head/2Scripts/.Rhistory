colors = c("red","black")
FinalNew = data.frame(Final$AhGhfr, Final$OtherMut)
FinalNew = data.frame(Final$AhGhfr, Final$OtherMut)
View(FinalNew)
FinalNew
gather(FinalNew, "Final.AhGhfr", "Final.OtherMut")
dplyr::gather(FinalNew, "Final.AhGhfr", "Final.OtherMut")
library(tidyr)
tidyr::gather(FinalNew, "Final.AhGhfr", "Final.OtherMut")
tidyr::gather(FinalNew, "Final.AhGhfr", "Final.OtherMut")
a = tidyr::gather(FinalNew, "Final.AhGhfr", "Final.OtherMut")
View(a)
FinalNew = data.frame(Final$AhGhfr, Final$OtherMut)
a = tidyr::gather(FinalNew, "Final.AhGhfr", "Final.OtherMut")
row(FinalNew)
rownames(FinalNew)
FinalNew = data.frame(Final$AhGhfr, Final$OtherMut, rownames(FinalNew))
FinalNew
FinalNew = data.frame(Final$AhGhfr, Final$OtherMut, rownames(FinalNew), Final$)
FinalNew = data.frame(Final$AhGhfr, Final$OtherMut, rownames(FinalNew), Final$hypoxia_score_buffa)
FinalHypo = FinalNew[FinalNew$>32,]
FinalHypo = FinalNew[FinalNew$hypoxia_score_buffa >32,]
FinalNew = data.frame(Final$AhGhfr, Final$OtherMut, rownames(FinalNew), Final$hypoxia_score_buffa)
FinalHypo = FinalNew[FinalNew$Final.hypoxia_score_buffa >32,]
FinalHypo = FinalNew[FinalNew$Final.hypoxia_score_buffa>=32,]
FinalNorm = FinalNew[FinalNew$Final.hypoxia_score_buffa<32,]
View(FinalHypo)
View(FinalNew)
View(FinalHypo)
View(FinalNorm)
FinalNorm
a = tidyr::gather(FinalHypo, "Final.AhGhfr", "rownames.FinalNew.")
View(a)
a = tidyr::gather(FinalHypo, "rownames.FinalNew.", "Final.AhGhfr")
View(a)
FinalHypo$Final.hypoxia_score_buffa = NULL
FinalNorm$Final.hypoxia_score_buffa = NULL
FinalHypo %>% gather(subtype, freq,  Final.AhGhfr:Final.OtherMut)
View(FinalHypo)
FinalHypo = gather(subtype, freq,  Final.AhGhfr:Final.OtherMut)
a = FinalHypo %>% gather(subtype, freq,  Final.AhGhfr:Final.OtherMut)
View(a)
b = FinalNorm %>% gather(subtype, freq,  Final.AhGhfr:Final.OtherMut)
View(b)
b
barplot(FinalHypo, xlab = "rownames.FinalNew.", col=colors)
ggplot(FinalHypo, aes(fill=subtype, y=freq, x=rownames.FinalNew.)) +
geom_bar(position="fill", stat="identity")
library(ggplot)
library(ggplot2)
ggplot(FinalHypo, aes(fill=subtype, y=freq, x=rownames.FinalNew.)) +
geom_bar(position="fill", stat="identity")
ggplot(a, aes(fill=subtype, y=freq, x=rownames.FinalNew.)) +
geom_bar(position="fill", stat="identity")
ggplot(a, aes(fill=subtype, y=freq, x=rownames.FinalNew.), color = colors) +
geom_bar(position="fill", stat="identity")
p = ggplot(a, aes(fill=subtype, y=freq, x=rownames.FinalNew.), color = colors) +
geom_bar(position="fill", stat="identity")
p+scale_color_manual(values=c("red","black"))
p
p = ggplot(a, aes(fill=subtype, y=freq, x=rownames.FinalNew.)) +
geom_bar(position="fill", stat="identity")
p+scale_color_manual(values=c("red","black"))
p = ggplot(a, aes(fill=subtype, y=freq, x=rownames.FinalNew.)) +
geom_bar(position="fill", stat="identity")
p = ggplot(Ð¸, aes(fill=subtype, y=freq, x=rownames.FinalNew.)) +
geom_bar(position="fill", stat="identity")
p
p = ggplot(b, aes(fill=subtype, y=freq, x=rownames.FinalNew.)) +
geom_bar(position="fill", stat="identity")
p
p = ggplot(a, aes(fill=subtype, y=freq, x=rownames.FinalNew.)) +
geom_bar(position="fill", stat="identity")
p
ggplot(a, aes(fill=subtype, y=freq, x=rownames.FinalNew.)) +
geom_bar(position="fill", stat="identity")+(values=c("red","black"))
ggplot(a, aes(fill=subtype, y=freq, x=rownames.FinalNew.)) +
geom_bar(position="fill", stat="identity")+scale_fill_manual(values=c("red","black"))
ggplot(b, aes(fill=subtype, y=freq, x=rownames.FinalNew.)) +
geom_bar(position="fill", stat="identity")+scale_fill_manual(values=c("red","black"))
ggplot(a, aes(fill=subtype, y=freq, x=rownames.FinalNew.)) +
geom_bar(position="fill", stat="identity")+scale_fill_manual(values=c("red","black"))
pdf("../../Body/4Figures/Cancer.Hypoxia.pdf")
ggplot(a, aes(fill=subtype, y=freq, x=rownames.FinalNew.)) +
geom_bar(position="fill", stat="identity")+scale_fill_manual(values=c("red","black"))
ggplot(b, aes(fill=subtype, y=freq, x=rownames.FinalNew.)) +
geom_bar(position="fill", stat="identity")+scale_fill_manual(values=c("red","black"))
dev.off()
pdf("../../Body/4Figures/Cancer.Hypoxia.pdf", width=3, height=3)
ggplot(a, aes(fill=subtype, y=freq, x=rownames.FinalNew.)) +
geom_bar(position="fill", stat="identity")+scale_fill_manual(values=c("red","black"))
ggplot(b, aes(fill=subtype, y=freq, x=rownames.FinalNew.)) +
geom_bar(position="fill", stat="identity")+scale_fill_manual(values=c("red","black"))
dev.off()
pdf("../../Body/4Figures/Cancer.Hypoxia.pdf", width=3, height=7)
ggplot(a, aes(fill=subtype, y=freq, x=rownames.FinalNew.)) +
geom_bar(position="fill", stat="identity")+scale_fill_manual(values=c("red","black"))
ggplot(b, aes(fill=subtype, y=freq, x=rownames.FinalNew.)) +
geom_bar(position="fill", stat="identity")+scale_fill_manual(values=c("red","black"))
dev.off()
pdf("../../Body/4Figures/Cancer.Hypoxia.pdf", width=7, height=3)
ggplot(a, aes(fill=subtype, y=freq, x=rownames.FinalNew.)) +
geom_bar(position="fill", stat="identity")+scale_fill_manual(values=c("red","black"))
ggplot(b, aes(fill=subtype, y=freq, x=rownames.FinalNew.)) +
geom_bar(position="fill", stat="identity")+scale_fill_manual(values=c("red","black"))
dev.off()
ggplot(a, aes(fill=subtype, y=freq, x=rownames.FinalNew.)) +
geom_bar(position="fill", stat="identity")+scale_fill_manual(values=c("red","black"))+xlim(0,734)
rm(list=ls(all=TRUE))
ALL = read.table("../../Body/1Raw/mtDNA_snv_Oct2016.txt", head = TRUE, sep = '\t')  # 7611
### DERIVE NECESSARY TRAITS:
ALL$TumorVarFreq = ALL$tumor_reads2/(ALL$tumor_reads1 + ALL$tumor_reads2); summary(ALL$TumorVarFreq)  # 0.01000 0.01738 0.04540 0.20268 0.26278 0.99864
ALL$NormalVarFreq = ALL$normal_reads2/(ALL$normal_reads1 + ALL$normal_reads2); summary(ALL$NormalVarFreq)
nrow(ALL)                           # 7611
nrow(ALL[ALL$NormalVarFreq == 0,])  # 2265
nrow(ALL[ALL$NormalVarFreq >  0,])  # 5436
wilcox.test(ALL[ALL$NormalVarFreq >  0,]$TumorVarFreq,ALL[ALL$NormalVarFreq == 0,]$TumorVarFreq) # 0.005325
boxplot(ALL[ALL$NormalVarFreq ==  0,]$TumorVarFreq,ALL[ALL$NormalVarFreq > 0,]$TumorVarFreq, outline = FALSE, notch = TRUE, names = c("ZeroInNormal\nN=2265","NonZeroInNormal\nN=5436"), ylab = 'VafInCancer')
cor.test(ALL$NormalVarFreq,ALL$TumorVarFreq,method = 'spearman') # Rho = 0.06958285, p =  1.226e-09
cor.test(ALL[ALL$NormalVarFreq >  0,]$NormalVarFreq,ALL[ALL$NormalVarFreq >  0,]$TumorVarFreq, method = 'spearman') # Rho = 0.0883715, p =  9.638e-11
ALL$Subs = paste(ALL$ref,ALL$var, sep = '_'); table(ALL$Subs)
VecOfTransitionSubstitutions = c('A_G','G_A','C_T','T_C') # all tr
VecOfTransversionSubstitutions = c('C_A','A_C','C_G','G_C','G_T','T_G','T_A','A_T') # ALL Tv
# CancerType = unique(ALL$Tier2); length(CancerType)
CancerType = unique(ALL$tissue); length(CancerType)
####### TEST 1: Ts/Tv in early and late variants - global analysis
str(ALL$Subs)
str(VecOfTransitionSubstitutions)
summary(ALL$TumorVarFreq) # 0.01000 0.01738 0.04540 0.20268 0.26278 0.99864
A = nrow(ALL[ALL$TumorVarFreq <= 0.04540 & ALL$Subs %in% VecOfTransitionSubstitutions,])
B = nrow(ALL[ALL$TumorVarFreq <= 0.04540 & ALL$Subs %in% VecOfTransversionSubstitutions,])
C = nrow(ALL[ALL$TumorVarFreq > 0.04540 & ALL$Subs %in% VecOfTransitionSubstitutions,])
D = nrow(ALL[ALL$TumorVarFreq > 0.04540 & ALL$Subs %in% VecOfTransversionSubstitutions,])
X = rbind(c(A,B),c(C,D))
fisher.test(X) # 0.689, p = 2.524e-05
mosaicplot(X)
X
# 3469  337
# 3566  239
## many transversions are low quality "noise", so it is important to show, that
## results are the same if I work with extremely low P-values.
summary(-log10(ALL$pval))  # this is general p-value - that this variant is not mistake?
summary(ALL$somatic_p_value)  # this is the somatic p-value?
cor.test(ALL$pval,ALL$somatic_p_value, method = 'spearman') # rho = 0.83, p-value < 2.2e-16
# pval
summary(-log10(ALL$pval))
NewAll = ALL[-log10(ALL$pval) > 59,]
nrow(NewAll)                # 5709
median(NewAll$TumorVarFreq) # 0.094
A = nrow(NewAll[NewAll$TumorVarFreq <= 0.094 & NewAll$Subs %in% VecOfTransitionSubstitutions,])
B = nrow(NewAll[NewAll$TumorVarFreq <= 0.094 & NewAll$Subs %in% VecOfTransversionSubstitutions,])
C = nrow(NewAll[NewAll$TumorVarFreq > 0.094 & NewAll$Subs %in% VecOfTransitionSubstitutions,])
D = nrow(NewAll[NewAll$TumorVarFreq > 0.094 & NewAll$Subs %in% VecOfTransversionSubstitutions,])
X = rbind(c(A,B),c(C,D))
fisher.test(X) # 0.667, p = 0.0002002
## instead of Ts/Tv we analyse T>C/G>A - both are high quality transitions - distribution of frequencies is similar, T>C has a bit higher VAF
summary(ALL[ALL$Subs == 'T_C',]$TumorVarFreq)
summary(ALL[ALL$Subs == 'G_A',]$TumorVarFreq)
wilcox.test(ALL[ALL$Subs == 'T_C',]$TumorVarFreq,ALL[ALL$Subs == 'G_A',]$TumorVarFreq) # 0.1577
hist(ALL[ALL$Subs == 'T_C',]$TumorVarFreq, breaks = 50)
hist(ALL[ALL$Subs == 'G_A',]$TumorVarFreq, breaks = 50)
## instead of Ts/Tv we analyse T>C/Tv
A = nrow(ALL[ALL$TumorVarFreq <= 0.04540 & ALL$Subs == 'T_C',])
B = nrow(ALL[ALL$TumorVarFreq <= 0.04540 & ALL$Subs %in% VecOfTransversionSubstitutions,])
C = nrow(ALL[ALL$TumorVarFreq > 0.04540 & ALL$Subs == 'T_C',])
D = nrow(ALL[ALL$TumorVarFreq > 0.04540 & ALL$Subs %in% VecOfTransversionSubstitutions,])
X = rbind(c(A,B),c(C,D))
fisher.test(X) # 0.681, p = 5.26e-05
X
A = nrow(ALL[ALL$TumorVarFreq <= 0.04540 & ALL$Subs == 'G_A',])
B = nrow(ALL[ALL$TumorVarFreq <= 0.04540 & ALL$Subs %in% VecOfTransversionSubstitutions,])
C = nrow(ALL[ALL$TumorVarFreq > 0.04540 & ALL$Subs == 'G_A',])
D = nrow(ALL[ALL$TumorVarFreq > 0.04540 & ALL$Subs %in% VecOfTransversionSubstitutions,])
X = rbind(c(A,B),c(C,D))
fisher.test(X) # 0.715092, p = 0.00023185
X
# both T>C and G>A similarly contribute to the trend
Final = c();
for (Tissue in CancerType)
{  # Tissue = 'Bladder'
# Temp = ALL[ALL$Tier2 == Tissue,]
Temp = ALL[ALL$tissue == Tissue,]
MedVaf = median(Temp$TumorVarFreq)
TsMedianVaf = median(Temp[Temp$Subs %in% VecOfTransitionSubstitutions,]$TumorVarFreq)
TvMedianVaf = median(Temp[Temp$Subs %in% VecOfTransversionSubstitutions,]$TumorVarFreq)
TempLate = Temp[Temp$TumorVarFreq <= median(Temp$TumorVarFreq),]
TempEarly = Temp[Temp$TumorVarFreq  > median(Temp$TumorVarFreq),]
LateMed = median(TempLate$TumorVarFreq)
EarlyMed = median(TempEarly$TumorVarFreq)
EarlyTs = nrow(TempEarly[TempEarly$Subs %in% VecOfTransitionSubstitutions,])
# EarlyTs = nrow(TempEarly[TempEarly$Subs == 'G_A',])
EarlyTv = nrow(TempEarly[TempEarly$Subs %in% VecOfTransversionSubstitutions,])
LateTs = nrow(TempLate[TempLate$Subs %in% VecOfTransitionSubstitutions,])
# LateTs = nrow(TempLate[TempLate$Subs == 'G_A',])
LateTv = nrow(TempLate[TempLate$Subs %in% VecOfTransversionSubstitutions,])
X = rbind(c(LateTs,LateTv),c(EarlyTs,EarlyTv))
Pvalue = as.numeric(fisher.test(X)[1])
Odds = as.numeric(fisher.test(X)[3])
Line = c(Tissue,EarlyTs,EarlyTv,LateTs,LateTv,LateMed,EarlyMed,Pvalue,Odds,TsMedianVaf,TvMedianVaf,MedVaf);
Final = rbind(Final,Line)
}
Final = data.frame(Final); names(Final)=c('Tissue','EarlyTs','EarlyTv','LateTs','LateTv','LateMed','EarlyMed','Pvalue','Odds','TsMedianVaf','TvMedianVaf','MedVaf')
for (i in 2:12) {Final[,i] = as.numeric(as.character(Final[,i]))}
plot(Final$Odds,Final$Pvalue)
Final = Final[order(Final$Pvalue),]
Final$TsMinusTv = Final$TsMedianVaf - Final$TvMedianVaf
summary(Final$TsMinusTv)
nrow(Final[!is.na(Final$TsMinusTv) & Final$TsMinusTv > 0,]) # 25
nrow(Final[!is.na(Final$TsMinusTv) & Final$TsMinusTv <= 0,]) # 13
Final[!is.na(Final$Pvalue) & Final$Pvalue < 0.01,] # only one cancer is nominally significant: PBCA 1.139457e-06 0.06051041; Pediatric Brain Cancer
Final$EarlyTsTv = Final$EarlyTs/Final$EarlyTv
Final$LateTsTv = Final$LateTs/Final$LateTv
Final$AllTsTv = (Final$LateTs+Final$EarlyTs)/(Final$LateTv + Final$EarlyTv)
Final$OddsRatio = Final$LateTsTv/Final$EarlyTsTv
FinalShort = Final[!is.na(Final$OddsRatio) & Final$OddsRatio != Inf,]  # 36 instead of 40
wilcox.test(FinalShort$LateTsTv,FinalShort$EarlyTsTv, paired = TRUE) # 0.0006272,
wilcox.test(FinalShort[FinalShort$Tissue != 'PBCA',]$LateTsTv,FinalShort[FinalShort$Tissue != 'PBCA',]$EarlyTsTv, paired = TRUE) # 0.001051
# plot: one segment - one cancer
plot(NA, xlim=c(0,1), ylim=c(0,72), xlab='VAF', ylab="Ts/Tv")
for (Tissue in CancerType)
{
Temp = FinalShort[FinalShort$Tissue == Tissue,]
if (nrow(Temp) == 1)
{
if (Temp$Pvalue > 0.00001) { segments(Temp$LateMed, Temp$LateTsTv, Temp$EarlyMed, Temp$EarlyTsTv, col = rgb(0.1,0.1,0.1,0.2), lwd = 4)}   # rgb(red, green, blue, alpha, names = NULL, maxColorValue = 1)}
if (Temp$Pvalue < 0.00001) { segments(Temp$LateMed, Temp$LateTsTv, Temp$EarlyMed, Temp$EarlyTsTv, col = rgb(1,0.1,0.1,1), lwd = 4)}   # rgb(red, green, blue, alpha, names = NULL, maxColorValue = 1)}
}
}
CancerTypeSpecificData = Final
Final = c();
for (Tissue in CancerType)
{  # Tissue = 'Bladder'
# Temp = ALL[ALL$Tier2 == Tissue,]
Temp = ALL[ALL$tissue == Tissue,]
TempLate = Temp[Temp$TumorVarFreq <= median(Temp$TumorVarFreq),]
TempEarly = Temp[Temp$TumorVarFreq  > median(Temp$TumorVarFreq),]
LateMed = median(TempLate$TumorVarFreq)
EarlyMed = median(TempEarly$TumorVarFreq)
# EarlyTs = nrow(TempEarly[TempEarly$Subs %in% VecOfTransitionSubstitutions,])
EarlyTs = nrow(TempEarly[TempEarly$Subs == 'T_C',])
EarlyTv = nrow(TempEarly[TempEarly$Subs %in% VecOfTransversionSubstitutions,])
# LateTs = nrow(TempLate[TempLate$Subs %in% VecOfTransitionSubstitutions,])
LateTs = nrow(TempLate[TempLate$Subs == 'T_C',])
LateTv = nrow(TempLate[TempLate$Subs %in% VecOfTransversionSubstitutions,])
Line = c(Tissue,EarlyTs,EarlyTv,LateTs,LateTv,LateMed,EarlyMed);
Final = rbind(Final,Line)
}
Final = data.frame(Final); names(Final)=c('Tissue','EarlyTs','EarlyTv','LateTs','LateTv','LateMed','EarlyMed')
for (i in 2:7) {Final[,i] = as.numeric(as.character(Final[,i]))}
Final$EarlyTsTv = Final$EarlyTs/Final$EarlyTv
Final$LateTsTv = Final$LateTs/Final$LateTv
Final$AllTsTv = (Final$LateTs+Final$EarlyTs)/(Final$LateTv + Final$EarlyTv)
Final$OddsRatio = Final$LateTsTv/Final$EarlyTsTv
FinalShort = Final[!is.na(Final$OddsRatio) & Final$OddsRatio != Inf,]
nrow(FinalShort)  # 36 instead of 40
wilcox.test(FinalShort$LateTsTv,FinalShort$EarlyTsTv, paired = TRUE) # 0.0004558
## only G>A
Final = c();
for (Tissue in CancerType)
{  # Tissue = 'Bladder'
# Temp = ALL[ALL$Tier2 == Tissue,]
Temp = ALL[ALL$tissue == Tissue,]
TempLate = Temp[Temp$TumorVarFreq <= median(Temp$TumorVarFreq),]
TempEarly = Temp[Temp$TumorVarFreq  > median(Temp$TumorVarFreq),]
LateMed = median(TempLate$TumorVarFreq)
EarlyMed = median(TempEarly$TumorVarFreq)
# EarlyTs = nrow(TempEarly[TempEarly$Subs %in% VecOfTransitionSubstitutions,])
EarlyTs = nrow(TempEarly[TempEarly$Subs == 'G_A',])
EarlyTv = nrow(TempEarly[TempEarly$Subs %in% VecOfTransversionSubstitutions,])
# LateTs = nrow(TempLate[TempLate$Subs %in% VecOfTransitionSubstitutions,])
LateTs = nrow(TempLate[TempLate$Subs == 'G_A',])
LateTv = nrow(TempLate[TempLate$Subs %in% VecOfTransversionSubstitutions,])
Line = c(Tissue,EarlyTs,EarlyTv,LateTs,LateTv,LateMed,EarlyMed);
Final = rbind(Final,Line)
}
Final = data.frame(Final); names(Final)=c('Tissue','EarlyTs','EarlyTv','LateTs','LateTv','LateMed','EarlyMed')
for (i in 2:7) {Final[,i] = as.numeric(as.character(Final[,i]))}
Final$EarlyTsTv = Final$EarlyTs/Final$EarlyTv
Final$LateTsTv = Final$LateTs/Final$LateTv
Final$AllTsTv = (Final$LateTs+Final$EarlyTs)/(Final$LateTv + Final$EarlyTv)
Final$OddsRatio = Final$LateTsTv/Final$EarlyTsTv
FinalShort = Final[!is.na(Final$OddsRatio) & Final$OddsRatio != Inf,]
nrow(FinalShort)  # 36 instead of 40
wilcox.test(FinalShort$LateTsTv,FinalShort$EarlyTsTv, paired = TRUE) # 0.0006133
length(unique(ALL$index))
length(unique(ALL$sample))
ALL$Number = 1
AGG = aggregate(ALL$Number, by = list(ALL$sample), FUN = sum); names(AGG)=c('sample','NumberOfMut'); summary(AGG$NumberOfMut) # median = 3
VecOfPatientsWithManyMut = AGG[AGG$NumberOfMut>=2,]$sample; length(VecOfPatientsWithManyMut) # 1253 1715
Final = c()
for (i in 1:length(VecOfPatientsWithManyMut))
{  # i = 3
Temp = ALL[ALL$sample == VecOfPatientsWithManyMut[i],]
if (nrow(Temp[Temp$Subs %in% VecOfTransitionSubstitutions,]) > 0 & nrow(Temp[Temp$Subs %in% VecOfTransversionSubstitutions,]) > 0)
# if (nrow(Temp[Temp$Subs == 'T_C',]) > 0 & nrow(Temp[Temp$Subs == 'G_A',]) > 0)
{
VafTs = mean(Temp[Temp$Subs %in% VecOfTransitionSubstitutions,]$TumorVarFreq);
# VafTs = mean(Temp[Temp$Subs == 'T_C',]$TumorVarFreq);
VafTv = mean(Temp[Temp$Subs %in% VecOfTransversionSubstitutions,]$TumorVarFreq);
Final=rbind(Final,c(VecOfPatientsWithManyMut[i],VafTs,VafTv))
}
}
Final = data.frame(Final); names(Final)=c('sample','VafTs','VafTv')
wilcox.test(Final$VafTs,Final$VafTv, paired = TRUE) # p = p-value = 5.109e-15 (419 observations), T>C (p-value = 1.501e-06), G>A (p-value = 2.651e-09), T>C vs G>A (0.009667)
Final$RatioVafTsVafTv = log2(Final$VafTs/Final$VafTv); summary(Final$RatioVafTsVafTv) # higher than zero!!!
wilcox.test(Final$RatioVafTsVafTv, mu = 0)
hist(Final$RatioVafTsVafTv, breaks = 50, main = '', xlab = 'log2(VAF(Ts)/VAF(Tv))') # I can color or plot separately different types of cancers
abline(v = 0, col = 'red', lwd = 3)
Final$DiffVafTsVafTv = Final$VafTs - Final$VafTv; summary(Final$DiffVafTsVafTv) # 0.054
rm(list=ls(all=TRUE))
ALL = read.table("../../Body/2Derived/mtDNA_snv_Oct2016.PatientInfo.txt", head = TRUE, sep = '\t')  # 7611
### DERIVE NECESSARY TRAITS:
ALL$TumorVarFreq = ALL$tumor_reads2/(ALL$tumor_reads1 + ALL$tumor_reads2); summary(ALL$TumorVarFreq)  # 0.01000 0.01738 0.04540 0.20268 0.26278 0.99864
ALL$NormalVarFreq = ALL$normal_reads2/(ALL$normal_reads1 + ALL$normal_reads2); summary(ALL$NormalVarFreq)
ALL$Subs = paste(ALL$ref,ALL$var, sep = '_'); table(ALL$Subs)
VecOfTransitionSubstitutions = c('A_G','G_A','C_T','T_C') # all tr
VecOfTransversionSubstitutions = c('C_A','A_C','C_G','G_C','G_T','T_G','T_A','A_T') # ALL Tv
CancerType = unique(ALL$tissue); length(CancerType)    # 40
CancerTissue = unique(ALL$Tier2); length(CancerTissue) # 21
ALL$CancerTissue = ALL$Tier2; unique(ALL$CancerTissue) #
ALL$CancerType = ALL$tissue;
ALL$CancerTypeAndTissues = paste(ALL$CancerType,ALL$CancerTissue, sep = '_')
table(ALL$CancerTypeAndTissues)
Subs = data.frame(table(ALL$Subs)); Subs = Subs[order(Subs$Freq),]
Subs$Freq = Subs$Freq/sum(Subs$Freq)
Subs
Subs = data.frame(table(ALL[ALL$TumorVarFreq > quantile(ALL$TumorVarFreq,0.75),]$Subs)); Subs = Subs[order(Subs$Freq),]
Subs$Freq = Subs$Freq/sum(Subs$Freq)
Subs
Subs = data.frame(table(ALL[ALL$TumorVarFreq > quantile(ALL$TumorVarFreq,0.9),]$Subs)); Subs = Subs[order(Subs$Freq),]
Subs$Freq = Subs$Freq/sum(Subs$Freq)
Subs
unique(ALL$CancerTissue)
CancerTissue = c('Bladder','Bone/SoftTissue','Breast','Biliary','Cervix','Lymphoid','Myeloid','Colon/Rectum','Prostate','Esophagus','Stomach','CNS','Head/Neck','Kidney','Liver','Lung','Ovary','Pancreas','Skin','Thyroid','Uterus')
LifeTimeRisk = c(0.023,0.01,0.124,0.01,0.006,0.023,0.008,0.042,0.112,0.005,0.008,0.006,0.003,0.017,0.01,0.062,0.013,0.016,0.023,0.012,0.029)
LifeRisk = data.frame(CancerTissue,LifeTimeRisk)
ALL = merge(ALL, LifeRisk, by = 'CancerTissue')
Cells = data.frame(matrix( c("Thyroid","Head/Neck","Ovary","Esophagus","Pancreas","Skin","Lung","Liver","Colon/Rectum","Lymphoid","CNS","Bone/SoftTissue","Myeloid",
7,1720,0,1390,80,199,5.6,88,5840,960,0,5,960), ncol = 2))
names(Cells) = c('CancerTissue','NumOfCellDivPerLife')
Cells$NumOfCellDivPerLife = as.numeric(as.character(Cells$NumOfCellDivPerLife))
View(Cells)
ALL = merge(ALL,Cells, all.x = TRUE)
CancerTissue = c('Bladder','Bone/SoftTissue','Breast','Biliary','Cervix','Lymphoid','Myeloid','Colon/Rectum','Prostate','Esophagus','Stomach','CNS','Head/Neck','Kidney','Liver','Lung','Ovary','Pancreas','Skin','Thyroid','Uterus')
TurnOverDays = c(200,5373,84.5,200,6,30,30,5,120,11,5.5,10000,16,1000,400,5143,11000,360,147,4138,4)
Turn = data.frame(CancerTissue,TurnOverDays)
Turn = Turn[order(Turn$TurnOverDays),]
View(Turn)
ALL = merge(ALL,Turn)
CancerType =c('PRAD','LUNG','COAD','BRCA','KIRC','BLAD','CESC','CHOL','COADREAD','ESCA','GBM','HNSC','THCA','THYM','STAD','SKCM','SARC','READ','PCPG','PAAD','LUSC','LUAD','LIHC','KIRP','KICH','UCEC','MSKCCTvN')
Glycolysis=c(12.38978,21.35984,59.51087,129.9068,99.2046,12.13424,14.89038,49.08608,26.55547,7.960641,3.820559,60.00785,46.08075,20.28906,19.16362,3.914527,10.47275,25.35386,43.00674,0.5165879,64.19461,25.59793,14.61152,77.26818,74.4774,29.7614,3.739063)
OxidativePhosphorylation =c(15.76979,9.893736,14.81407,14.28531,249.1245,2.216577,3.199398,12.84608,7.390275,8.302373,6.407421,13.32523,4.457943,0.9468787,13.56102,2.319901,1.623032,11.08796,40.05531,0.3871189,26.50188,12.20636,13.09163,166.9113,51.49203,14.65809,2.185885)
PentosePhosphate = c(4.482671,5.194823,4.599162,15.15577,12.77786,1.661569,2.182199,10.00908,1.998763,2.546287,1.110797,3.574438,1.615254,0.6553366,3.967936,0.8680933,2.732062,2.317814,25.14021,0.05184657,19.18611,6.007663,2.381309,14.36361,10.93353,5.921344,1.946353)
Glyc = data.frame(CancerType,Glycolysis,OxidativePhosphorylation,PentosePhosphate)
ALL = merge(ALL,Glyc, all.x=TRUE)
### Glycolysis derived by hands:
GAPDH = read.table("../../Body/2Derived/Cancer.DeriveLevelOfGlycolysisForEachCancerType.txt", header = TRUE)
setdiff(ALL$CancerType,GAPDH$CancerType) # CLLE" "CMDI" "DLBC" "ESAD" "GACA" "LAML" "MALY" "ORCA" "BLCA" "BTCA" "EOPC" "LICA" "LINC" "LIRI" "MELA" "PACA" "PAEN" "RECA" "BOCA" "LGG"  "OV"   "PBCA" "THCA"
setdiff(GAPDH$CancerType,ALL$CancerType) # BLAD"     "CHOL"     "COADREAD" "ESCA"     "LUNG"     "PAAD"     "PCPG"     "TGCA"     "THYM"
intersect(GAPDH$CancerType,ALL$CancerType)
ALL = merge(ALL,GAPDH, all.x=TRUE)
Glyc = merge(Glyc,GAPDH)
cor.test(Glyc$Glycolysis,Glyc$GAPDH, method = 'spearman') # positive and good!!!!!!! rho = 0.6096838; p = 0.002467
plot(Glyc$Glycolysis,Glyc$GAPDH)
text(Glyc$Glycolysis,Glyc$GAPDH,Glyc$CancerType)
Short = ALL[,grep("CancerType|CancerTissue|GAPDH|PFK|PentosePhosphate|Glycolysis|TurnOverDays",colnames(ALL))] # names(ALL)
Short = unique(Short)
cor.test(Short$TurnOverDays,Short$Glycolysis, method = 'spearman') # nothing
cor.test(Short$TurnOverDays,Short$GAPDH, method = 'spearman')      # nothing
cor.test(Short$TurnOverDays,Short$PFK, method = 'spearman')      # nothing
cor.test(Short$TurnOverDays,Short$PentosePhosphate, method = 'spearman')      # nothing
####### mtDNA copies: https://www.ncbi.nlm.nih.gov/pubmed/26901439 (figure 3 gives a rank of cancer types)
CancerType = c('KIRC','BRCA','BLCA','LIHC','HNSC','ESCA','KIRP','STAD','UCEC','KICH','COAD','THCA','PAAD','PRAD','LUAD')
mtDNACopyNumberRank = c(1:15)
CopyNumber = data.frame(CancerType,mtDNACopyNumberRank)
ALL = merge(ALL,CopyNumber, all.x=TRUE)
####### can we derive mtDNA copies from the table?
####### for example compare total coverage in tumor versus total coverage in normal versus cancer types?
ALL$CovNor = ALL$normal_reads1 + ALL$normal_reads2
ALL$CovTum = ALL$tumor_reads1 + ALL$tumor_reads2
ALL$CovTumToNor = log2(ALL$CovTum/ALL$CovNor)
boxplot(CovTumToNor ~ CancerType, data = ALL, outline = FALSE, notch = TRUE, ylab = 'log2(TotalCovTum/TotalCovNor)')
abline(h=0, col = 'red')
# get medain of log2(TotalCovTum/TotalCovNor) for each cancer
AggMed = aggregate(ALL$CovTumToNor, by = list(ALL$CancerType,ALL$sample), FUN = median)
AggMed = aggregate(AggMed$x, by = list(AggMed$Group.1), FUN = median)
names(AggMed)=c('CancerType','MedianCovTumToNor')
AggMed = AggMed[order(AggMed$MedianCovTumToNor),]
ALL = merge(ALL,AggMed, all.x=TRUE)
ALL_T_C = ALL[ALL$Subs == 'T_C',]; ALL_T_C$T_C = 1
ALL_not_T_C = ALL[!ALL$Subs == 'T_C',]; ALL_not_T_C$T_C = 0
ALL = rbind(ALL_T_C,ALL_not_T_C)
ALL_G_A = ALL[ALL$Subs == 'G_A',]; ALL_G_A$G_A = 1
ALL_not_G_A = ALL[!ALL$Subs == 'G_A',]; ALL_not_G_A$G_A = 0
ALL = rbind(ALL_G_A,ALL_not_G_A)
ALL_Ts = ALL[ALL$Subs %in% VecOfTransitionSubstitutions,]; ALL_Ts$Ts = 1
ALL_Tv = ALL[ALL$Subs %in% VecOfTransversionSubstitutions,]; ALL_Tv$Ts = 0
ALL = rbind(ALL_Ts,ALL_Tv)
length(unique(ALL$TurnOverDays)) # 19 different rates (21 tissues) = 7 in each group
sort(unique(ALL$TurnOverDays))
Turn
FAST = ALL[ALL$TurnOverDays <= 30,]
MIDDLE = ALL[ALL$TurnOverDays > 30 & ALL$TurnOverDays <= 1000,]  # 4138/360
SLOW = ALL[ALL$TurnOverDays > 1000,]
TEMP = FAST
TsTv = nrow(TEMP[TEMP$Subs %in% VecOfTransitionSubstitutions,]) / nrow(TEMP[TEMP$Subs %in% VecOfTransversionSubstitutions,]); TsTv # 10.02817
TCTv = nrow(TEMP[TEMP$Subs == 'T_C',]) / nrow(TEMP[TEMP$Subs %in% VecOfTransversionSubstitutions,]); TCTv # 2.816901
GATv = nrow(TEMP[TEMP$Subs == 'G_A',]) / nrow(TEMP[TEMP$Subs %in% VecOfTransversionSubstitutions,]); GATv # 5.014085
TCGA = nrow(TEMP[TEMP$Subs == 'T_C',]) / nrow(TEMP[TEMP$Subs  == 'G_A',]); TCGA # 0.5617978
TCOtherTs = nrow(TEMP[TEMP$Subs == 'T_C',]) / nrow(TEMP[TEMP$Subs  %in% c('C_T','G_A','A_G'),]); TCOtherTs # 0.390625
GAOtherTs = nrow(TEMP[TEMP$Subs == 'G_A',]) / nrow(TEMP[TEMP$Subs  %in% c('C_T','T_C','A_G'),]); GAOtherTs # 1 !!!!!!!!!
TEMP = MIDDLE
TsTv = nrow(TEMP[TEMP$Subs %in% VecOfTransitionSubstitutions,]) / nrow(TEMP[TEMP$Subs %in% VecOfTransversionSubstitutions,]); TsTv # 12.56941
TCTv = nrow(TEMP[TEMP$Subs == 'T_C',]) / nrow(TEMP[TEMP$Subs %in% VecOfTransversionSubstitutions,]); TCTv # 3.827195
GATv = nrow(TEMP[TEMP$Subs == 'G_A',]) / nrow(TEMP[TEMP$Subs %in% VecOfTransversionSubstitutions,]); GATv # 6.634561
TCGA = nrow(TEMP[TEMP$Subs == 'T_C',]) / nrow(TEMP[TEMP$Subs  == 'G_A',]); TCGA # 0.5768574
TCOtherTs = nrow(TEMP[TEMP$Subs == 'T_C',]) / nrow(TEMP[TEMP$Subs  %in% c('C_T','G_A','A_G'),]); TCOtherTs # 0.4377835
GAOtherTs = nrow(TEMP[TEMP$Subs == 'G_A',]) / nrow(TEMP[TEMP$Subs  %in% c('C_T','T_C','A_G'),]); GAOtherTs # 1.1179
TEMP = SLOW
TsTv = nrow(TEMP[TEMP$Subs %in% VecOfTransitionSubstitutions,]) / nrow(TEMP[TEMP$Subs %in% VecOfTransversionSubstitutions,]); TsTv # 14.49383
TCTv = nrow(TEMP[TEMP$Subs == 'T_C',]) / nrow(TEMP[TEMP$Subs %in% VecOfTransversionSubstitutions,]); TCTv # 4.555556
GATv = nrow(TEMP[TEMP$Subs == 'G_A',]) / nrow(TEMP[TEMP$Subs %in% VecOfTransversionSubstitutions,]); GATv # 7.518519
TCGA = nrow(TEMP[TEMP$Subs == 'T_C',]) / nrow(TEMP[TEMP$Subs  == 'G_A',]); TCGA # 0.6059113
TCOtherTs = nrow(TEMP[TEMP$Subs == 'T_C',]) / nrow(TEMP[TEMP$Subs  %in% c('C_T','G_A','A_G'),]); TCOtherTs # 0.4583851
GAOtherTs = nrow(TEMP[TEMP$Subs == 'G_A',]) / nrow(TEMP[TEMP$Subs  %in% c('C_T','T_C','A_G'),]); GAOtherTs # 1.077876
VecFastTsTv = c()
VecFastTCTv = c()
VecFastGATv = c()
VecFastTCOtherTs = c()
VecFastGAOtherTs = c()
VecFastTCGA = c()
for (i in 1:1000) {
TEMP = FAST[sample(nrow(FAST),nrow(FAST)/2),];
TsTv = nrow(TEMP[TEMP$Subs %in% VecOfTransitionSubstitutions,]) / nrow(TEMP[TEMP$Subs %in% VecOfTransversionSubstitutions,])
TCTv = nrow(TEMP[TEMP$Subs  == 'T_C',]) / nrow(TEMP[TEMP$Subs %in% VecOfTransversionSubstitutions,])
GATv = nrow(TEMP[TEMP$Subs  == 'G_A',]) / nrow(TEMP[TEMP$Subs %in% VecOfTransversionSubstitutions,])
TCOtherTs = nrow(TEMP[TEMP$Subs == 'T_C',]) / nrow(TEMP[TEMP$Subs  %in% c('C_T','G_A','A_G'),])
GAOtherTs = nrow(TEMP[TEMP$Subs == 'G_A',]) / nrow(TEMP[TEMP$Subs  %in% c('C_T','T_C','A_G'),])
TCGA = nrow(TEMP[TEMP$Subs == 'T_C',]) / nrow(TEMP[TEMP$Subs  == 'G_A',])
VecFastTsTv = c(VecFastTsTv,TsTv)
VecFastTCTv = c(VecFastTCTv,TCTv)
VecFastGATv = c(VecFastGATv,GATv)
VecFastTCOtherTs = c(VecFastTCOtherTs,TCOtherTs)
VecFastGAOtherTs = c(VecFastGAOtherTs,GAOtherTs)
VecFastTCGA = c(VecFastTCGA,TCGA)
}
VecMiddleTsTv = c()
VecMiddleTCTv = c()
VecMiddleGATv = c()
VecMiddleTCOtherTs = c()
VecMiddleGAOtherTs = c()
VecMiddleTCGA = c()
for (i in 1:1000) {
TEMP = MIDDLE[sample(nrow(MIDDLE),nrow(MIDDLE)/2),];
TsTv = nrow(TEMP[TEMP$Subs %in% VecOfTransitionSubstitutions,]) / nrow(TEMP[TEMP$Subs %in% VecOfTransversionSubstitutions,])
TCTv = nrow(TEMP[TEMP$Subs  == 'T_C',]) / nrow(TEMP[TEMP$Subs %in% VecOfTransversionSubstitutions,])
GATv = nrow(TEMP[TEMP$Subs  == 'G_A',]) / nrow(TEMP[TEMP$Subs %in% VecOfTransversionSubstitutions,])
TCOtherTs = nrow(TEMP[TEMP$Subs == 'T_C',]) / nrow(TEMP[TEMP$Subs  %in% c('C_T','G_A','A_G'),])
GAOtherTs = nrow(TEMP[TEMP$Subs == 'G_A',]) / nrow(TEMP[TEMP$Subs  %in% c('C_T','T_C','A_G'),])
TCGA = nrow(TEMP[TEMP$Subs == 'T_C',]) / nrow(TEMP[TEMP$Subs  == 'G_A',])
VecMiddleTsTv = c(VecMiddleTsTv,TsTv)
VecMiddleTCTv = c(VecMiddleTCTv,TCTv)
VecMiddleGATv = c(VecMiddleGATv,GATv)
VecMiddleTCOtherTs = c(VecMiddleTCOtherTs,TCOtherTs)
VecMiddleGAOtherTs = c(VecMiddleGAOtherTs,GAOtherTs)
VecMiddleTCGA = c(VecMiddleTCGA,TCGA)
}
VecSlowTsTv = c()
VecSlowTCTv = c()
VecSlowGATv = c()
VecSlowTCOtherTs = c()
VecSlowGAOtherTs = c()
VecSlowTCGA = c()
for (i in 1:1000) {
TEMP = SLOW[sample(nrow(SLOW),nrow(SLOW)/2),];
TsTv = nrow(TEMP[TEMP$Subs %in% VecOfTransitionSubstitutions,]) / nrow(TEMP[TEMP$Subs %in% VecOfTransversionSubstitutions,])
TCTv = nrow(TEMP[TEMP$Subs  == 'T_C',]) / nrow(TEMP[TEMP$Subs %in% VecOfTransversionSubstitutions,])
GATv = nrow(TEMP[TEMP$Subs  == 'G_A',]) / nrow(TEMP[TEMP$Subs %in% VecOfTransversionSubstitutions,])
TCOtherTs = nrow(TEMP[TEMP$Subs == 'T_C',]) / nrow(TEMP[TEMP$Subs  %in% c('C_T','G_A','A_G'),])
GAOtherTs = nrow(TEMP[TEMP$Subs == 'G_A',]) / nrow(TEMP[TEMP$Subs  %in% c('C_T','T_C','A_G'),])
TCGA = nrow(TEMP[TEMP$Subs == 'T_C',]) / nrow(TEMP[TEMP$Subs  == 'G_A',])
VecSlowTsTv = c(VecSlowTsTv,TsTv)
VecSlowTCTv = c(VecSlowTCTv,TCTv)
VecSlowGATv = c(VecSlowGATv,GATv)
VecSlowTCOtherTs = c(VecSlowTCOtherTs,TCOtherTs)
VecSlowGAOtherTs = c(VecSlowGAOtherTs,GAOtherTs)
VecSlowTCGA = c(VecSlowTCGA,TCGA)
}
par(mfrow=c(2,3))
boxplot(VecFastTsTv,VecMiddleTsTv,VecSlowTsTv, notch = TRUE, names = c('Fast','Middle','Slow'), outline = FALSE, ylab = 'Ts/Tv', col = rgb(0.1,0.1,0.1,0.3)) # dev.off()
boxplot(VecFastTsTv,VecFastTCTv,VecFastGATv,VecMiddleTsTv,VecMiddleTCTv,VecMiddleGATv,VecSlowTsTv,VecSlowTCTv,VecSlowGATv, notch = TRUE, names = c('FastTs','FastTC','FastGA','MiddleTs','MiddleTC','MiddleGA','SlowTs','SlowTC','SlowGA'), outline = FALSE, ylab = 'Ts/Tv', col = c(rgb(0.1,0.1,0.1,0.3),rgb(0.1,1,0.1,0.3),rgb(1,0.1,0.1,0.3))) # dev.off()
boxplot(VecFastTCOtherTs,VecMiddleTCOtherTs,VecSlowTCOtherTs, notch = TRUE, names = c('Fast','Middle','Slow'), outline = FALSE, ylab = 'TC/OtherTs') # dev.off()
boxplot(VecFastGAOtherTs,VecMiddleGAOtherTs,VecSlowGAOtherTs, notch = TRUE, names = c('Fast','Middle','Slow'), outline = FALSE, ylab = 'GA/OtherTs') # dev.off()
boxplot(VecFastTCOtherTs,VecFastGAOtherTs,VecMiddleTCOtherTs,VecMiddleGAOtherTs,VecSlowTCOtherTs,VecSlowGAOtherTs, notch = TRUE, names = c('FastTC','FastGA','MiddleTC','MiddleGA','SlowTC','SlowGA'), outline = FALSE, ylab = 'Common Transition / Other Ts', col = c(rgb(0.1,1,0.1,0.3),rgb(1,0.1,0.1,0.3))) # dev.off()
boxplot(VecFastTCGA,VecMiddleTCGA,VecSlowTCGA, notch = TRUE, names = c('Fast','Middle','Slow'), outline = FALSE, ylab = 'TC/GA', col = rgb(0.1,1,0.1,0.3)) # dev.off()
wilcox.test(VecFastTCGA,VecMiddleTCGA);
wilcox.test(VecMiddleTCGA,VecSlowTCGA);
wilcox.test(VecMiddleGAOtherTs,VecSlowGAOtherTs);
wilcox.test(VecMiddleTCOtherTs,VecSlowTCOtherTs);
summary(ALL$TumorVarFreq)
quantile(ALL$TumorVarFreq,0.05)
quantile(ALL$TumorVarFreq,0.1)
quantile(ALL$TumorVarFreq,0.25) # 0.01738204
quantile(ALL$TumorVarFreq,0.5)  # 0.04539986
FAST$TurnOverDummyFast = 1; FAST$TurnOverDummySlow = 0; FAST$TurnOverRank = 1
MIDDLE$TurnOverDummyFast = 0; MIDDLE$TurnOverDummySlow = 0; MIDDLE$TurnOverRank = 2
SLOW$TurnOverDummyFast = 0; SLOW$TurnOverDummySlow = 1; SLOW$TurnOverRank = 3
ALL = rbind(FAST, MIDDLE, SLOW)
cor.test(ALL$mt_copies,ALL$TurnOverDays, method = 'spearman') # very positive - there are many mtDNA copies in slow-dividing cancers!!!!!
cor.test(ALL$mt_copies,ALL$TumorVarFreq, method = 'spearman') # a bit positive
glm_1 <-glm(ALL$T_C ~ scale(ALL$TurnOverDays) + scale(ALL$TumorVarFreq), family = binomial())  # total number of mutations? total disruption?
summary(glm_1) # MODEL 1
