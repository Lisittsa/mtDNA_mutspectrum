summary(PCA)
MATRIX$Pca1 = PCA$x[,1]
MATRIX$Pca2 = PCA$x[,2]
MATRIX$Pca3 = PCA$x[,3]
MATRIX$Pca4 = PCA$x[,4]
MATRIX = cbind(MATRIX,MamGt[,c(1:14,26,27)])
cor.test(MATRIX$Pca1,MATRIX$GenerationLength_d, method = 'spearman') # rho = 0.004288973, p = 0.9298
cor.test(MATRIX$Pca2,MATRIX$GenerationLength_d, method = 'spearman') # rho = -0.3897472, p =  < 2.2e-16
cor.test(MATRIX$Pca3,MATRIX$GenerationLength_d, method = 'spearman') # rho = -0.1037697, p =  0.03266
cor.test(MATRIX$Pca1,MATRIX$NumOfFourFoldMutInCytB, method = 'spearman') # rho = -0.02800981, p = 0.5652
cor.test(MATRIX$Pca2,MATRIX$NumOfFourFoldMutInCytB, method = 'spearman') # rho = 0.2247093, p = 2.964e-06 PAPER
PCA$sdev # the eigenvalues (res$sdev) giving information on the magnitude of each PC,
PCA$rotation # and the loadings (res$rotation).
summary(MamGt$NumOfFourFoldMutInCytB) # why minumum is 5!!???
MamGt = MamGt[MamGt$NumOfFourFoldMutInCytB > 60,]
MATRIX = MamGt[,c(14:25)]
row.names(MATRIX)=MamGt$Species
matrix = MATRIX
PCA = prcomp(matrix, center = TRUE, scale = TRUE) #FALSE) # I don't scale because we analyze the same units (fraction from MutSpec)
print(PCA)
summary(PCA)
MATRIX$Pca1 = PCA$x[,1]
MATRIX$Pca2 = PCA$x[,2]
MATRIX$Pca3 = PCA$x[,3]
MATRIX$Pca4 = PCA$x[,4]
MATRIX = cbind(MATRIX,MamGt[,c(1:14,26,27)])
PCA$sdev # the eigenvalues (res$sdev) giving information on the magnitude of each PC,
PCA$rotation # and the loadings (res$rotation).
cor.test(MATRIX$Pca2,MATRIX$GenerationLength_d, method = 'spearman') # rho = -0.3897472, p =  < 2.2e-16
cor.test(MATRIX$Pca1,MATRIX$GenerationLength_d, method = 'spearman') # rho = 0.004288973, p = 0.9298
cor.test(MATRIX$Pca1,MATRIX$NumOfFourFoldMutInCytB, method = 'spearman') # rho = -0.02800981, p = 0.5652
PCA$rotation # still the first component
cor.test(MATRIX$Pca1,MATRIX$GenerationLength_d, method = 'spearman') # rho = 0.004288973, p = 0.9298
cor.test(MATRIX$Pca2,MATRIX$GenerationLength_d, method = 'spearman') # rho = -0.3897472, p =  < 2.2e-16
cor.test(MATRIX$Pca2,MATRIX$GenerationLength_d, method = 'spearman') # rho = -0.3897472, p =  < 2.2e-16
summary(MamGt$NumOfFourFoldMutInCytB) # why minumum is 5!!???
rm(list=ls(all=TRUE))
rm(list=ls(all=TRUE))
MUT = read.table('../../Body/3Results/VertebratePolymorphisms.MutSpecData.OnlyFourFoldDegCytb.txt', header = TRUE) # OnlyFourFoldDegCytb
MUT$TsTv = (MUT$T_C + MUT$C_T + MUT$G_A + MUT$A_G) / (MUT$T_A + MUT$A_T + MUT$G_C + MUT$C_G + MUT$G_T + MUT$T_G + MUT$C_A + MUT$A_C)
summary(MUT$TsTv)
MUT = MUT[MUT$TsTv < Inf,]
GT = read.table('../../Body/1Raw/GenerationLenghtforMammals.xlsx.txt', sep = '\t', header = TRUE)
GT$Species = gsub(' ','_',GT$Scientific_name)
Temper = read.table('../../Body/1Raw/BodyParametersForAllClasses.txt', header = TRUE)
MamGt = merge(GT,MUT, by = 'Species') # 426
Qual = data.frame(table(MamGt$Species))
UniqueSpecies = Qual[Qual$Freq == 1,]$Var1; length(UniqueSpecies);
MamGt = MamGt[MamGt$Species %in% UniqueSpecies,]
MamGt$TC_TCGA = MamGt$T_C / (MamGt$T_C + MamGt$G_A) #  424
######## add the number of mutations per species
Number = read.table('../../Body/3Results/VertebratePolymorphisms.MutSpecData.txt')
Number = data.frame(Number$Species,Number$NumOfFourFoldMutInCytB); names(Number)=c('Species','NumOfFourFoldMutInCytB')
Number = unique(Number) # 2118
nrow(MamGt) # 424
MamGt = merge(MamGt,Number, by ='Species')
nrow(MamGt) # 424
######## TC_TCGA and Generation length
summary(MamGt$TC_TCGA) #  0.0000  0.1335  0.2007  0.2196  0.2815  1.0000
cor.test(MamGt$TC_TCGA,MamGt$GenerationLength_d, method = 'spearman') # rho = 0.21, p = 8.441e-06 PAPER
######## TsTv and Generation length - significant
nrow(MamGt)  # 424
cor.test(MamGt$TsTv,MamGt$GenerationLength_d, method = 'spearman') # rho = 0.228, p = 2.021e-06
plot(log2(MamGt$GenerationLength_d),log2(MamGt$TsTv))
#### Generation length ~ T>C + A>G
cor.test(MamGt$GenerationLength_d,MamGt$A_T, method = 'spearman') # negative, - 0.22
cor.test(MamGt$GenerationLength_d,MamGt$A_G, method = 'spearman')
cor.test(MamGt$GenerationLength_d,MamGt$A_C, method = 'spearman') # negative, - 0.17
cor.test(MamGt$GenerationLength_d,MamGt$T_C, method = 'spearman') # positive, rhp = 0.25
cor.test(MamGt$GenerationLength_d,MamGt$T_A, method = 'spearman')
cor.test(MamGt$GenerationLength_d,MamGt$T_G, method = 'spearman')
cor.test(MamGt$GenerationLength_d,MamGt$G_A, method = 'spearman')
cor.test(MamGt$GenerationLength_d,MamGt$G_T, method = 'spearman') # negative, -0.27
cor.test(MamGt$GenerationLength_d,MamGt$G_C, method = 'spearman')
cor.test(MamGt$GenerationLength_d,MamGt$C_A, method = 'spearman') # negative, - 0.23
cor.test(MamGt$GenerationLength_d,MamGt$C_T, method = 'spearman')
cor.test(MamGt$GenerationLength_d,MamGt$C_G, method = 'spearman')
a<-lm(MamGt$GenerationLength_d ~ MamGt$A_T +  MamGt$A_G + MamGt$A_C + MamGt$T_C + MamGt$T_G + MamGt$G_T + MamGt$C_A); summary(a) # T>C is the most significant
a<-lm(MamGt$GenerationLength_d ~ MamGt$A_T +  MamGt$A_G + MamGt$A_C + MamGt$T_C + MamGt$G_T + MamGt$C_A); summary(a) # T>C is the most significant
a<-lm(MamGt$GenerationLength_d ~ MamGt$A_T +  MamGt$A_G + MamGt$T_C + MamGt$G_T + MamGt$C_A); summary(a) # T>C is the most significant
a<-lm(MamGt$GenerationLength_d ~ MamGt$A_T +  MamGt$T_C + MamGt$G_T + MamGt$C_A); summary(a) # T>C is the most significant
a<-lm(MamGt$GenerationLength_d ~ MamGt$A_T +  MamGt$T_C + MamGt$G_T); summary(a) # T>C is the most significant
a<-lm(log2(MamGt$GenerationLength_d) ~ scale(MamGt$A_T) +  scale(MamGt$T_C) + scale(MamGt$G_T)); summary(a) # T>C is the most significant#
# (Intercept)      10.39025    0.05584 186.064  < 2e-16 ***
#  scale(MamGt$A_T) -0.18037    0.05603  -3.219  0.00138 **
#  scale(MamGt$T_C)  0.26205    0.05734   4.570 6.42e-06 ***
#  scale(MamGt$G_T) -0.18386    0.05723  -3.213  0.00142 **
#### ADD NUMBER OF MUTATIONS USED TO ESTIMATE MUT SPEC
summary(MamGt$NumOfFourFoldMutInCytB) # 5.00   33.75   58.50   84.34  117.50  403.00
a<-lm(log2(MamGt$GenerationLength_d) ~ scale(MamGt$A_T) +  scale(MamGt$T_C) + scale(MamGt$G_T) + scale(MamGt$NumOfFourFoldMutInCytB)); summary(a)
### remove effect of ancestral nucleotide frequency (WORKS!!!!!)
MamGt$T_C.NoEffectOfTFreq = MamGt$T_C / (MamGt$T_C + MamGt$T_A + MamGt$T_G); summary(MamGt$T_C.NoEffectOfTFreq)
cor.test(MamGt$GenerationLength_d,MamGt$T_C.NoEffectOfTFreq, method = 'spearman') # positive and significant!!!! rho = 0.164, p = 0.0007114
plot(log2(MamGt$GenerationLength_d),MamGt$T_C)
View(MamGt)
### derive a table for patient-specific analysis
rm(list=ls(all=TRUE))
########################################
######### 1: DERIVE TABLE Som
########################################
############ A: read human ref seq (note that it is hg19 - not cambridge reference!):
RefSeq = read.table("../../Body/1Raw/chrM_refAllele.txt", header = FALSE, sep = '')
names(RefSeq)=c('Position','AncestralAllele')
############ B: read GTEx mutations and merge them with Ref Seq:
SomMut = read.table("../../Body/1Raw/TissueSpecificMtDNAMutationsGTEx.txt", header = TRUE, sep = '\t')
SomMut$Position = gsub('_(.*)','',SomMut$Mutation)  # gsub("_(.*)",'',READS$patient)
SomMut$DerivedAllele = gsub('(.*)_','',SomMut$Mutation)  # gsub("_(.*)",'',READS$patient)
nrow(SomMut) # 2565
Som = merge(SomMut,RefSeq, by = 'Position')
nrow(SomMut) # 2565
Som = Som[Som$DerivedAllele != Som$AncestralAllele,] # correct - in all lines Derived != Ancestral
nrow(SomMut) # 2565
Som$Substitution = paste(Som$AncestralAllele,Som$DerivedAllele, sep = '_')
table(Som$Substitution)
# A_C A_G A_T C_A C_G C_T G_A G_C G_T T_A T_C T_G
# 43 473  49  49   6 336 728  63  57  42 693  26
########## C: read subjectID and merge patient info:
SubjId = read.table("../../Body/1Raw/GtexTaiEvgenii/pheno.csv", header = TRUE, sep = ',')
SubjId = SubjId[,c(1,6,7,8)] # keep only SRR and patient specific important info (sex, age, Sibjid)
names(SubjId)[names(SubjId) == "run"] <- "SRR" # rename run into SRR
Som = merge(Som,SubjId, by = 'SRR')
########## D: read GTEx expression data:
Expr = read.table("../../Body/1Raw/TissueSpecificMtDNACoverageGTEx.txt", header = TRUE, sep = '\t')
ExprTissues = data.frame(table(Expr$Tissue))
ExprTissues = ExprTissues[order(ExprTissues$Var1),]
# merge by SRRID (lost 2565 - 2523 observations, but got expression level (percentMito) for each sample and alternative name of the Tissue (more simple))
nrow(Som) # 2565
Som = merge(Som,Expr, by.x = 'SRR', by.y = 'SRRID', all.x = TRUE)
nrow(Som) # 2565  - but not all of them have expression level defined  (2523 out of 2565)
TissueLongToTissueShort = unique(data.frame(Som$tissue,Som$Tissue))
# now, based on TissueLongToTissueShort and common sence I  manually create tissue vocabular:
TissuesVocab = c(
'Heart - Left Ventricle','Heart',
'Heart - Atrial Appendage','Heart',
'Cells - Transformed fibroblasts','Skin',
'Esophagus - Mucosa', 'Esophagus',
'Colon - Sigmoid', 'Colon',
'Artery - Aorta', 'Blood Vessel',
'Breast - Mammary Tissue', 'Breast',
'Cells - EBV-transformed lymphocytes', 'Blood',
'Liver', 'Liver',
'Whole Blood', 'Blood',
'Muscle - Skeletal', 'Muscle',
'Colon - Transverse', 'Colon',
'Adrenal Gland', 'Adrenal Gland',
'Vagina', 'Vagina',
'Stomach', 'Stomach',
'Pancreas', 'Pancreas',
'Nerve - Tibial', 'Nerve',
'Uterus', 'Uterus',
'Adipose - Subcutaneous', 'Adipose Tissue',
'Adipose - Visceral (Omentum)', 'Adipose Tissue', # my decision
'Skin - Not Sun Exposed (Suprapubic)', 'Skin',
'Skin - Sun Exposed (Lower leg)', 'Skin',
'Artery - Coronary', 'Blood Vessel',
'Artery - Tibial', 'Blood Vessel',
'Prostate', 'Prostate',
'Spleen', 'Spleen',
'Esophagus - Muscularis', 'Esophagus',
'Testis', 'Testis',
'Kidney - Cortex', 'Kidney',
'Lung', 'Lung',
'Ovary', 'Ovary',
'Small Intestine - Terminal Ileum', 'Small Intestine',
'Esophagus - Gastroesophageal Junction','Esophagus',
'Minor Salivary Gland', 'Salivary Gland',
'Thyroid', 'Thyroid',
'Pituitary', 'Pituitary',
'Brain - Putamen (basal ganglia)','Brain',
'Brain - Spinal cord (cervical c-1)','Brain',
'Brain - Caudate (basal ganglia)','Brain',
'Brain - Cerebellar Hemisphere','Brain',
'Brain - Substantia nigra','Brain',
'Brain - Anterior cingulate cortex (BA24)','Brain',
'Brain - Amygdala','Brain',
'Brain - Hypothalamus','Brain',
'Brain - Hippocampus','Brain',
'Brain - Cortex','Brain',
'Brain - Nucleus accumbens (basal ganglia)','Brain',
'Brain - Cerebellum','Brain',
'Brain - Frontal Cortex (BA9)','Brain'
)
TISS = data.frame(TissuesVocab[c(TRUE, FALSE)],TissuesVocab[c(FALSE, TRUE)]); names(TISS)=c('tissue','TissueShortName')
setdiff(as.character(unique(Som$tissue)),as.character(TISS$TissueLongName))
Som = merge(Som, TISS) # add TissueShortName to each 'tissue'
########### E: Cell lifespans from the table here: https://docs.google.com/document/d/1UECub1DIdmuXwPqDLK8WRcZ6uIjEQiVmHXN1_XNVvUU/edit?usp=sharing
VecOfTissues = c('Adipose Tissue','Adrenal Gland','Bladder','Blood','Blood Vessel','Bone Marrow','Brain','Breast','Cervix Uteri','Colon','Esophagus','Heart','Kidney','Liver','Lung','Muscle','Nerve','Ovary','Pancreas','Prostate','Salivary Gland','Skin','Small Intestine','Spleen','Stomach','Testis','Thyroid','Uterus','Vagina','Pituitary')
VecOfTurnOvers = c(  2448,  455,  49,  30,  67.5,  3.2,  24637.5,  65.75,  5.7,  4.25,  10.5,  25300,  270,  363.5,  126,  5510,  24637.5,  30000,  315,  120,  60,  64,  7.05,  7.8,  1.4,  63.5,  3679.5,  13,  3.9, 25000)
All = data.frame(VecOfTissues,VecOfTurnOvers); names(All) = c('TissueShortName','TurnOverRate')
Som = merge(Som,All, by = 'TissueShortName')
### derive a table for patient-specific analysis
rm(list=ls(all=TRUE))
########################################
######### 1: DERIVE TABLE Som
########################################
############ A: read human ref seq (note that it is hg19 - not cambridge reference!):
RefSeq = read.table("../../Body/1Raw/chrM_refAllele.txt", header = FALSE, sep = '')
names(RefSeq)=c('Position','AncestralAllele')
############ B: read GTEx mutations and merge them with Ref Seq:
SomMut = read.table("../../Body/1Raw/TissueSpecificMtDNAMutationsGTEx.txt", header = TRUE, sep = '\t')
SomMut$Position = gsub('_(.*)','',SomMut$Mutation)  # gsub("_(.*)",'',READS$patient)
SomMut$DerivedAllele = gsub('(.*)_','',SomMut$Mutation)  # gsub("_(.*)",'',READS$patient)
nrow(SomMut) # 2565
Som = merge(SomMut,RefSeq, by = 'Position')
nrow(SomMut) # 2565
Som = Som[Som$DerivedAllele != Som$AncestralAllele,] # correct - in all lines Derived != Ancestral
nrow(SomMut) # 2565
Som$Substitution = paste(Som$AncestralAllele,Som$DerivedAllele, sep = '_')
table(Som$Substitution)
# A_C A_G A_T C_A C_G C_T G_A G_C G_T T_A T_C T_G
# 43 473  49  49   6 336 728  63  57  42 693  26
########## C: read subjectID and merge patient info:
SubjId = read.table("../../Body/1Raw/GtexTaiEvgenii/pheno.csv", header = TRUE, sep = ',')
SubjId = SubjId[,c(1,6,7,8)] # keep only SRR and patient specific important info (sex, age, Sibjid)
names(SubjId)[names(SubjId) == "run"] <- "SRR" # rename run into SRR
Som = merge(Som,SubjId, by = 'SRR')
########## D: read GTEx expression data:
Expr = read.table("../../Body/1Raw/TissueSpecificMtDNACoverageGTEx.txt", header = TRUE, sep = '\t')
ExprTissues = data.frame(table(Expr$Tissue))
ExprTissues = ExprTissues[order(ExprTissues$Var1),]
# merge by SRRID (lost 2565 - 2523 observations, but got expression level (percentMito) for each sample and alternative name of the Tissue (more simple))
nrow(Som) # 2565
Som = merge(Som,Expr, by.x = 'SRR', by.y = 'SRRID', all.x = TRUE)
nrow(Som) # 2565  - but not all of them have expression level defined  (2523 out of 2565)
TissueLongToTissueShort = unique(data.frame(Som$tissue,Som$Tissue))
# now, based on TissueLongToTissueShort and common sence I  manually create tissue vocabular:
TissuesVocab = c(
'Heart - Left Ventricle','Heart',
'Heart - Atrial Appendage','Heart',
'Cells - Transformed fibroblasts','Skin',
'Esophagus - Mucosa', 'Esophagus',
'Colon - Sigmoid', 'Colon',
'Artery - Aorta', 'Blood Vessel',
'Breast - Mammary Tissue', 'Breast',
'Cells - EBV-transformed lymphocytes', 'Blood',
'Liver', 'Liver',
'Whole Blood', 'Blood',
'Muscle - Skeletal', 'Muscle',
'Colon - Transverse', 'Colon',
'Adrenal Gland', 'Adrenal Gland',
'Vagina', 'Vagina',
'Stomach', 'Stomach',
'Pancreas', 'Pancreas',
'Nerve - Tibial', 'Nerve',
'Uterus', 'Uterus',
'Adipose - Subcutaneous', 'Adipose Tissue',
'Adipose - Visceral (Omentum)', 'Adipose Tissue', # my decision
'Skin - Not Sun Exposed (Suprapubic)', 'Skin',
'Skin - Sun Exposed (Lower leg)', 'Skin',
'Artery - Coronary', 'Blood Vessel',
'Artery - Tibial', 'Blood Vessel',
'Prostate', 'Prostate',
'Spleen', 'Spleen',
'Esophagus - Muscularis', 'Esophagus',
'Testis', 'Testis',
'Kidney - Cortex', 'Kidney',
'Lung', 'Lung',
'Ovary', 'Ovary',
'Small Intestine - Terminal Ileum', 'Small Intestine',
'Esophagus - Gastroesophageal Junction','Esophagus',
'Minor Salivary Gland', 'Salivary Gland',
'Thyroid', 'Thyroid',
'Pituitary', 'Pituitary',
'Brain - Putamen (basal ganglia)','Brain',
'Brain - Spinal cord (cervical c-1)','Brain',
'Brain - Caudate (basal ganglia)','Brain',
'Brain - Cerebellar Hemisphere','Brain',
'Brain - Substantia nigra','Brain',
'Brain - Anterior cingulate cortex (BA24)','Brain',
'Brain - Amygdala','Brain',
'Brain - Hypothalamus','Brain',
'Brain - Hippocampus','Brain',
'Brain - Cortex','Brain',
'Brain - Nucleus accumbens (basal ganglia)','Brain',
'Brain - Cerebellum','Brain',
'Brain - Frontal Cortex (BA9)','Brain'
)
TISS = data.frame(TissuesVocab[c(TRUE, FALSE)],TissuesVocab[c(FALSE, TRUE)]); names(TISS)=c('tissue','TissueShortName')
setdiff(as.character(unique(Som$tissue)),as.character(TISS$TissueLongName))
Som = merge(Som, TISS) # add TissueShortName to each 'tissue'
########### E: Cell lifespans from the table here: https://docs.google.com/document/d/1UECub1DIdmuXwPqDLK8WRcZ6uIjEQiVmHXN1_XNVvUU/edit?usp=sharing
VecOfTissues = c('Adipose Tissue','Adrenal Gland','Bladder','Blood','Blood Vessel','Bone Marrow','Brain','Breast','Cervix Uteri','Colon','Esophagus','Heart','Kidney','Liver','Lung','Muscle','Nerve','Ovary','Pancreas','Prostate','Salivary Gland','Skin','Small Intestine','Spleen','Stomach','Testis','Thyroid','Uterus','Vagina','Pituitary')
VecOfTurnOvers = c(  2448,  455,  49,  30,  67.5,  3.2,  24637.5,  65.75,  5.7,  4.25,  10.5,  25300,  270,  363.5,  126,  5510,  24637.5,  30000,  315,  120,  60,  64,  7.05,  7.8,  1.4,  63.5,  3679.5,  13,  3.9, 25000)
All = data.frame(VecOfTissues,VecOfTurnOvers); names(All) = c('TissueShortName','TurnOverRate')
Som = merge(Som,All, by = 'TissueShortName')
write.table(Som,"../../Body/2Derived/HealthySomaticHumanMutations.GTEx.PatientSpecificDerive.txt", row.names = FALSE, quote = FALSE)
rm(list=ls(all=TRUE))
Som = read.table(Som,"../../Body/2Derived/HealthySomaticHumanMutations.GTEx.PatientSpecificDerive.txt", row.names = FALSE, quote = FALSE)
rm(list=ls(all=TRUE))
Som = read.table("../../Body/2Derived/HealthySomaticHumanMutations.GTEx.PatientSpecificDerive.txt", header = TRUE)
Som = read.table("../../Body/2Derived/HealthySomaticHumanMutations.GTEx.PatientSpecificDerive.txt", header = TRUE, sep = '\t')
Som = read.table("../../Body/2Derived/HealthySomaticHumanMutations.GTEx.PatientSpecificDerive.txt", header = TRUE, sep = ' ')
Som = read.table("../../Body/2Derived/HealthySomaticHumanMutations.GTEx.PatientSpecificDerive.txt", header = TRUE)
Som = read.table("../../Body/2Derived/HealthySomaticHumanMutations.GTEx.PatientSpecificDerive.txt", header = TRUE, sep = '\t')
View(Som)
Som = read.table("../../Body/2Derived/HealthySomaticHumanMutations.GTEx.PatientSpecificDerive.txt", header = TRUE, sep = ',')
Som = read.table("../../Body/2Derived/HealthySomaticHumanMutations.GTEx.PatientSpecificDerive.txt", header = TRUE, sep = '.')
### derive a table for patient-specific analysis
rm(list=ls(all=TRUE))
########################################
######### 1: DERIVE TABLE Som
########################################
############ A: read human ref seq (note that it is hg19 - not cambridge reference!):
RefSeq = read.table("../../Body/1Raw/chrM_refAllele.txt", header = FALSE, sep = '')
names(RefSeq)=c('Position','AncestralAllele')
############ B: read GTEx mutations and merge them with Ref Seq:
SomMut = read.table("../../Body/1Raw/TissueSpecificMtDNAMutationsGTEx.txt", header = TRUE, sep = '\t')
SomMut$Position = gsub('_(.*)','',SomMut$Mutation)  # gsub("_(.*)",'',READS$patient)
SomMut$DerivedAllele = gsub('(.*)_','',SomMut$Mutation)  # gsub("_(.*)",'',READS$patient)
nrow(SomMut) # 2565
Som = merge(SomMut,RefSeq, by = 'Position')
nrow(SomMut) # 2565
Som = Som[Som$DerivedAllele != Som$AncestralAllele,] # correct - in all lines Derived != Ancestral
nrow(SomMut) # 2565
Som$Substitution = paste(Som$AncestralAllele,Som$DerivedAllele, sep = '_')
table(Som$Substitution)
# A_C A_G A_T C_A C_G C_T G_A G_C G_T T_A T_C T_G
# 43 473  49  49   6 336 728  63  57  42 693  26
########## C: read subjectID and merge patient info:
SubjId = read.table("../../Body/1Raw/GtexTaiEvgenii/pheno.csv", header = TRUE, sep = ',')
SubjId = SubjId[,c(1,6,7,8)] # keep only SRR and patient specific important info (sex, age, Sibjid)
names(SubjId)[names(SubjId) == "run"] <- "SRR" # rename run into SRR
Som = merge(Som,SubjId, by = 'SRR')
########## D: read GTEx expression data:
Expr = read.table("../../Body/1Raw/TissueSpecificMtDNACoverageGTEx.txt", header = TRUE, sep = '\t')
ExprTissues = data.frame(table(Expr$Tissue))
ExprTissues = ExprTissues[order(ExprTissues$Var1),]
# merge by SRRID (lost 2565 - 2523 observations, but got expression level (percentMito) for each sample and alternative name of the Tissue (more simple))
nrow(Som) # 2565
Som = merge(Som,Expr, by.x = 'SRR', by.y = 'SRRID', all.x = TRUE)
nrow(Som) # 2565  - but not all of them have expression level defined  (2523 out of 2565)
TissueLongToTissueShort = unique(data.frame(Som$tissue,Som$Tissue))
# now, based on TissueLongToTissueShort and common sence I  manually create tissue vocabular:
TissuesVocab = c(
'Heart - Left Ventricle','Heart',
'Heart - Atrial Appendage','Heart',
'Cells - Transformed fibroblasts','Skin',
'Esophagus - Mucosa', 'Esophagus',
'Colon - Sigmoid', 'Colon',
'Artery - Aorta', 'Blood Vessel',
'Breast - Mammary Tissue', 'Breast',
'Cells - EBV-transformed lymphocytes', 'Blood',
'Liver', 'Liver',
'Whole Blood', 'Blood',
'Muscle - Skeletal', 'Muscle',
'Colon - Transverse', 'Colon',
'Adrenal Gland', 'Adrenal Gland',
'Vagina', 'Vagina',
'Stomach', 'Stomach',
'Pancreas', 'Pancreas',
'Nerve - Tibial', 'Nerve',
'Uterus', 'Uterus',
'Adipose - Subcutaneous', 'Adipose Tissue',
'Adipose - Visceral (Omentum)', 'Adipose Tissue', # my decision
'Skin - Not Sun Exposed (Suprapubic)', 'Skin',
'Skin - Sun Exposed (Lower leg)', 'Skin',
'Artery - Coronary', 'Blood Vessel',
'Artery - Tibial', 'Blood Vessel',
'Prostate', 'Prostate',
'Spleen', 'Spleen',
'Esophagus - Muscularis', 'Esophagus',
'Testis', 'Testis',
'Kidney - Cortex', 'Kidney',
'Lung', 'Lung',
'Ovary', 'Ovary',
'Small Intestine - Terminal Ileum', 'Small Intestine',
'Esophagus - Gastroesophageal Junction','Esophagus',
'Minor Salivary Gland', 'Salivary Gland',
'Thyroid', 'Thyroid',
'Pituitary', 'Pituitary',
'Brain - Putamen (basal ganglia)','Brain',
'Brain - Spinal cord (cervical c-1)','Brain',
'Brain - Caudate (basal ganglia)','Brain',
'Brain - Cerebellar Hemisphere','Brain',
'Brain - Substantia nigra','Brain',
'Brain - Anterior cingulate cortex (BA24)','Brain',
'Brain - Amygdala','Brain',
'Brain - Hypothalamus','Brain',
'Brain - Hippocampus','Brain',
'Brain - Cortex','Brain',
'Brain - Nucleus accumbens (basal ganglia)','Brain',
'Brain - Cerebellum','Brain',
'Brain - Frontal Cortex (BA9)','Brain'
)
TISS = data.frame(TissuesVocab[c(TRUE, FALSE)],TissuesVocab[c(FALSE, TRUE)]); names(TISS)=c('tissue','TissueShortName')
setdiff(as.character(unique(Som$tissue)),as.character(TISS$TissueLongName))
Som = merge(Som, TISS) # add TissueShortName to each 'tissue'
########### E: Cell lifespans from the table here: https://docs.google.com/document/d/1UECub1DIdmuXwPqDLK8WRcZ6uIjEQiVmHXN1_XNVvUU/edit?usp=sharing
VecOfTissues = c('Adipose Tissue','Adrenal Gland','Bladder','Blood','Blood Vessel','Bone Marrow','Brain','Breast','Cervix Uteri','Colon','Esophagus','Heart','Kidney','Liver','Lung','Muscle','Nerve','Ovary','Pancreas','Prostate','Salivary Gland','Skin','Small Intestine','Spleen','Stomach','Testis','Thyroid','Uterus','Vagina','Pituitary')
VecOfTurnOvers = c(  2448,  455,  49,  30,  67.5,  3.2,  24637.5,  65.75,  5.7,  4.25,  10.5,  25300,  270,  363.5,  126,  5510,  24637.5,  30000,  315,  120,  60,  64,  7.05,  7.8,  1.4,  63.5,  3679.5,  13,  3.9, 25000)
All = data.frame(VecOfTissues,VecOfTurnOvers); names(All) = c('TissueShortName','TurnOverRate')
Som = merge(Som,All, by = 'TissueShortName')
########### F: write derive for future analyses:
write.table(Som,"../../Body/2Derived/HealthySomaticHumanMutations.GTEx.PatientSpecificDerive.txt", row.names = FALSE, quote = FALSE, sep = '\t')
rm(list=ls(all=TRUE))
Som = read.table("../../Body/2Derived/HealthySomaticHumanMutations.GTEx.PatientSpecificDerive.txt", header = TRUE, sep = '\t')
View(Som)
rm(list=ls(all=TRUE))
Som = read.table("../../Body/2Derived/HealthySomaticHumanMutations.GTEx.PatientSpecificDerive.txt", header = TRUE, sep = '\t')
### derive a table for patient-specific analysis
rm(list=ls(all=TRUE))
########################################
######### 1: DERIVE TABLE Som
########################################
############ A: read human ref seq (note that it is hg19 - not cambridge reference!):
RefSeq = read.table("../../Body/1Raw/chrM_refAllele.txt", header = FALSE, sep = '')
names(RefSeq)=c('Position','AncestralAllele')
############ B: read GTEx mutations and merge them with Ref Seq:
SomMut = read.table("../../Body/1Raw/TissueSpecificMtDNAMutationsGTEx.txt", header = TRUE, sep = '\t')
SomMut$Position = gsub('_(.*)','',SomMut$Mutation)  # gsub("_(.*)",'',READS$patient)
SomMut$DerivedAllele = gsub('(.*)_','',SomMut$Mutation)  # gsub("_(.*)",'',READS$patient)
nrow(SomMut) # 2565
Som = merge(SomMut,RefSeq, by = 'Position')
nrow(SomMut) # 2565
Som = Som[Som$DerivedAllele != Som$AncestralAllele,] # correct - in all lines Derived != Ancestral
nrow(SomMut) # 2565
Som$Substitution = paste(Som$AncestralAllele,Som$DerivedAllele, sep = '_')
table(Som$Substitution)
# A_C A_G A_T C_A C_G C_T G_A G_C G_T T_A T_C T_G
# 43 473  49  49   6 336 728  63  57  42 693  26
########## C: read subjectID and merge patient info:
SubjId = read.table("../../Body/1Raw/GtexTaiEvgenii/pheno.csv", header = TRUE, sep = ',')
SubjId = SubjId[,c(1,6,7,8)] # keep only SRR and patient specific important info (sex, age, Sibjid)
names(SubjId)[names(SubjId) == "run"] <- "SRR" # rename run into SRR
Som = merge(Som,SubjId, by = 'SRR')
########## D: read GTEx expression data:
Expr = read.table("../../Body/1Raw/TissueSpecificMtDNACoverageGTEx.txt", header = TRUE, sep = '\t')
ExprTissues = data.frame(table(Expr$Tissue))
ExprTissues = ExprTissues[order(ExprTissues$Var1),]
# merge by SRRID (lost 2565 - 2523 observations, but got expression level (percentMito) for each sample and alternative name of the Tissue (more simple))
nrow(Som) # 2565
Som = merge(Som,Expr, by.x = 'SRR', by.y = 'SRRID', all.x = TRUE)
nrow(Som) # 2565  - but not all of them have expression level defined  (2523 out of 2565)
TissueLongToTissueShort = unique(data.frame(Som$tissue,Som$Tissue))
# now, based on TissueLongToTissueShort and common sence I  manually create tissue vocabular:
TissuesVocab = c(
'Heart - Left Ventricle','Heart',
'Heart - Atrial Appendage','Heart',
'Cells - Transformed fibroblasts','Skin',
'Esophagus - Mucosa', 'Esophagus',
'Colon - Sigmoid', 'Colon',
'Artery - Aorta', 'Blood Vessel',
'Breast - Mammary Tissue', 'Breast',
'Cells - EBV-transformed lymphocytes', 'Blood',
'Liver', 'Liver',
'Whole Blood', 'Blood',
'Muscle - Skeletal', 'Muscle',
'Colon - Transverse', 'Colon',
'Adrenal Gland', 'Adrenal Gland',
'Vagina', 'Vagina',
'Stomach', 'Stomach',
'Pancreas', 'Pancreas',
'Nerve - Tibial', 'Nerve',
'Uterus', 'Uterus',
'Adipose - Subcutaneous', 'Adipose Tissue',
'Adipose - Visceral (Omentum)', 'Adipose Tissue', # my decision
'Skin - Not Sun Exposed (Suprapubic)', 'Skin',
'Skin - Sun Exposed (Lower leg)', 'Skin',
'Artery - Coronary', 'Blood Vessel',
'Artery - Tibial', 'Blood Vessel',
'Prostate', 'Prostate',
'Spleen', 'Spleen',
'Esophagus - Muscularis', 'Esophagus',
'Testis', 'Testis',
'Kidney - Cortex', 'Kidney',
'Lung', 'Lung',
'Ovary', 'Ovary',
'Small Intestine - Terminal Ileum', 'Small Intestine',
'Esophagus - Gastroesophageal Junction','Esophagus',
'Minor Salivary Gland', 'Salivary Gland',
'Thyroid', 'Thyroid',
'Pituitary', 'Pituitary',
'Brain - Putamen (basal ganglia)','Brain',
'Brain - Spinal cord (cervical c-1)','Brain',
'Brain - Caudate (basal ganglia)','Brain',
'Brain - Cerebellar Hemisphere','Brain',
'Brain - Substantia nigra','Brain',
'Brain - Anterior cingulate cortex (BA24)','Brain',
'Brain - Amygdala','Brain',
'Brain - Hypothalamus','Brain',
'Brain - Hippocampus','Brain',
'Brain - Cortex','Brain',
'Brain - Nucleus accumbens (basal ganglia)','Brain',
'Brain - Cerebellum','Brain',
'Brain - Frontal Cortex (BA9)','Brain'
)
TISS = data.frame(TissuesVocab[c(TRUE, FALSE)],TissuesVocab[c(FALSE, TRUE)]); names(TISS)=c('tissue','TissueShortName')
setdiff(as.character(unique(Som$tissue)),as.character(TISS$TissueLongName))
Som = merge(Som, TISS) # add TissueShortName to each 'tissue'
########### E: Cell lifespans from the table here: https://docs.google.com/document/d/1UECub1DIdmuXwPqDLK8WRcZ6uIjEQiVmHXN1_XNVvUU/edit?usp=sharing
VecOfTissues = c('Adipose Tissue','Adrenal Gland','Bladder','Blood','Blood Vessel','Bone Marrow','Brain','Breast','Cervix Uteri','Colon','Esophagus','Heart','Kidney','Liver','Lung','Muscle','Nerve','Ovary','Pancreas','Prostate','Salivary Gland','Skin','Small Intestine','Spleen','Stomach','Testis','Thyroid','Uterus','Vagina','Pituitary')
VecOfTurnOvers = c(  2448,  455,  49,  30,  67.5,  3.2,  24637.5,  65.75,  5.7,  4.25,  10.5,  25300,  270,  363.5,  126,  5510,  24637.5,  30000,  315,  120,  60,  64,  7.05,  7.8,  1.4,  63.5,  3679.5,  13,  3.9, 25000)
All = data.frame(VecOfTissues,VecOfTurnOvers); names(All) = c('TissueShortName','TurnOverRate')
Som = merge(Som,All, by = 'TissueShortName')
########### F: write derive for future analyses:
write.table(Som,"../../Body/2Derived/HealthySomaticHumanMutations.GTEx.PatientSpecificDerive.txt", row.names = FALSE, quote = FALSE, sep = '\t')
rm(list=ls(all=TRUE))
### non independence of mutations within the same patient / tissue ??? => nested logistic (linear) regression (glm) with classes | should we????
Som = read.table("../../Body/2Derived/HealthySomaticHumanMutations.GTEx.PatientSpecificDerive.txt", header = TRUE, sep = '\t')
View(Som)
length(unique(Som$SRR))
nrow(Som)
length(unique(Som$TissueShortName))
length(unique(Som$subjid)) # 27
rm(list=ls(all=TRUE))
library(dplyr)
Mut = read.table("../../Body/1Raw/mtDNA_snv_Oct2016.txt", head = TRUE, sep = '\t')
Decode = read.table("../../Body/1Raw/PancancerInfoMetadata.txt", head = TRUE, sep = '\t')
Decode = Decode[,c(2,4)]
Mut = merge(Mut,Decode, by.x = 'sample', by.y = 'submitter_donor_id', all.x = TRUE)
Hyp = read.table("../../Body/1Raw/hypoxicCancers.txt", head = TRUE, sep = '\t')
HypMut = merge(Mut,Hyp, by = 'aliquot_id')
