df$even_gear=df$gear %% 2 == 1
df$even_gear[df$even_gear == TRUE]=1
df = data.frame(name = 1:10, gear=1:10)
df$even_gear=df$gear %% 2 == 1
df$even_gear[df$even_gear == TRUE]=0
df = data.frame(name = 1:10, gear=1:10)
df$even_gear=df$gear %% 2 == 1
df$even_gear[df$even_gear != TRUE]=1
df$gear %% 2 == 1
df$even_gear[df$even_gear == FALSE]=1
df$even_gear == FALSE
df = data.frame(name = 1:10, gear=1:10)
df$even_gear=df$gear %% 2 == 1
df$even_gear[df$even_gear == FALSE]=1
df = data.frame(name = 1:10, gear=1:10)
df$even_gear=df$gear %% 2 == 1
df$even_gear == FALSE
df$even_gear[df$even_gear == FALSE]
df = data.frame(name = 1:10, gear=1:10)
df$even_gear=df$gear %% 2 == 1
for (i in nrow(df)){
if (df$even_gear[i] == TRUE){
df$even_gear[i]=0
}else{
df$even_gear[i]=1
}
}
for (i in nrow(df)){
if (df$even_gear[i] == TRUE){
df$even_gear[i]=1
}else{
df$even_gear[i]=0
}
}
df$even_gear=df$gear %% 2 == 1
for (i in nrow(df)){
if (df$even_gear[i] == TRUE){
df$even_gear[i]=1
}else{
df$even_gear[i]=0
}
}
even_gear=df$gear %% 2 == 1
even_gear=df$gear %% 2 == 1
even_gear
df = data.frame(name = 1:10, gear=1:10)
even_gear=df$gear %% 2 == 1
df$even_gear[df$even_gear == even_gear]=1
df$leven_gear=df$gear %% 2 == 1
df = data.frame(name = 1:10, gear=1:10)
df$leven_gear=df$gear %% 2 == 1
df = data.frame(name = 1:10, gear=1:10)
df$leven_gear=df$gear %% 2 == 1
for (i in nrow(df)){
if (df$leven_gear[i] == TRUE){
df$even_gear[i]=1
}else{
df$even_gear[i]=0
}
}
df$leven_gear=df$gear %% 2 == 1
class(df$leven_gear)
df$leven_gear == TRUE
for (i in nrow(df)){
if (df$leven_gear[i] == TRUE){
df$even_gear[i]=1
if (df$leven_gear[i] != TRUE){
df$even_gear[i]=0
}
}
}
df = data.frame(name = 1:10, gear=1:10)
df$leven_gear=df$gear %% 2 == 1
class(df$leven_gear)
for (i in nrow(df)){
if (df$leven_gear[i] == TRUE){
df$even_gear[i]=1
if (df$leven_gear[i] != TRUE){
df$even_gear[i]=0
}
}
}
df$leven_gear=as.character(df$gear %% 2 == 1)
class(df$leven_gear)
df = data.frame(name = 1:10, gear=1:10)
df$leven_gear=as.character(df$gear %% 2 == 1)
df$even_gear[df$even_gear == even_gear]=1
df = data.frame(name = 1:10, gear=1:10)
df$leven_gear=as.character(df$gear %% 2 == 1)
class(df$leven_gear)
df[df$leven_gear == "TRUE"]$even_gear = 1
df$even_gear=0
df[df$leven_gear == "TRUE"]$even_gear = 1
df[df$leven_gear == "TRUE",]$even_gear = 1
df = data.frame(name = 1:10, gear=1:10)
df$leven_gear=as.character(df$gear %% 2 == 1)
df$even_gear=0
class(df$leven_gear)
df[df$leven_gear != "TRUE",]$even_gear = 1
df = data.frame(mpg = 1:10, cyl=1:10)
mtcars$cyl == 4
mtcars$cyl
df = data.frame(mpg = 1:10, cyl=1:10)
mpg_4 <- mtcars$mpg[mtcars$cyl == 4,]
mtcars$cyl
mpg_4 <- mtcars[mtcars$cyl == 4,]
mtcars[mtcars$cyl == 4,]
mpg_4 <- mtcars[mtcars$cyl == 4,]$cyl
mpg_4
source('~/.active-rstudio-document', echo=TRUE)
mpg_4
mtcars
mtcars[1]
nrow(mtcars)
mtcars$carb  >= 4
mtcars$cyl > 6
for (i in 1:nrow(mtcars)){
if (mtcars$carb  >= 4 | mtcars$cyl > 6){
mtcars$new_var[i] = 1
}else{
mtcars$new_var[i] = 0
}
}
mtcars
my_vctor
my_vctor
a = as.vector(AirPassengers)
a
a[1]
df = data.frame(q)
df = c()
df <- a[1]
rm(list=ls(all=TRUE))
### read data
MUT = read.table('../../Body/3Results/VertebratePolymorphisms.MutSpecData.OnlyFourFoldDegAllGenes.txt', header = TRUE)
rm(list=ls(all=TRUE))
setwd("../../Body/3Results/")
getwd()
library(gridExtra) # install.packages("gridExtra")
library(grid)
############ Syn mut
unzip("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt.zip")
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep = '\t')
if (file.exists("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")){file.remove("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")}
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep = '\t')
rm(list=ls(all=TRUE))
setwd("../../Body/3Results")
############ Syn mut
unzip("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt.zip")
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep = '\t')
if (file.exists("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")) {file.remove("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")}
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep = '\t')
rm(list=ls(all=TRUE))
setwd("../../Body/3Results")
############ Syn mut
unzip("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt.zip")
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep = '\t')
getwd()
kuptsovtable = read.table("../../Body/2Derived/EcologyMammalianTable01_KuptsovA_ver2_Full.txt", sep='\t', header=TRUE)
kuptsovtable = read.table("../../Body/2Derived/EcologyMammalianTable01_KuptsovA_ver2_Full.txt", sep='\t', header=TRUE)
HG = MUTFROMK[MUTFROMK$Species == "Heterocephalus_glaber",]
MM = MUTFROMK[MUTFROMK$Species == "Mus_musculus",]
CH = MUTFROMK[MUTFROMK$Species == "Cryptomys_hottentotus",]
ALL = rbind(HG, CH)
###########Taxonomy###################################################################
Taxa = read.table("../../Body/1Raw/TaxaFromKostya.Names.stat", sep = '\t',header = FALSE)
###########Taxonomy###################################################################
Taxa = read.table("../../Body/1Raw/TaxaFromKostya.Names.stat", sep = '\t',header = FALSE)
Taxa$Species = gsub(";.*",'',Taxa$V1);
for (i in (1:nrow(Taxa)))  {Taxa$Species[i] = paste(unlist(strsplit(as.character(Taxa$Species[i]),split = ' '))[1],unlist(strsplit(as.character(Taxa$Species[i]),split = ' '))[2], sep = '_')}
Taxa$Class = gsub(";Chordata;.*",'',Taxa$V1); Taxa$Class = gsub(".*;",'',Taxa$Class); table(Taxa$Class)
Taxa$Class = gsub('Actinopteri','Actinopterygii',Taxa$Class)
Taxa$Class = gsub("Testudines|Squamata|Crocodylia|Sphenodontia",'Reptilia',Taxa$Class)
###########Taxonomy###################################################################
Taxa = read.table("../../Body/1Raw/TaxaFromKostya.Names.stat", sep = '\t',header = FALSE)
Taxa$Species = gsub(";.*",'',Taxa$V1);
for (i in (1:nrow(Taxa)))  {Taxa$Species[i] = paste(unlist(strsplit(as.character(Taxa$Species[i]),split = ' '))[1],unlist(strsplit(as.character(Taxa$Species[i]),split = ' '))[2], sep = '_')}
Taxa$Class = gsub(";Chordata;.*",'',Taxa$V1); Taxa$Class = gsub(".*;",'',Taxa$Class); table(Taxa$Class)
Taxa$Class = gsub('Actinopteri','Actinopterygii',Taxa$Class)
Taxa$Class = gsub("Testudines|Squamata|Crocodylia|Sphenodontia",'Reptilia',Taxa$Class)
length(unique(Taxa$Species)) # 1708
table(Taxa$Class)
Taxa = Taxa[,-1]
TaxaMore = read.table("../../Body/1Raw/TaxaFromKostya.2NeedTaxa.tax.txt", sep = '\t',header = FALSE)
TaxaMore$Species = ''
for (i in (1:nrow(TaxaMore)))
{TaxaMore$Species[i] = paste(unlist(strsplit(as.character(TaxaMore$V1[i]),split = ' '))[1],unlist(strsplit(as.character(TaxaMore$V1[i]),split = ' '))[2], sep = '_')}
rm(list=ls(all=TRUE))
if (!require(ggpubr)) install.packages("ggpubr")
library("ggpubr")
###########Taxonomy###################################################################
Taxa = read.table("../../Body/1Raw/TaxaFromKostya.Names.stat", sep = '\t',header = FALSE)
Taxa$Species = gsub(";.*",'',Taxa$V1);
library(vioplot)
if (!require(vioplot)) install.packages("vioplot")
library(vioplot)
###########Taxonomy###################################################################
Taxa = read.table("../../Body/1Raw/TaxaFromKostya.Names.stat", sep = '\t',header = FALSE)
Taxa$Species = gsub(";.*",'',Taxa$V1);
for (i in (1:nrow(Taxa)))  {Taxa$Species[i] = paste(unlist(strsplit(as.character(Taxa$Species[i]),split = ' '))[1],unlist(strsplit(as.character(Taxa$Species[i]),split = ' '))[2], sep = '_')}
Taxa$Class = gsub(";Chordata;.*",'',Taxa$V1); Taxa$Class = gsub(".*;",'',Taxa$Class); table(Taxa$Class)
Taxa$Class = gsub('Actinopteri','Actinopterygii',Taxa$Class)
Taxa$Class = gsub("Testudines|Squamata|Crocodylia|Sphenodontia",'Reptilia',Taxa$Class)
length(unique(Taxa$Species)) # 1708
table(Taxa$Class)
###########Taxonomy###################################################################
Taxa = read.table("../../Body/1Raw/TaxaFromKostya.Names.stat", sep = '\t',header = FALSE)
setwd("~/GitHub/mtDNA_mutspectrum/Body")
###########Taxonomy###################################################################
Taxa = read.table("../../Body/1Raw/TaxaFromKostya.Names.stat", sep = '\t',header = FALSE)
setwd("~/GitHub/mtDNA_mutspectrum/Head/2Scripts")
###########Taxonomy###################################################################
Taxa = read.table("../../Body/1Raw/TaxaFromKostya.Names.stat", sep = '\t',header = FALSE)
Taxa$Species = gsub(";.*",'',Taxa$V1);
for (i in (1:nrow(Taxa)))  {Taxa$Species[i] = paste(unlist(strsplit(as.character(Taxa$Species[i]),split = ' '))[1],unlist(strsplit(as.character(Taxa$Species[i]),split = ' '))[2], sep = '_')}
Taxa$Class = gsub(";Chordata;.*",'',Taxa$V1); Taxa$Class = gsub(".*;",'',Taxa$Class); table(Taxa$Class)
Taxa$Class = gsub('Actinopteri','Actinopterygii',Taxa$Class)
Taxa$Class = gsub("Testudines|Squamata|Crocodylia|Sphenodontia",'Reptilia',Taxa$Class)
length(unique(Taxa$Species)) # 1708
table(Taxa$Class)
Taxa = Taxa[,-1]
TaxaMore = read.table("../../Body/1Raw/TaxaFromKostya.2NeedTaxa.tax.txt", sep = '\t',header = FALSE)
TaxaMore$Species = ''
for (i in (1:nrow(TaxaMore)))
{TaxaMore$Species[i] = paste(unlist(strsplit(as.character(TaxaMore$V1[i]),split = ' '))[1],unlist(strsplit(as.character(TaxaMore$V1[i]),split = ' '))[2], sep = '_')}
TaxaMore$Class = gsub("; Chordata;.*",'',TaxaMore$V2);
TaxaMore$Class = gsub(".*; ",'',TaxaMore$Class);
TaxaMore$Class = gsub('Actinopteri','Actinopterygii',TaxaMore$Class)
TaxaMore$Class = gsub("Testudines|Squamata|Crocodylia",'Reptilia',TaxaMore$Class)
table(TaxaMore$Class)
TaxaMore = TaxaMore[,-c(1,2)]
Taxa = rbind(Taxa,TaxaMore); Taxa = unique(Taxa)
###########################MUT spectrum in Actinoptery##################################
MUT = read.table('../../Body/3Results/VertebratePolymorphisms.MutSpecData.OnlyFourFoldDegAllGenes.txt', header = TRUE)
MUTFROMK = merge(MUT, Taxa)
MUTFROMK = MUTFROMK[MUTFROMK$T_C > 0,]
MUTFROMK = MUTFROMK[MUTFROMK$A_G > 0,]
MUTFROMK$TCdivAG = MUTFROMK$T_C / MUTFROMK$A_G
MUTFROMK[MUTFROMK$Class == "Actinopterygii",]$TCdivAG
with(MUTFROMK, vioplot(
T_C[Class=="Actinopterygii"], T_C[Class=="Amphibia"], T_C[Class=="Reptilia"],T_C[Class=="Mammalia"],T_C[Class=="Aves"],
names = c(  "Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves")
))
with(MUTFROMK, vioplot(
T_C[Class=="Actinopterygii"], T_C[Class=="Amphibia"], T_C[Class=="Reptilia"],T_C[Class=="Mammalia"],T_C[Class=="Aves"],
names = c(  "Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), col=c("#6760db", "#6760db", "#6760db", "#db84cb", "#c7467e")
))
with(MUTFROMK, vioplot(
T_C[Class=="Actinopterygii"], T_C[Class=="Amphibia"], T_C[Class=="Reptilia"],T_C[Class=="Mammalia"],T_C[Class=="Aves"],
names = c(  "Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), col=c("#6760db", "#7849bf", "#9145c4", "#db84cb", "#c7467e")
))
with(MUTFROMK, vioplot(
T_C[Class=="Actinopterygii"], T_C[Class=="Amphibia"], T_C[Class=="Reptilia"],T_C[Class=="Mammalia"],T_C[Class=="Aves"],
names = c(  "Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), col=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c")
))
with(MUTFROMK, vioplot(
T_C[Class=="Actinopterygii"], T_C[Class=="Amphibia"], T_C[Class=="Reptilia"],T_C[Class=="Mammalia"],T_C[Class=="Aves"],
names = c(  "Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), col=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"),  ylab = "AH>GH"
))
with(MUTFROMK, vioplot(
TCdivAG[Class=="Actinopterygii"], TCdivAG[Class=="Amphibia"], TCdivAG[Class=="Reptilia"],TCdivAG[Class=="Mammalia"],TCdivAG_C[Class=="Aves"],
names = c(  "Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), col=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"),  ylab = "AH>GH"
))
table(MUTFROMK$Class)
MUTFROMK = MUTFROMK[MUTFROMK$T_C > 0,]
MUTFROMK = MUTFROMK[MUTFROMK$A_G > 0,]
MUTFROMK$TCdivAG = MUTFROMK$T_C / MUTFROMK$A_G
with(MUTFROMK, vioplot(
TCdivAG[Class=="Actinopterygii"], TCdivAG[Class=="Amphibia"], TCdivAG[Class=="Reptilia"],TCdivAG[Class=="Mammalia"],TCdivAG_C[Class=="Aves"],
names = c(  "Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), col=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"),  ylab = "AH>GH"
))
MUTFROMK$TCdivAG = MUTFROMK$T_C / MUTFROMK$A_G
with(MUTFROMK, vioplot(
TCdivAG[Class=="Actinopterygii"], TCdivAG[Class=="Amphibia"], TCdivAG[Class=="Reptilia"],TCdivAG[Class=="Mammalia"],TCdivAG_C[Class=="Aves"],
names = c(  "Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), col=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"),  ylab = "AH>GH"
))
with(MUTFROMK, vioplot(
TCdivAG[Class=="Actinopterygii"], TCdivAG[Class=="Amphibia"], TCdivAG[Class=="Reptilia"],TCdivAG[Class=="Mammalia"],TCdivAG[Class=="Aves"],
names = c(  "Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), col=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"),  ylab = "AH>GH"
))
with(MUTFROMK, vioplot(
TCdivAG[Class=="Actinopterygii"], TCdivAG[Class=="Amphibia"], TCdivAG[Class=="Reptilia"],TCdivAG[Class=="Mammalia"],TCdivAG[Class=="Aves"],
names = c(  "Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), col=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"),  ylab = "AH>GH",  outline = FALSE
))
with(MUTFROMK, vioplot(
TCdivAG[Class=="Actinopterygii"], TCdivAG[Class=="Amphibia"], TCdivAG[Class=="Reptilia"],TCdivAG[Class=="Mammalia"],TCdivAG[Class=="Aves"],
names = c(  "Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), col=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"),  ylab = "AH>GH",  outline = FALSE
))
with(MUTFROMK, vioplot(
TCdivAG[Class=="Actinopterygii"], TCdivAG[Class=="Amphibia"], TCdivAG[Class=="Reptilia"],TCdivAG[Class=="Mammalia"],TCdivAG[Class=="Aves"],
names = c(  "Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), col=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"),  ylab = "AH>GH",
))
with(MUTFROMK, vioplot(
TCdivAG[Class=="Actinopterygii"], TCdivAG[Class=="Amphibia"], TCdivAG[Class=="Reptilia"],TCdivAG[Class=="Mammalia"],TCdivAG[Class=="Aves"],
names = c(  "Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), col=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"),  ylab = "AH>GH",
))
with(MUTFROMK, vioplot(
TCdivAG[Class=="Actinopterygii"], TCdivAG[Class=="Amphibia"], TCdivAG[Class=="Reptilia"],TCdivAG[Class=="Mammalia"],TCdivAG[Class=="Aves"],
names = c(  "Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), col=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"),  ylab = "AH>GH"
))
with(MUTFROMK, vioplot(
TCdivAG[Class=="Actinopterygii"], TCdivAG[Class=="Amphibia"], TCdivAG[Class=="Reptilia"],TCdivAG[Class=="Mammalia"],TCdivAG[Class=="Aves"],
names = c(  "Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), col=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"),  ylab = "AH>GH",  outline = FALSE
))
with(MUTFROMK, vioplot(
TCdivAG[Class=="Actinopterygii"], TCdivAG[Class=="Amphibia"], TCdivAG[Class=="Reptilia"],TCdivAG[Class=="Mammalia"],TCdivAG[Class=="Aves"],
names = c(  "Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), col=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"),  ylab = "AH>GH",
))
with(MUTFROMK, vioplot(
TCdivAG[Class=="Actinopterygii"], TCdivAG[Class=="Amphibia"], TCdivAG[Class=="Reptilia"],TCdivAG[Class=="Mammalia"],TCdivAG[Class=="Aves"],
names = c(  "Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), col=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"),  ylab = "AH>GH",
))
with(MUTFROMK, vioplot(
TCdivAG[Class=="Actinopterygii"], TCdivAG[Class=="Amphibia"], TCdivAG[Class=="Reptilia"],TCdivAG[Class=="Mammalia"],TCdivAG[Class=="Aves"],
names = c(  "Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), col=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"),  ylab = "AH>GH"
))
ggviolin(MUTFROMK, x = "T_C", y = "Class", fill=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), xlab = c(  "Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves") )
ggviolin(MUTFROMK, x = "Class", y = "T_C", fill=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), xlab = c(  "Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves") )
ggviolin(MUTFROMK, x = "Class", y = "T_C", fill=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
ggviolin(MUTFROMK, x = "Class", y = "T_C")
ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"))
ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), col=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"),  ylab = "AH>GH")
ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), col=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), fill=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), fill=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves")
ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"))
ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"))
ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"),  fill=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"),  fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"),  fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), ylab = "AH>GH")
ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"),  fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), ylab = "AH>GH", add="box-plot")
ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"),  fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), ylab = "AH>GH", order=c(1,5,3,2,4))
ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"),  fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), ylab = "AH>GH", order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves")
ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"),  fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), ylab = "AH>GH", order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"))
ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"),  fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), ylab = "AH>GH", order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add='mean')
?desc_statby
ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"),  fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), ylab = "AH>GH", order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"),draw_quantiles = 0.5')
ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"),  fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), ylab = "AH>GH",\
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), draw_quantiles = 0.5)
ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"),  fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), ylab = "AH>GH",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), draw_quantiles = 0.5)
ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"),  fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), ylab = "AH>GH",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot")
p = ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"),  fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), ylab = "AH>GH",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot")
p + gradient_color(c("blue", "white", "red"))
p = ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "AH>GH",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot")
p + gradient_color(c("blue", "white", "red"))
p
gradient_color(c("blue", "white", "red")
gradient_color(c("blue", "white", "red"))
gradient_color(c("blue", "white", "red"))
p = ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "AH>GH",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "AH>GH",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
ggviolin(MUTFROMK, x = "Class", y = "TCdivAG", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "AH>GH div TH>CH",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
ggviolin(MUTFROMK, x = "Class", y = "TCdivAG", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "AH>GH div TH>CH",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"),
outlier.shape = NA)
ggviolin(MUTFROMK, x = "Class", y = "TCdivAG", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "AH>GH div TH>CH",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"),outlier.shape = NA, add = "jitter")
ggviolin(MUTFROMK, x = "Class", y = "TCdivAG", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "AH>GH div TH>CH",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"), add = "jitter")
ggviolin(MUTFROMK, x = "Class", y = "TCdivAG", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "AH>GH div TH>CH",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
MUTFROMK = MUTFROMK[MUTFROMK$TCdivAG < 50,]
ggviolin(MUTFROMK, x = "Class", y = "TCdivAG", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "AH>GH div TH>CH",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
MUTFROMK = MUTFROMK[MUTFROMK$TCdivAG < 30,]
ggviolin(MUTFROMK, x = "Class", y = "TCdivAG", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "AH>GH div TH>CH",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
MUTFROMK = merge(MUT, Taxa)
MUTFROMK = merge(MUT, Taxa)
MUTFROMK = MUTFROMK[MUTFROMK$T_C > 0,]
MUTFROMK = MUTFROMK[MUTFROMK$A_G > 0,]
MUTFROMK$TCdivAG = MUTFROMK$T_C / MUTFROMK$A_G
pdf("../../Body/4Figures/VertebratePolymorphisms.MutSpecComparisons.Ecology.AtoG.DiffClasses.MutSpectrum.VIOLIN.pdf")
ggviolin(MUTFROMK, x = "Class", y = "T_C", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "AH>GH",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
MUTFROMK = MUTFROMK[MUTFROMK$TCdivAG < 30,]
ggviolin(MUTFROMK, x = "Class", y = "TCdivAG", select = c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), ylab = "AH>GH div TH>CH",
order=c("Actinopterygii", "Amphibia", "Reptilia", "Mammalia","Aves"), add = "boxplot", fill="Class", palette=c("#6760db", "#7849bf", "#9145c4", "#c73a69", "#c2464c"))
dev.off()
rm(list=ls(all=TRUE))
if (!require(ggpubr)) install.packages("ggpubr")
library("ggpubr")
###########Taxonomy###################################################################
Taxa = read.table("../../Body/1Raw/TaxaFromKostya.Names.stat", sep = '\t',header = FALSE)
Taxa$Species = gsub(";.*",'',Taxa$V1);
for (i in (1:nrow(Taxa)))  {Taxa$Species[i] = paste(unlist(strsplit(as.character(Taxa$Species[i]),split = ' '))[1],unlist(strsplit(as.character(Taxa$Species[i]),split = ' '))[2], sep = '_')}
Taxa$Class = gsub(";Chordata;.*",'',Taxa$V1); Taxa$Class = gsub(".*;",'',Taxa$Class); table(Taxa$Class)
Taxa$Class = gsub('Actinopteri','Actinopterygii',Taxa$Class)
Taxa$Class = gsub("Testudines|Squamata|Crocodylia|Sphenodontia",'Reptilia',Taxa$Class)
length(unique(Taxa$Species)) # 1708
table(Taxa$Class)
Taxa = Taxa[,-1]
TaxaMore = read.table("../../Body/1Raw/TaxaFromKostya.2NeedTaxa.tax.txt", sep = '\t',header = FALSE)
TaxaMore$Species = ''
for (i in (1:nrow(TaxaMore)))
{TaxaMore$Species[i] = paste(unlist(strsplit(as.character(TaxaMore$V1[i]),split = ' '))[1],unlist(strsplit(as.character(TaxaMore$V1[i]),split = ' '))[2], sep = '_')}
TaxaMore$Class = gsub("; Chordata;.*",'',TaxaMore$V2);
TaxaMore$Class = gsub(".*; ",'',TaxaMore$Class);
TaxaMore$Class = gsub('Actinopteri','Actinopterygii',TaxaMore$Class)
TaxaMore$Class = gsub("Testudines|Squamata|Crocodylia",'Reptilia',TaxaMore$Class)
table(TaxaMore$Class)
TaxaMore = TaxaMore[,-c(1,2)]
Taxa = rbind(Taxa,TaxaMore); Taxa = unique(Taxa)
###########################MUT spectrum in Actinoptery##################################
MUT = read.table('../../Body/3Results/VertebratePolymorphisms.MutSpecData.OnlyFourFoldDegAllGenes.txt', header = TRUE)
MUTACTINOPTERITAXAFROMK = merge(MUT, Taxa)
MUTACTINOPTERITAXAFROMK = MUTACTINOPTERITAXAFROMK[MUTACTINOPTERITAXAFROMK$Class == "Actinopterygii",]
names(MUTACTINOPTERITAXAFROMK) = as.character(c("TH_GH", "TH_CH", "TH_AH", "GH_TH", "GH_CH", "GH_AH", "CH_TH", "CH_GH", "CH_AH", "AH_TH", "AH_GH", "AH_CH"))
MUTACTINOPTERITAXAFROMK=MUTACTINOPTERITAXAFROMK[,-1]
MUTACTINOPTERITAXAFROMK=MUTACTINOPTERITAXAFROMK[,-13]
temp = data.frame(t(MUTACTINOPTERITAXAFROMK))
a=c()
View(MUTACTINOPTERITAXAFROMK)
names(MUTACTINOPTERITAXAFROMK) = c("TH_GH", "TH_CH", "TH_AH", "GH_TH", "GH_CH", "GH_AH", "CH_TH", "CH_GH", "CH_AH", "AH_TH", "AH_GH", "AH_CH")
View(MUTACTINOPTERITAXAFROMK)
###########################MUT spectrum in Actinoptery##################################
MUT = read.table('../../Body/3Results/VertebratePolymorphisms.MutSpecData.OnlyFourFoldDegAllGenes.txt', header = TRUE)
MUTACTINOPTERITAXAFROMK = merge(MUT, Taxa)
MUTACTINOPTERITAXAFROMK = MUTACTINOPTERITAXAFROMK[MUTACTINOPTERITAXAFROMK$Class == "Actinopterygii",]
names(MUTACTINOPTERITAXAFROMK) = c("TH_GH", "TH_CH", "TH_AH", "GH_TH", "GH_CH", "GH_AH", "CH_TH", "CH_GH", "CH_AH", "AH_TH", "AH_GH", "AH_CH")
MUTACTINOPTERITAXAFROMK=MUTACTINOPTERITAXAFROMK[,-1]
MUTACTINOPTERITAXAFROMK=MUTACTINOPTERITAXAFROMK[,-13]
temp = data.frame(t(MUTACTINOPTERITAXAFROMK))
View(temp)
rm(list=ls(all=TRUE))
if (!require(ggpubr)) install.packages("ggpubr")
library("ggpubr")
###########Taxonomy###################################################################
Taxa = read.table("../../Body/1Raw/TaxaFromKostya.Names.stat", sep = '\t',header = FALSE)
Taxa$Species = gsub(";.*",'',Taxa$V1);
for (i in (1:nrow(Taxa)))  {Taxa$Species[i] = paste(unlist(strsplit(as.character(Taxa$Species[i]),split = ' '))[1],unlist(strsplit(as.character(Taxa$Species[i]),split = ' '))[2], sep = '_')}
Taxa$Class = gsub(";Chordata;.*",'',Taxa$V1); Taxa$Class = gsub(".*;",'',Taxa$Class); table(Taxa$Class)
Taxa$Class = gsub('Actinopteri','Actinopterygii',Taxa$Class)
Taxa$Class = gsub("Testudines|Squamata|Crocodylia|Sphenodontia",'Reptilia',Taxa$Class)
length(unique(Taxa$Species)) # 1708
table(Taxa$Class)
Taxa = Taxa[,-1]
TaxaMore = read.table("../../Body/1Raw/TaxaFromKostya.2NeedTaxa.tax.txt", sep = '\t',header = FALSE)
TaxaMore$Species = ''
for (i in (1:nrow(TaxaMore)))
{TaxaMore$Species[i] = paste(unlist(strsplit(as.character(TaxaMore$V1[i]),split = ' '))[1],unlist(strsplit(as.character(TaxaMore$V1[i]),split = ' '))[2], sep = '_')}
TaxaMore$Class = gsub("; Chordata;.*",'',TaxaMore$V2);
TaxaMore$Class = gsub(".*; ",'',TaxaMore$Class);
TaxaMore$Class = gsub('Actinopteri','Actinopterygii',TaxaMore$Class)
TaxaMore$Class = gsub("Testudines|Squamata|Crocodylia",'Reptilia',TaxaMore$Class)
table(TaxaMore$Class)
TaxaMore = TaxaMore[,-c(1,2)]
Taxa = rbind(Taxa,TaxaMore); Taxa = unique(Taxa)
###########################MUT spectrum in Actinoptery##################################
MUT = read.table('../../Body/3Results/VertebratePolymorphisms.MutSpecData.OnlyFourFoldDegAllGenes.txt', header = TRUE)
MUTACTINOPTERITAXAFROMK = merge(MUT, Taxa)
MUTACTINOPTERITAXAFROMK = MUTACTINOPTERITAXAFROMK[MUTACTINOPTERITAXAFROMK$Class == "Actinopterygii",]
MUTACTINOPTERITAXAFROMK=MUTACTINOPTERITAXAFROMK[,-1]
MUTACTINOPTERITAXAFROMK=MUTACTINOPTERITAXAFROMK[,-13]
temp = data.frame(t(MUTACTINOPTERITAXAFROMK))
a=c()
View(temp)
###########################MUT spectrum in Actinoptery##################################
MUT = read.table('../../Body/3Results/VertebratePolymorphisms.MutSpecData.OnlyFourFoldDegAllGenes.txt', header = TRUE)
MUTACTINOPTERITAXAFROMK = merge(MUT, Taxa)
MUTACTINOPTERITAXAFROMK = MUTACTINOPTERITAXAFROMK[MUTACTINOPTERITAXAFROMK$Class == "Actinopterygii",]
names(MUTACTINOPTERITAXAFROMK) = c("T_G", "T_C", "T_A", "G_T", "G_C", "G_A", "C_T", "C_G", "C_A", "A_T", "A_G", "A_C")
MUTACTINOPTERITAXAFROMK=MUTACTINOPTERITAXAFROMK[,-1]
MUTACTINOPTERITAXAFROMK=MUTACTINOPTERITAXAFROMK[,-13]
temp = data.frame(t(MUTACTINOPTERITAXAFROMK))
a=c()
View(temp)
###########################MUT spectrum in Actinoptery##################################
MUT = read.table('../../Body/3Results/VertebratePolymorphisms.MutSpecData.OnlyFourFoldDegAllGenes.txt', header = TRUE)
MUTACTINOPTERITAXAFROMK = merge(MUT, Taxa)
MUTACTINOPTERITAXAFROMK = MUTACTINOPTERITAXAFROMK[MUTACTINOPTERITAXAFROMK$Class == "Actinopterygii",]
MUTACTINOPTERITAXAFROMK=MUTACTINOPTERITAXAFROMK[,-1]
MUTACTINOPTERITAXAFROMK=MUTACTINOPTERITAXAFROMK[,-13]
temp = data.frame(t(MUTACTINOPTERITAXAFROMK))
a=c()
View(TaxaMore)
View(temp)
for(i in 1:ncol(temp)){
b = data.frame(temp[i], rownames(temp))
colnames(b)=c("Freq", "Sub")
a = rbind(a, b)
}
#c("TH>GH", "TH>CH", "TH>AH", "GH>TH", "GH>CH", "GH>AH", "CH>TH", "CH>GH", "CH>AH", "AH>TH", "AH>GH", "AH>CH")
pdf("../../Body/4Figures/VertebratePolymorphisms.MutSpecComparisons.Analyses.Ecology.Actinopterygii.FishBaseData.FIGURE1A.pdf")
ggbarplot(a, x = "Sub", y = "Freq", fill = "Sub", color = "Sub",
palette = c("#bdbdbd", "#73514f", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#055088", "#9c3d37", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#036a5b", "#bdbdbd"),
xlab="Substitution types", ylab="Normalised frequencies", add = "mean_se")
dev.off()
svg("../../Body/4Figures/VertebratePolymorphisms.MutSpecComparisons.Analyses.Ecology.Actinopterygii.FishBaseData.FIGURE1A.svg")
ggbarplot(a, x = "Sub", y = "Freq", fill = "Sub", color = "Sub",
palette = c("#bdbdbd", "#73514f", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#055088", "#9c3d37", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#036a5b", "#bdbdbd"),
xlab="Substitution types", ylab="Normalised frequencies", add = "mean_se", legend = "none")
dev.off()
#c("TH>GH", "TH>CH", "TH>AH", "GH>TH", "GH>CH", "GH>AH", "CH>TH", "CH>GH", "CH>AH", "AH>TH", "AH>GH", "AH>CH")
pdf("../../Body/4Figures/VertebratePolymorphisms.MutSpecComparisons.Analyses.Ecology.Actinopterygii.FishBaseData.FIGURE1A.pdf")
ggbarplot(a, x = "Sub", y = "Freq", fill = "Sub", color = "Sub",
palette = c("#bdbdbd", "#73514f", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#055088", "#9c3d37", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#036a5b", "#bdbdbd"),
xlab="Substitution types", ylab="Normalised frequencies", add = "mean_se", legend = "none")
dev.off()
svg("../../Body/4Figures/VertebratePolymorphisms.MutSpecComparisons.Analyses.Ecology.Actinopterygii.FishBaseData.FIGURE1A.svg")
ggbarplot(a, x = "Sub", y = "Freq", fill = "Sub", color = "Sub",
palette = c("#bdbdbd", "#73514f", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#055088", "#9c3d37", "#bdbdbd", "#bdbdbd", "#bdbdbd", "#036a5b", "#bdbdbd"),
xlab="Substitution types", ylab="Normalised frequencies", add = "mean_se")
dev.off()
