RefSeq = read.table("../../Body/1Raw/chrM_refAllele.txt", header = FALSE, sep = '')
names(RefSeq)=c('Position','AncestralAllele')
############ B: read GTEx mutations and merge them with Ref Seq:
SomMut = read.table("../../Body/1Raw/TissueSpecificMtDNAMutationsGTEx.txt", header = TRUE, sep = '\t')
SomMut$Position = gsub('_(.*)','',SomMut$Mutation)  # gsub("_(.*)",'',READS$patient)
SomMut$DerivedAllele = gsub('(.*)_','',SomMut$Mutation)  # gsub("_(.*)",'',READS$patient)
nrow(SomMut) # 2565
Som = merge(SomMut,RefSeq, by = 'Position')
nrow(SomMut) # 2565
Som = Som[Som$DerivedAllele != Som$AncestralAllele,] # correct - in all lines Derived != Ancestral
nrow(SomMut) # 2565
Som$Substitution = paste(Som$AncestralAllele,Som$DerivedAllele, sep = '_')
table(Som$Substitution)
# A_C A_G A_T C_A C_G C_T G_A G_C G_T T_A T_C T_G
# 43 473  49  49   6 336 728  63  57  42 693  26
########## C: read subjectID and merge patient info:
SubjId = read.table("../../Body/1Raw/GtexTaiEvgenii/pheno.csv", header = TRUE, sep = ',')
SubjId = SubjId[,c(1,6,7,8)] # keep only SRR and patient specific important info (sex, age, Sibjid)
names(SubjId)[names(SubjId) == "run"] <- "SRR" # rename run into SRR
Som = merge(Som,SubjId, by = 'SRR')
########## D: read GTEx expression data:
Expr = read.table("../../Body/1Raw/TissueSpecificMtDNACoverageGTEx.txt", header = TRUE, sep = '\t')
ExprTissues = data.frame(table(Expr$Tissue))
ExprTissues = ExprTissues[order(ExprTissues$Var1),]
# merge by SRRID (lost 2565 - 2523 observations, but got expression level (percentMito) for each sample and alternative name of the Tissue (more simple))
nrow(Som) # 2565
Som = merge(Som,Expr, by.x = 'SRR', by.y = 'SRRID', all.x = TRUE)
nrow(Som) # 2565  - but not all of them have expression level defined  (2523 out of 2565)
TissueLongToTissueShort = unique(data.frame(Som$tissue,Som$Tissue))
# now, based on TissueLongToTissueShort and common sence I  manually create tissue vocabular:
TissuesVocab = c(
'Heart - Left Ventricle','Heart',
'Heart - Atrial Appendage','Heart',
'Cells - Transformed fibroblasts','Skin',
'Esophagus - Mucosa', 'Esophagus',
'Colon - Sigmoid', 'Colon',
'Artery - Aorta', 'Blood Vessel',
'Breast - Mammary Tissue', 'Breast',
'Cells - EBV-transformed lymphocytes', 'Blood',
'Liver', 'Liver',
'Whole Blood', 'Blood',
'Muscle - Skeletal', 'Muscle',
'Colon - Transverse', 'Colon',
'Adrenal Gland', 'Adrenal Gland',
'Vagina', 'Vagina',
'Stomach', 'Stomach',
'Pancreas', 'Pancreas',
'Nerve - Tibial', 'Nerve',
'Uterus', 'Uterus',
'Adipose - Subcutaneous', 'Adipose Tissue',
'Adipose - Visceral (Omentum)', 'Adipose Tissue', # my decision
'Skin - Not Sun Exposed (Suprapubic)', 'Skin',
'Skin - Sun Exposed (Lower leg)', 'Skin',
'Artery - Coronary', 'Blood Vessel',
'Artery - Tibial', 'Blood Vessel',
'Prostate', 'Prostate',
'Spleen', 'Spleen',
'Esophagus - Muscularis', 'Esophagus',
'Testis', 'Testis',
'Kidney - Cortex', 'Kidney',
'Lung', 'Lung',
'Ovary', 'Ovary',
'Small Intestine - Terminal Ileum', 'Small Intestine',
'Esophagus - Gastroesophageal Junction','Esophagus',
'Minor Salivary Gland', 'Salivary Gland',
'Thyroid', 'Thyroid',
'Pituitary', 'Pituitary',
'Brain - Putamen (basal ganglia)','Brain',
'Brain - Spinal cord (cervical c-1)','Brain',
'Brain - Caudate (basal ganglia)','Brain',
'Brain - Cerebellar Hemisphere','Brain',
'Brain - Substantia nigra','Brain',
'Brain - Anterior cingulate cortex (BA24)','Brain',
'Brain - Amygdala','Brain',
'Brain - Hypothalamus','Brain',
'Brain - Hippocampus','Brain',
'Brain - Cortex','Brain',
'Brain - Nucleus accumbens (basal ganglia)','Brain',
'Brain - Cerebellum','Brain',
'Brain - Frontal Cortex (BA9)','Brain'
)
TISS = data.frame(TissuesVocab[c(TRUE, FALSE)],TissuesVocab[c(FALSE, TRUE)]); names(TISS)=c('tissue','TissueShortName')
setdiff(as.character(unique(Som$tissue)),as.character(TISS$TissueLongName))
Som = merge(Som, TISS) # add TissueShortName to each 'tissue'
########### E: Cell lifespans from the table here: https://docs.google.com/document/d/1UECub1DIdmuXwPqDLK8WRcZ6uIjEQiVmHXN1_XNVvUU/edit?usp=sharing
VecOfTissues = c('Adipose Tissue','Adrenal Gland','Bladder','Blood','Blood Vessel','Bone Marrow','Brain','Breast','Cervix Uteri','Colon','Esophagus','Heart','Kidney','Liver','Lung','Muscle','Nerve','Ovary','Pancreas','Prostate','Salivary Gland','Skin','Small Intestine','Spleen','Stomach','Testis','Thyroid','Uterus','Vagina','Pituitary')
VecOfTurnOvers = c(  2448,  455,  49,  30,  67.5,  3.2,  24637.5,  65.75,  5.7,  4.25,  10.5,  25300,  270,  363.5,  126,  5510,  24637.5,  30000,  315,  120,  60,  64,  7.05,  7.8,  1.4,  63.5,  3679.5,  13,  3.9, 25000)
All = data.frame(VecOfTissues,VecOfTurnOvers); names(All) = c('TissueShortName','TurnOverRate')
Som = merge(Som,All, by = 'TissueShortName')
write.table(Som,"../../Body/2Derived/HealthySomaticHumanMutations.GTEx.PatientSpecificDerive.txt", row.names = FALSE, quote = FALSE)
rm(list=ls(all=TRUE))
Som = read.table(Som,"../../Body/2Derived/HealthySomaticHumanMutations.GTEx.PatientSpecificDerive.txt", row.names = FALSE, quote = FALSE)
rm(list=ls(all=TRUE))
Som = read.table("../../Body/2Derived/HealthySomaticHumanMutations.GTEx.PatientSpecificDerive.txt", header = TRUE)
Som = read.table("../../Body/2Derived/HealthySomaticHumanMutations.GTEx.PatientSpecificDerive.txt", header = TRUE, sep = '\t')
Som = read.table("../../Body/2Derived/HealthySomaticHumanMutations.GTEx.PatientSpecificDerive.txt", header = TRUE, sep = ' ')
Som = read.table("../../Body/2Derived/HealthySomaticHumanMutations.GTEx.PatientSpecificDerive.txt", header = TRUE)
Som = read.table("../../Body/2Derived/HealthySomaticHumanMutations.GTEx.PatientSpecificDerive.txt", header = TRUE, sep = '\t')
View(Som)
Som = read.table("../../Body/2Derived/HealthySomaticHumanMutations.GTEx.PatientSpecificDerive.txt", header = TRUE, sep = ',')
Som = read.table("../../Body/2Derived/HealthySomaticHumanMutations.GTEx.PatientSpecificDerive.txt", header = TRUE, sep = '.')
### derive a table for patient-specific analysis
rm(list=ls(all=TRUE))
########################################
######### 1: DERIVE TABLE Som
########################################
############ A: read human ref seq (note that it is hg19 - not cambridge reference!):
RefSeq = read.table("../../Body/1Raw/chrM_refAllele.txt", header = FALSE, sep = '')
names(RefSeq)=c('Position','AncestralAllele')
############ B: read GTEx mutations and merge them with Ref Seq:
SomMut = read.table("../../Body/1Raw/TissueSpecificMtDNAMutationsGTEx.txt", header = TRUE, sep = '\t')
SomMut$Position = gsub('_(.*)','',SomMut$Mutation)  # gsub("_(.*)",'',READS$patient)
SomMut$DerivedAllele = gsub('(.*)_','',SomMut$Mutation)  # gsub("_(.*)",'',READS$patient)
nrow(SomMut) # 2565
Som = merge(SomMut,RefSeq, by = 'Position')
nrow(SomMut) # 2565
Som = Som[Som$DerivedAllele != Som$AncestralAllele,] # correct - in all lines Derived != Ancestral
nrow(SomMut) # 2565
Som$Substitution = paste(Som$AncestralAllele,Som$DerivedAllele, sep = '_')
table(Som$Substitution)
# A_C A_G A_T C_A C_G C_T G_A G_C G_T T_A T_C T_G
# 43 473  49  49   6 336 728  63  57  42 693  26
########## C: read subjectID and merge patient info:
SubjId = read.table("../../Body/1Raw/GtexTaiEvgenii/pheno.csv", header = TRUE, sep = ',')
SubjId = SubjId[,c(1,6,7,8)] # keep only SRR and patient specific important info (sex, age, Sibjid)
names(SubjId)[names(SubjId) == "run"] <- "SRR" # rename run into SRR
Som = merge(Som,SubjId, by = 'SRR')
########## D: read GTEx expression data:
Expr = read.table("../../Body/1Raw/TissueSpecificMtDNACoverageGTEx.txt", header = TRUE, sep = '\t')
ExprTissues = data.frame(table(Expr$Tissue))
ExprTissues = ExprTissues[order(ExprTissues$Var1),]
# merge by SRRID (lost 2565 - 2523 observations, but got expression level (percentMito) for each sample and alternative name of the Tissue (more simple))
nrow(Som) # 2565
Som = merge(Som,Expr, by.x = 'SRR', by.y = 'SRRID', all.x = TRUE)
nrow(Som) # 2565  - but not all of them have expression level defined  (2523 out of 2565)
TissueLongToTissueShort = unique(data.frame(Som$tissue,Som$Tissue))
# now, based on TissueLongToTissueShort and common sence I  manually create tissue vocabular:
TissuesVocab = c(
'Heart - Left Ventricle','Heart',
'Heart - Atrial Appendage','Heart',
'Cells - Transformed fibroblasts','Skin',
'Esophagus - Mucosa', 'Esophagus',
'Colon - Sigmoid', 'Colon',
'Artery - Aorta', 'Blood Vessel',
'Breast - Mammary Tissue', 'Breast',
'Cells - EBV-transformed lymphocytes', 'Blood',
'Liver', 'Liver',
'Whole Blood', 'Blood',
'Muscle - Skeletal', 'Muscle',
'Colon - Transverse', 'Colon',
'Adrenal Gland', 'Adrenal Gland',
'Vagina', 'Vagina',
'Stomach', 'Stomach',
'Pancreas', 'Pancreas',
'Nerve - Tibial', 'Nerve',
'Uterus', 'Uterus',
'Adipose - Subcutaneous', 'Adipose Tissue',
'Adipose - Visceral (Omentum)', 'Adipose Tissue', # my decision
'Skin - Not Sun Exposed (Suprapubic)', 'Skin',
'Skin - Sun Exposed (Lower leg)', 'Skin',
'Artery - Coronary', 'Blood Vessel',
'Artery - Tibial', 'Blood Vessel',
'Prostate', 'Prostate',
'Spleen', 'Spleen',
'Esophagus - Muscularis', 'Esophagus',
'Testis', 'Testis',
'Kidney - Cortex', 'Kidney',
'Lung', 'Lung',
'Ovary', 'Ovary',
'Small Intestine - Terminal Ileum', 'Small Intestine',
'Esophagus - Gastroesophageal Junction','Esophagus',
'Minor Salivary Gland', 'Salivary Gland',
'Thyroid', 'Thyroid',
'Pituitary', 'Pituitary',
'Brain - Putamen (basal ganglia)','Brain',
'Brain - Spinal cord (cervical c-1)','Brain',
'Brain - Caudate (basal ganglia)','Brain',
'Brain - Cerebellar Hemisphere','Brain',
'Brain - Substantia nigra','Brain',
'Brain - Anterior cingulate cortex (BA24)','Brain',
'Brain - Amygdala','Brain',
'Brain - Hypothalamus','Brain',
'Brain - Hippocampus','Brain',
'Brain - Cortex','Brain',
'Brain - Nucleus accumbens (basal ganglia)','Brain',
'Brain - Cerebellum','Brain',
'Brain - Frontal Cortex (BA9)','Brain'
)
TISS = data.frame(TissuesVocab[c(TRUE, FALSE)],TissuesVocab[c(FALSE, TRUE)]); names(TISS)=c('tissue','TissueShortName')
setdiff(as.character(unique(Som$tissue)),as.character(TISS$TissueLongName))
Som = merge(Som, TISS) # add TissueShortName to each 'tissue'
########### E: Cell lifespans from the table here: https://docs.google.com/document/d/1UECub1DIdmuXwPqDLK8WRcZ6uIjEQiVmHXN1_XNVvUU/edit?usp=sharing
VecOfTissues = c('Adipose Tissue','Adrenal Gland','Bladder','Blood','Blood Vessel','Bone Marrow','Brain','Breast','Cervix Uteri','Colon','Esophagus','Heart','Kidney','Liver','Lung','Muscle','Nerve','Ovary','Pancreas','Prostate','Salivary Gland','Skin','Small Intestine','Spleen','Stomach','Testis','Thyroid','Uterus','Vagina','Pituitary')
VecOfTurnOvers = c(  2448,  455,  49,  30,  67.5,  3.2,  24637.5,  65.75,  5.7,  4.25,  10.5,  25300,  270,  363.5,  126,  5510,  24637.5,  30000,  315,  120,  60,  64,  7.05,  7.8,  1.4,  63.5,  3679.5,  13,  3.9, 25000)
All = data.frame(VecOfTissues,VecOfTurnOvers); names(All) = c('TissueShortName','TurnOverRate')
Som = merge(Som,All, by = 'TissueShortName')
########### F: write derive for future analyses:
write.table(Som,"../../Body/2Derived/HealthySomaticHumanMutations.GTEx.PatientSpecificDerive.txt", row.names = FALSE, quote = FALSE, sep = '\t')
rm(list=ls(all=TRUE))
Som = read.table("../../Body/2Derived/HealthySomaticHumanMutations.GTEx.PatientSpecificDerive.txt", header = TRUE, sep = '\t')
View(Som)
rm(list=ls(all=TRUE))
Som = read.table("../../Body/2Derived/HealthySomaticHumanMutations.GTEx.PatientSpecificDerive.txt", header = TRUE, sep = '\t')
### derive a table for patient-specific analysis
rm(list=ls(all=TRUE))
########################################
######### 1: DERIVE TABLE Som
########################################
############ A: read human ref seq (note that it is hg19 - not cambridge reference!):
RefSeq = read.table("../../Body/1Raw/chrM_refAllele.txt", header = FALSE, sep = '')
names(RefSeq)=c('Position','AncestralAllele')
############ B: read GTEx mutations and merge them with Ref Seq:
SomMut = read.table("../../Body/1Raw/TissueSpecificMtDNAMutationsGTEx.txt", header = TRUE, sep = '\t')
SomMut$Position = gsub('_(.*)','',SomMut$Mutation)  # gsub("_(.*)",'',READS$patient)
SomMut$DerivedAllele = gsub('(.*)_','',SomMut$Mutation)  # gsub("_(.*)",'',READS$patient)
nrow(SomMut) # 2565
Som = merge(SomMut,RefSeq, by = 'Position')
nrow(SomMut) # 2565
Som = Som[Som$DerivedAllele != Som$AncestralAllele,] # correct - in all lines Derived != Ancestral
nrow(SomMut) # 2565
Som$Substitution = paste(Som$AncestralAllele,Som$DerivedAllele, sep = '_')
table(Som$Substitution)
# A_C A_G A_T C_A C_G C_T G_A G_C G_T T_A T_C T_G
# 43 473  49  49   6 336 728  63  57  42 693  26
########## C: read subjectID and merge patient info:
SubjId = read.table("../../Body/1Raw/GtexTaiEvgenii/pheno.csv", header = TRUE, sep = ',')
SubjId = SubjId[,c(1,6,7,8)] # keep only SRR and patient specific important info (sex, age, Sibjid)
names(SubjId)[names(SubjId) == "run"] <- "SRR" # rename run into SRR
Som = merge(Som,SubjId, by = 'SRR')
########## D: read GTEx expression data:
Expr = read.table("../../Body/1Raw/TissueSpecificMtDNACoverageGTEx.txt", header = TRUE, sep = '\t')
ExprTissues = data.frame(table(Expr$Tissue))
ExprTissues = ExprTissues[order(ExprTissues$Var1),]
# merge by SRRID (lost 2565 - 2523 observations, but got expression level (percentMito) for each sample and alternative name of the Tissue (more simple))
nrow(Som) # 2565
Som = merge(Som,Expr, by.x = 'SRR', by.y = 'SRRID', all.x = TRUE)
nrow(Som) # 2565  - but not all of them have expression level defined  (2523 out of 2565)
TissueLongToTissueShort = unique(data.frame(Som$tissue,Som$Tissue))
# now, based on TissueLongToTissueShort and common sence I  manually create tissue vocabular:
TissuesVocab = c(
'Heart - Left Ventricle','Heart',
'Heart - Atrial Appendage','Heart',
'Cells - Transformed fibroblasts','Skin',
'Esophagus - Mucosa', 'Esophagus',
'Colon - Sigmoid', 'Colon',
'Artery - Aorta', 'Blood Vessel',
'Breast - Mammary Tissue', 'Breast',
'Cells - EBV-transformed lymphocytes', 'Blood',
'Liver', 'Liver',
'Whole Blood', 'Blood',
'Muscle - Skeletal', 'Muscle',
'Colon - Transverse', 'Colon',
'Adrenal Gland', 'Adrenal Gland',
'Vagina', 'Vagina',
'Stomach', 'Stomach',
'Pancreas', 'Pancreas',
'Nerve - Tibial', 'Nerve',
'Uterus', 'Uterus',
'Adipose - Subcutaneous', 'Adipose Tissue',
'Adipose - Visceral (Omentum)', 'Adipose Tissue', # my decision
'Skin - Not Sun Exposed (Suprapubic)', 'Skin',
'Skin - Sun Exposed (Lower leg)', 'Skin',
'Artery - Coronary', 'Blood Vessel',
'Artery - Tibial', 'Blood Vessel',
'Prostate', 'Prostate',
'Spleen', 'Spleen',
'Esophagus - Muscularis', 'Esophagus',
'Testis', 'Testis',
'Kidney - Cortex', 'Kidney',
'Lung', 'Lung',
'Ovary', 'Ovary',
'Small Intestine - Terminal Ileum', 'Small Intestine',
'Esophagus - Gastroesophageal Junction','Esophagus',
'Minor Salivary Gland', 'Salivary Gland',
'Thyroid', 'Thyroid',
'Pituitary', 'Pituitary',
'Brain - Putamen (basal ganglia)','Brain',
'Brain - Spinal cord (cervical c-1)','Brain',
'Brain - Caudate (basal ganglia)','Brain',
'Brain - Cerebellar Hemisphere','Brain',
'Brain - Substantia nigra','Brain',
'Brain - Anterior cingulate cortex (BA24)','Brain',
'Brain - Amygdala','Brain',
'Brain - Hypothalamus','Brain',
'Brain - Hippocampus','Brain',
'Brain - Cortex','Brain',
'Brain - Nucleus accumbens (basal ganglia)','Brain',
'Brain - Cerebellum','Brain',
'Brain - Frontal Cortex (BA9)','Brain'
)
TISS = data.frame(TissuesVocab[c(TRUE, FALSE)],TissuesVocab[c(FALSE, TRUE)]); names(TISS)=c('tissue','TissueShortName')
setdiff(as.character(unique(Som$tissue)),as.character(TISS$TissueLongName))
Som = merge(Som, TISS) # add TissueShortName to each 'tissue'
########### E: Cell lifespans from the table here: https://docs.google.com/document/d/1UECub1DIdmuXwPqDLK8WRcZ6uIjEQiVmHXN1_XNVvUU/edit?usp=sharing
VecOfTissues = c('Adipose Tissue','Adrenal Gland','Bladder','Blood','Blood Vessel','Bone Marrow','Brain','Breast','Cervix Uteri','Colon','Esophagus','Heart','Kidney','Liver','Lung','Muscle','Nerve','Ovary','Pancreas','Prostate','Salivary Gland','Skin','Small Intestine','Spleen','Stomach','Testis','Thyroid','Uterus','Vagina','Pituitary')
VecOfTurnOvers = c(  2448,  455,  49,  30,  67.5,  3.2,  24637.5,  65.75,  5.7,  4.25,  10.5,  25300,  270,  363.5,  126,  5510,  24637.5,  30000,  315,  120,  60,  64,  7.05,  7.8,  1.4,  63.5,  3679.5,  13,  3.9, 25000)
All = data.frame(VecOfTissues,VecOfTurnOvers); names(All) = c('TissueShortName','TurnOverRate')
Som = merge(Som,All, by = 'TissueShortName')
########### F: write derive for future analyses:
write.table(Som,"../../Body/2Derived/HealthySomaticHumanMutations.GTEx.PatientSpecificDerive.txt", row.names = FALSE, quote = FALSE, sep = '\t')
rm(list=ls(all=TRUE))
### non independence of mutations within the same patient / tissue ??? => nested logistic (linear) regression (glm) with classes | should we????
Som = read.table("../../Body/2Derived/HealthySomaticHumanMutations.GTEx.PatientSpecificDerive.txt", header = TRUE, sep = '\t')
View(Som)
length(unique(Som$SRR))
nrow(Som)
length(unique(Som$TissueShortName))
length(unique(Som$subjid)) # 27
rm(list=ls(all=TRUE))
library(dplyr)
Mut = read.table("../../Body/1Raw/mtDNA_snv_Oct2016.txt", head = TRUE, sep = '\t')
Decode = read.table("../../Body/1Raw/PancancerInfoMetadata.txt", head = TRUE, sep = '\t')
Decode = Decode[,c(2,4)]
Mut = merge(Mut,Decode, by.x = 'sample', by.y = 'submitter_donor_id', all.x = TRUE)
Hyp = read.table("../../Body/1Raw/hypoxicCancers.txt", head = TRUE, sep = '\t')
HypMut = merge(Mut,Hyp, by = 'aliquot_id')
rm(list=ls(all=TRUE))
library(dplyr)
Mut = read.table("../../Body/1Raw/mtDNA_snv_Oct2016.txt", head = TRUE, sep = '\t')
Decode = read.table("../../Body/1Raw/PancancerInfoMetadata.txt", head = TRUE, sep = '\t')
Decode = Decode[,c(2,4)]
Mut = merge(Mut,Decode, by.x = 'sample', by.y = 'submitter_donor_id', all.x = TRUE)
Hyp = read.table("../../Body/1Raw/hypoxicCancers.txt", head = TRUE, sep = '\t')
HypMut = merge(Mut,Hyp, by = 'aliquot_id')
HypMut$Subst = paste(HypMut$ref,HypMut$var,sep = '>')
names(HypMut)
HypMut = select(HypMut,aliquot_id,sample,position,Subst,tissue,Tier2,tumor_var_freq,hypoxia_score_winter,hypoxia_score_ragnum,hypoxia_score_buffa)
HypMut$tumor_var_freq = as.numeric(gsub('%','',HypMut$tumor_var_freq))
VecOfSamples = unique(HypMut$sample); length(VecOfSamples) # 828 samples
Final = data.frame()
for (i in 1:length(VecOfSamples))
{ # i = 1
temp = HypMut[HypMut$sample == VecOfSamples[i],]
AhGhfr = nrow(temp[temp$Subst == 'T>C',])/nrow(temp)
TotalMut = nrow(temp)
TotalMutOld = nrow(temp[temp$tumor_var_freq > 5.7,])
TotalMutYoung = nrow(temp[temp$tumor_var_freq <= 5.7,])
Final = rbind(Final,c(AhGhfr,TotalMut,TotalMutOld,TotalMutYoung,temp$hypoxia_score_winter[1],temp$hypoxia_score_buffa[1],temp$hypoxia_score_ragnum[1]))
}
names(Final)=c('AhGhfr','TotalMut','TotalMutOld','TotalMutYoung','hypoxia_score_winter','hypoxia_score_buffa','hypoxia_score_ragnum')
boxplot(Final[Final$hypoxia_score_buffa < quantile(Final$hypoxia_score_buffa,0.9),]$AhGhfr,Final[Final$hypoxia_score_buffa >= quantile(Final$hypoxia_score_buffa,0.9),]$AhGhfr, notch = TRUE, col =c('blue','light blue'))
View(Final)
summary(Final[Final$hypoxia_score_buffa < quantile(Final$hypoxia_score_buffa,0.9),]$AhGhfr) # 0.28
summary(Final[Final$hypoxia_score_buffa >= quantile(Final$hypoxia_score_buffa,0.9),]$AhGhfr) # 0.20
nrow(Final[Final$hypoxia_score_buffa < quantile(Final$hypoxia_score_buffa,0.9),])
nrow(Final[Final$hypoxia_score_buffa >= quantile(Final$hypoxia_score_buffa,0.9),])
boxplot(Final[Final$hypoxia_score_buffa < quantile(Final$hypoxia_score_buffa,0.75),]$AhGhfr,Final[Final$hypoxia_score_buffa >= quantile(Final$hypoxia_score_buffa,0.75),]$AhGhfr, notch = TRUE)
wilcox.test(Final[Final$hypoxia_score_buffa < quantile(Final$hypoxia_score_buffa,0.75),]$AhGhfr,Final[Final$hypoxia_score_buffa >= quantile(Final$hypoxia_score_buffa,0.75),]$AhGhfr, alternative = 'greater')
## what about all mutations in general? weak decrease
boxplot(Final[Final$hypoxia_score_buffa < quantile(Final$hypoxia_score_buffa,0.9),]$TotalMut,Final[Final$hypoxia_score_buffa >= quantile(Final$hypoxia_score_buffa,0.9),]$TotalMut, notch = TRUE)
wilcox.test(Final[Final$hypoxia_score_buffa < quantile(Final$hypoxia_score_buffa,0.9),]$TotalMut,Final[Final$hypoxia_score_buffa >= quantile(Final$hypoxia_score_buffa,0.9),]$TotalMut)
boxplot(Final[Final$hypoxia_score_buffa < quantile(Final$hypoxia_score_buffa,0.75),]$TotalMut,Final[Final$hypoxia_score_buffa >= quantile(Final$hypoxia_score_buffa,0.75),]$TotalMut, notch = TRUE)
wilcox.test(Final[Final$hypoxia_score_buffa < quantile(Final$hypoxia_score_buffa,0.75),]$TotalMut,Final[Final$hypoxia_score_buffa >= quantile(Final$hypoxia_score_buffa,0.75),]$TotalMut, alternative = 'greater')
cor.test(Final$hypoxia_score_buffa,Final$TotalMut, method = 'spearman')
TvVec = c('A>T','A>C','C>A','C>G','T>A','T>G','G>C','G>T')
str(HypMut$tumor_var_freq)
HypMut$AhGhDummy = 0
for (i in 1:nrow(HypMut)) {if(HypMut$Subst[i] == 'A>G') {HypMut$AhGhDummy[i] = 1}}
summary(glm(HypMut$AhGhDummy ~ HypMut$hypoxia_score_ragnum + HypMut$tumor_var_freq, family = binomial()))
summary(glm(HypMut$AhGhDummy ~ HypMut$tumor_var_freq, family = binomial())) # a bit
### frequencies of all four transitions positively correlate with hypoxic score (the higher the score => the higher VAF => early origin and/or more relaxed mtDNA selection in hypoxic cancers)
summary(lm(HypMut$hypoxia_score_ragnum ~ HypMut$tumor_var_freq)) # very positive => the higher the hypoxia the higher VAF (the older all mutations => originated at healthy tissues)
summary(lm(HypMut[HypMut$Subst == 'T>C',]$hypoxia_score_ragnum ~ HypMut[HypMut$Subst == 'T>C',]$tumor_var_freq)) # positive
summary(lm(HypMut[HypMut$Subst == 'C>T',]$hypoxia_score_ragnum ~ HypMut[HypMut$Subst == 'C>T',]$tumor_var_freq)) # positive
summary(lm(HypMut[HypMut$Subst == 'G>A',]$hypoxia_score_ragnum ~ HypMut[HypMut$Subst == 'G>A',]$tumor_var_freq)) # positive
summary(lm(HypMut[HypMut$Subst == 'A>G',]$hypoxia_score_ragnum ~ HypMut[HypMut$Subst == 'A>G',]$tumor_var_freq)) # positive
summary(lm(HypMut[HypMut$Subst %in% TvVec,]$hypoxia_score_ragnum ~ HypMut[HypMut$Subst  %in% TvVec,]$tumor_var_freq)) # positive
CancerTissue = c('Bladder','Bone/SoftTissue','Breast','Biliary','Cervix','Lymphoid','Myeloid','Colon/Rectum','Prostate','Esophagus','Stomach','CNS','Head/Neck','Kidney','Liver','Lung','Ovary','Pancreas','Skin','Thyroid','Uterus')
TurnOverDays = c(200,5373,84.5,200,6,30,30,5,120,11,5.5,10000,16,1000,400,5143,11000,360,147,4138,4); length(TurnOverDays)
Turn = data.frame(CancerTissue,TurnOverDays)
Turn = Turn[order(Turn$TurnOverDays),]
HypMut = merge(HypMut,Turn,by.x = 'Tier2', by.y = 'CancerTissue')
Agg = aggregate(HypMut$hypoxia_score_buffa, by = list(HypMut$Tier2,HypMut$TurnOverDays), FUN = median)
names(Agg) = c('CancerTissue','TurnOverDays','MedianHypoxiaScoreBuffa')
plot(Agg$TurnOverDays,Agg$MedianHypoxiaScoreBuffa)
cor.test(Agg$TurnOverDays,Agg$MedianHypoxiaScoreBuffa, method = 'spearman', alternative = 'less') # rho = -0.44, p = 0.02704
# if we repeat the same with rare substitutions only - effect is even better - why?
summary(HypMut$tumor_var_freq) # 5.3700
Agg = aggregate(HypMut[HypMut$tumor_var_freq <1.79,]$hypoxia_score_buffa, by = list(HypMut[HypMut$tumor_var_freq <1.79,]$Tier2,HypMut[HypMut$tumor_var_freq <1.79,]$TurnOverDays), FUN = median)
names(Agg) = c('CancerTissue','TurnOverDays','MedianHypoxiaScoreBuffa')
plot(Agg$TurnOverDays,Agg$MedianHypoxiaScoreBuffa)
cor.test(Agg$TurnOverDays,Agg$MedianHypoxiaScoreBuffa, method = 'spearman', alternative = 'less') # 0.02704
## can we rerun the same lm where instead of T>C there is a hypoxia
summary(lm(HypMut$hypoxia_score_buffa ~ HypMut$tumor_var_freq+HypMut$TurnOverDays)) # positive both coefficients!!!
summary(lm(HypMut$hypoxia_score_buffa ~ 0 +  HypMut$tumor_var_freq+HypMut$TurnOverDays)) # positive both coefficients!!!
summary(lm(HypMut[HypMut$Subst == 'A>G',]$hypoxia_score_ragnum ~ HypMut[HypMut$Subst == 'A>G',]$tumor_var_freq)) # positive
View(HypMut)
median(HypMut$TurnOverDays)
nrow(median(HypMut$TurnOverDays)>1000)
nrow(HypMut[HypMut$TurnOverDays>1000,]
nrow(HypMut[HypMut$TurnOverDays>1000,])
[HypMut$TurnOverDays>1000
HypMut[HypMut$TurnOverDays>1000,]
nrow(HypMut[HypMut$TurnOverDays>1000,])
nrow(HypMut[HypMut$TurnOverDays<1000,])
View(Final)
View(Hyp)
View(HypMut)
median(HypMut$hypoxia_score_buffa)
median(HypMut$hypoxia_score_buffa)
nrow(HypMut[HypMut$hypoxia_score_buffa>=32,])
View(Final)
View(Final)
Final$OtherMut = 1-Final$AhGhfr
colors = c("red","black")
FinalNew = data.frame(Final$AhGhfr, Final$OtherMut)
FinalNew = data.frame(Final$AhGhfr, Final$OtherMut)
View(FinalNew)
FinalNew
gather(FinalNew, "Final.AhGhfr", "Final.OtherMut")
dplyr::gather(FinalNew, "Final.AhGhfr", "Final.OtherMut")
library(tidyr)
tidyr::gather(FinalNew, "Final.AhGhfr", "Final.OtherMut")
tidyr::gather(FinalNew, "Final.AhGhfr", "Final.OtherMut")
a = tidyr::gather(FinalNew, "Final.AhGhfr", "Final.OtherMut")
View(a)
FinalNew = data.frame(Final$AhGhfr, Final$OtherMut)
a = tidyr::gather(FinalNew, "Final.AhGhfr", "Final.OtherMut")
row(FinalNew)
rownames(FinalNew)
FinalNew = data.frame(Final$AhGhfr, Final$OtherMut, rownames(FinalNew))
FinalNew
FinalNew = data.frame(Final$AhGhfr, Final$OtherMut, rownames(FinalNew), Final$)
FinalNew = data.frame(Final$AhGhfr, Final$OtherMut, rownames(FinalNew), Final$hypoxia_score_buffa)
FinalHypo = FinalNew[FinalNew$>32,]
FinalHypo = FinalNew[FinalNew$hypoxia_score_buffa >32,]
FinalNew = data.frame(Final$AhGhfr, Final$OtherMut, rownames(FinalNew), Final$hypoxia_score_buffa)
FinalHypo = FinalNew[FinalNew$Final.hypoxia_score_buffa >32,]
FinalHypo = FinalNew[FinalNew$Final.hypoxia_score_buffa>=32,]
FinalNorm = FinalNew[FinalNew$Final.hypoxia_score_buffa<32,]
View(FinalHypo)
View(FinalNew)
View(FinalHypo)
View(FinalNorm)
FinalNorm
a = tidyr::gather(FinalHypo, "Final.AhGhfr", "rownames.FinalNew.")
View(a)
a = tidyr::gather(FinalHypo, "rownames.FinalNew.", "Final.AhGhfr")
View(a)
FinalHypo$Final.hypoxia_score_buffa = NULL
FinalNorm$Final.hypoxia_score_buffa = NULL
FinalHypo %>% gather(subtype, freq,  Final.AhGhfr:Final.OtherMut)
View(FinalHypo)
FinalHypo = gather(subtype, freq,  Final.AhGhfr:Final.OtherMut)
a = FinalHypo %>% gather(subtype, freq,  Final.AhGhfr:Final.OtherMut)
View(a)
b = FinalNorm %>% gather(subtype, freq,  Final.AhGhfr:Final.OtherMut)
View(b)
b
barplot(FinalHypo, xlab = "rownames.FinalNew.", col=colors)
ggplot(FinalHypo, aes(fill=subtype, y=freq, x=rownames.FinalNew.)) +
geom_bar(position="fill", stat="identity")
library(ggplot)
library(ggplot2)
ggplot(FinalHypo, aes(fill=subtype, y=freq, x=rownames.FinalNew.)) +
geom_bar(position="fill", stat="identity")
ggplot(a, aes(fill=subtype, y=freq, x=rownames.FinalNew.)) +
geom_bar(position="fill", stat="identity")
ggplot(a, aes(fill=subtype, y=freq, x=rownames.FinalNew.), color = colors) +
geom_bar(position="fill", stat="identity")
p = ggplot(a, aes(fill=subtype, y=freq, x=rownames.FinalNew.), color = colors) +
geom_bar(position="fill", stat="identity")
p+scale_color_manual(values=c("red","black"))
p
p = ggplot(a, aes(fill=subtype, y=freq, x=rownames.FinalNew.)) +
geom_bar(position="fill", stat="identity")
p+scale_color_manual(values=c("red","black"))
p = ggplot(a, aes(fill=subtype, y=freq, x=rownames.FinalNew.)) +
geom_bar(position="fill", stat="identity")
p = ggplot(и, aes(fill=subtype, y=freq, x=rownames.FinalNew.)) +
geom_bar(position="fill", stat="identity")
p
p = ggplot(b, aes(fill=subtype, y=freq, x=rownames.FinalNew.)) +
geom_bar(position="fill", stat="identity")
p
p = ggplot(a, aes(fill=subtype, y=freq, x=rownames.FinalNew.)) +
geom_bar(position="fill", stat="identity")
p
ggplot(a, aes(fill=subtype, y=freq, x=rownames.FinalNew.)) +
geom_bar(position="fill", stat="identity")+(values=c("red","black"))
ggplot(a, aes(fill=subtype, y=freq, x=rownames.FinalNew.)) +
geom_bar(position="fill", stat="identity")+scale_fill_manual(values=c("red","black"))
ggplot(b, aes(fill=subtype, y=freq, x=rownames.FinalNew.)) +
geom_bar(position="fill", stat="identity")+scale_fill_manual(values=c("red","black"))
ggplot(a, aes(fill=subtype, y=freq, x=rownames.FinalNew.)) +
geom_bar(position="fill", stat="identity")+scale_fill_manual(values=c("red","black"))
pdf("../../Body/4Figures/Cancer.Hypoxia.pdf")
ggplot(a, aes(fill=subtype, y=freq, x=rownames.FinalNew.)) +
geom_bar(position="fill", stat="identity")+scale_fill_manual(values=c("red","black"))
ggplot(b, aes(fill=subtype, y=freq, x=rownames.FinalNew.)) +
geom_bar(position="fill", stat="identity")+scale_fill_manual(values=c("red","black"))
dev.off()
pdf("../../Body/4Figures/Cancer.Hypoxia.pdf", width=3, height=3)
ggplot(a, aes(fill=subtype, y=freq, x=rownames.FinalNew.)) +
geom_bar(position="fill", stat="identity")+scale_fill_manual(values=c("red","black"))
ggplot(b, aes(fill=subtype, y=freq, x=rownames.FinalNew.)) +
geom_bar(position="fill", stat="identity")+scale_fill_manual(values=c("red","black"))
dev.off()
pdf("../../Body/4Figures/Cancer.Hypoxia.pdf", width=3, height=7)
ggplot(a, aes(fill=subtype, y=freq, x=rownames.FinalNew.)) +
geom_bar(position="fill", stat="identity")+scale_fill_manual(values=c("red","black"))
ggplot(b, aes(fill=subtype, y=freq, x=rownames.FinalNew.)) +
geom_bar(position="fill", stat="identity")+scale_fill_manual(values=c("red","black"))
dev.off()
pdf("../../Body/4Figures/Cancer.Hypoxia.pdf", width=7, height=3)
ggplot(a, aes(fill=subtype, y=freq, x=rownames.FinalNew.)) +
geom_bar(position="fill", stat="identity")+scale_fill_manual(values=c("red","black"))
ggplot(b, aes(fill=subtype, y=freq, x=rownames.FinalNew.)) +
geom_bar(position="fill", stat="identity")+scale_fill_manual(values=c("red","black"))
dev.off()
ggplot(a, aes(fill=subtype, y=freq, x=rownames.FinalNew.)) +
geom_bar(position="fill", stat="identity")+scale_fill_manual(values=c("red","black"))+xlim(0,734)
