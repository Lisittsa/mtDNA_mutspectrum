rm(list=ls(all=TRUE))
### read data
MUT = read.table('../../Body/3Results/VertebratePolymorphisms.MutSpecData.OnlyFourFoldDegAllGenes.txt', header = TRUE)
class(MUT$A_T)
class(MUT$Species)
etnet= read.table('../../Body/1Raw/ET_vs_nET_fishes.txt', header = TRUE)
etnet= read.table('../../Body/1Raw/ET_vs_nET_fishes.txt', header = TRUE)
etnet= read.table('../../Body/1Raw/ET_vs_nET_fishes.txt', header = TRUE)
etnet= read.table('../../Body/1Raw/ET_vs_nET_fishes.txt', header = TRUE)
etnet= read.table('../../Body/1Raw/ET_vs_nET_fishes.txt', header = TRUE)
etnet= read.table('../../Body/1Raw/ET_vs_nET_fishes.txt', header = TRUE)
View(etnet)
etnet= read.table('../../Body/1Raw/ET_vs_nET_fishes.txt', header = TRUE)
etMut = merge(MUT,etnet)
View(etMut)
TEMPE = read.table('../../Body/1Raw/FishBaseTemperature.txt', header = TRUE)
class(TEMPE$Temperature)
class(TEMPE$Species)
### calculating average for repeating species in TEMPE
averageTEMPE = aggregate(Temperature ~ ., median, data = TEMPE)
ettempmut = merge(etMut, ettempmut)
ettempmut = merge(etMut, averageTEMPE)
a = c(11, 25)
a = c(11, 19, 14, 17, 22, 23, 25)
mean(a)
a = c(5, 7, 12, 10)
mean(a)
etnet= read.table('../../Body/1Raw/ET_vs_nET_fishes.txt', header = TRUE)
a = c(18, 21, 25, 27)
mean(a)
etnet= read.table('../../Body/1Raw/ET_vs_nET_fishes.txt', header = TRUE)
etMut = merge(MUT,etnet)
etnet= read.table('../../Body/1Raw/ET_vs_nET_fishes.txt', header = TRUE)
etMut = merge(MUT,etnet)
rm(list=ls(all=TRUE))
### read data
MUT = read.table('../../Body/3Results/VertebratePolymorphisms.MutSpecData.OnlyFourFoldDegAllGenes.txt', header = TRUE)
class(MUT$A_T)
class(MUT$Species)
### calculating average for repeating species in TEMPE
averageTEMPE = aggregate(Temperature ~ ., median, data = TEMPE)
### temperature in fishes
TemperMut = merge(MUT,TEMPE)   # 1170 rows
averageTemperMut = merge(MUT,averageTEMPE)  # 128 rows
etnet= read.table('../../Body/1Raw/ET_vs_nET_fishes.txt', header = TRUE)
etMut = merge(MUT,etnet)
ettempmut = merge(etMut, averageTEMPE)
ggscatter(etMut, x = "Temp", y = "T_C",
color = "cyl", palette = c("#00AFBB", "#E7B800"),
label = "name", repel = TRUE)
#install.packages("ggpubr")
library("ggpubr")
ggscatter(etMut, x = "Temp", y = "T_C",
color = "cyl", palette = c("#00AFBB", "#E7B800"),
label = "name", repel = TRUE)
ggscatter(etMut, x = "Temp", y = "T_C",
color = "ET", palette = c("#00AFBB", "#E7B800"),
label = "name", repel = TRUE)
ggscatter(etMut, x = "Temp", y = "T_C",
color = "ET", palette = c("#00AFBB", "#E7B800"),
label = "Species", repel = TRUE)
etwt= read.table('../../Body/1Raw/EET_without_temp.txt', header = TRUE)
etnet= read.table('../../Body/1Raw/ET_vs_nET_fishes.txt', header = TRUE)
etwt= read.table('../../Body/1Raw/ET_without_temp.txt', header = TRUE)
etwtMut = merge(MUT,etwt)
View(etwtMut)
ggboxplot(etwtMut, "ET", "T_C",
fill = "ET", palette = c("#00AFBB", "#E7B800"))
View(etMut)
View(etwtMut)
View(etMut)
############# Longevity
AA = read.table("../../Body/1Raw/anage_data.txt", header = TRUE, sep = '\t')
View(AA)
rm(list=ls(all=TRUE))
############ list of hibernating animals
Hib = read.table("../../Body/1Raw/HibernatingMammals.txt", sep = '\t')
ListOfHibSpecies = gsub(' ','_',Hib$V1); length(ListOfHibSpecies)
############ Syn mut
unzip("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt.zip")
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep = '\t')
if (file.exists("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")) {file.remove("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")}
### make ND6 complementary:
NotND6 = SynNuc[SynNuc$Gene != 'ND6',]
NotND6$FrA = NotND6$NeutralA / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrT = NotND6$NeutralT / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrG = NotND6$NeutralG / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
NotND6$FrC = NotND6$NeutralC / (NotND6$NeutralA + NotND6$NeutralT + NotND6$NeutralG + NotND6$NeutralC)
ND6 = SynNuc[SynNuc$Gene == 'ND6',]
ND6$FrA = ND6$NeutralT / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrT = ND6$NeutralA / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrG = ND6$NeutralC / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
ND6$FrC = ND6$NeutralG / (ND6$NeutralA + ND6$NeutralT + ND6$NeutralG + ND6$NeutralC)
SynNuc = rbind(NotND6,ND6)
VecOfTaxa = unique(SynNuc$Class)
############# Hibernation in different classes
#### who is in our list? only mammals!
for (i in 1:length(VecOfTaxa)){ # i = 1
Species = unique(SynNuc[SynNuc$Class == VecOfTaxa[i],]$Species); length(Species)
L = length(intersect(Species,ListOfHibSpecies))
print(c(as.character(VecOfTaxa[i]), L))
}
########## compare nucleotide frequencies between hibernating and other mammals
SynNuc = SynNuc[SynNuc$Class == 'Mammalia',]; length(unique(SynNuc$Species))
AGG = aggregate(list(SynNuc$FrA,SynNuc$FrT,SynNuc$FrG,SynNuc$FrC), by = list(SynNuc$Species), FUN = mean)
names(AGG)=c('Species','FrA','FrT','FrG','FrC')
############# Longevity
AA = read.table("../../Body/1Raw/anage_data.txt", header = TRUE, sep = '\t')
AA$Species = paste(AA$Genus,AA$Species,sep = '_')
GL=read.table("../../Body/1Raw/GenerationLenghtforMammals.xlsx.txt", header = TRUE, sep = '\t')
GL$Species = gsub(" ", "_", GL$Scientific_name)
vec_of_Marsupials_orders = c("Dasyuromorphia", 'Didelphimorphia', "Diprotodontia", "Microbiotheria", "Notoryctemorphia", "Paucituberculata", "Peramelemorphia")
Vec_of_Monotremata_genus = c("Tachyglossus","Zaglossus", "Ornithorhynchus") #Ornithorhynchus
Vec_of_Marsupials_genus = AA[AA$Order %in% vec_of_Marsupials_orders,]$Genus
Vec_MonoHib = c(ListOfHibSpecies, GL[GL$Genus %in% Vec_of_Monotremata_genus,]$Species)
Vec_all = c(ListOfHibSpecies, GL[GL$Genus %in% Vec_of_Monotremata_genus,]$Species, GL[GL$Genus %in% Vec_of_Marsupials_genus,]$Species)
vec_nonplac = c(GL[GL$Genus %in% Vec_of_Monotremata_genus,]$Species, GL[GL$Genus %in% Vec_of_Marsupials_genus,]$Species)
GL$Hib = 1
GL[!GL$Species %in% ListOfHibSpecies,]$Hib = 0
GL$Mono= 1
GL[!GL$Genus %in% Vec_of_Monotremata_genus,]$Mono = 0
GL$Mars = 1
GL[!GL$Genus %in% Vec_of_Marsupials_genus,]$Mars = 0
GL$MonoHib = 1
GL[!GL$Species %in% Vec_MonoHib,]$MonoHib = 0
GL$AllColder = 1
GL[!GL$Species %in% Vec_all,]$AllColder = 0
GL$NonPlac = 1
GL[!GL$Species %in% vec_nonplac,]$NonPlac = 0
allparameters = merge(GL, AGG)
table(allparameters$Hib)
table(allparameters$Mono)
table(allparameters$Mars)
table(allparameters$MonoHib)
table(allparameters$NonPlac)
ltest = lm(formula = FrT ~ scale(GenerationLength_d)*scale(NonPlac), data = allparameters)
summary(ltest)
ltest = lm(formula = FrT ~ scale(GenerationLength_d)+scale(NonPlac), data = allparameters)
summary(ltest)
ltest = lm(formula = scale(FrT) ~ 0 + scale(GenerationLength_d)+scale(NonPlac), data = allparameters)
summary(ltest)
ltest = lm(formula = FrT ~ scale(GenerationLength_d)+scale(NonPlac)+scale(Hib), data = allparameters)
summary(ltest)
table(allparameters$NonPlac)
pairwise.correlation(etMut)
