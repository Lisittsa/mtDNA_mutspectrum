Age$Sample = gsub("-bl",'',Age$BloodId)
Mut = merge(Mut,Age, all.x = TRUE, by = 'Sample')
View(Mut)
rm(list=ls(all=TRUE))
Mut = read.table("../../Body/1Raw/Rebolledo2014/S3.txt", header = TRUE)
Age = read.table("../../Body/1Raw/Rebolledo2014/S1.txt", sep = '\t', header = TRUE)
Age$Sample = gsub("-bl",'',Age$BloodId)
Mut = merge(Mut,Age, by = 'Sample')
rm(list=ls(all=TRUE))
Mut = read.table("../../Body/1Raw/Rebolledo2014/S3.txt", header = TRUE)
Mut$FromTo = paste(Mut$MajorAllele,"_",Mut$MinorAllele,sep = '')
View(Mut)
View(Mut)
Mut$FromTo = paste(Mut$MajorAllele,"_",Mut$MinorAllele,sep = '')
Mut$PosFromTo = paste(Mut$Position,Mut$MajorAllele,">",Mut$MinorAllele,sep = '')
write.table(Mut$PosFromTo,"../../Body/2Derived/Humans.RebolledoAnalyses.ForAnnotation.txt", quote = FALSE, row.names = FALSE, col.names = FALSE)
Ann = read.table("../../Body/1Raw/Rebolledo2014/mseqdr_mvTool_annotation_vep_2019_2_5_15_25.csv", sep = ',', header = TRUE)
table(Ann$consequence_terms)
811/2439
3.6/0.32
11.25/3.6
2439/811
rm(list=ls(all=TRUE))
Mut = read.table("../../Body/1Raw/Rebolledo2014/S3.txt", header = TRUE)
View(Mut)
rm(list=ls(all=TRUE))
Mut = read.table("../../Body/1Raw/Rebolledo2014/S3.txt", header = TRUE)
Mut$FromTo = paste(Mut$MajorAllele,"_",Mut$MinorAllele,sep = '')
Mut$PosFromTo = paste(Mut$Position,Mut$MajorAllele,">",Mut$MinorAllele,sep = '')
write.table(Mut$PosFromTo,"../../Body/2Derived/Humans.RebolledoAnalyses.ForAnnotation.txt", quote = FALSE, row.names = FALSE, col.names = FALSE)
### write the file in order to annotate manually: go to https://mseqdr.org/mvtool.php, paste my variants and save file: "../../Body/1Raw/Rebolledo2014/mseqdr_mvTool_annotation_vep_2019_2_5_15_25.csv"
Ann = read.table("../../Body/1Raw/Rebolledo2014/mseqdr_mvTool_annotation_vep_2019_2_5_15_25.csv", sep = ',', header = TRUE)
table(Ann$consequence_terms)
#    -                   missense_variant non_coding_transcript_exon_variant                 synonymous_variant              upstream_gene_variant
#   47                                 27                                 15                                 19                                108
Ann = unique(Ann[,grep("Input|consequence_terms",colnames(Ann))]); names(Ann)=c('PosFromTo','Annotation')
Mut = merge(Mut,Ann, all.x = TRUE)
Age = read.table("../../Body/1Raw/Rebolledo2014/S1.txt", sep = '\t', header = TRUE)
Age$Sample = gsub("-bl",'',Age$BloodId)
Age$length = 0;
for (i in 1:nrow(Age)){
Age$length[i] = length(unlist(strsplit(Age$Sample[i],split='')))
}
AgeOfMothers = Age[Age$length <= 4,];  AgeOfMothers$AgeOfMothers = AgeOfMothers$AgeAtCollection; AgeOfMothers=AgeOfMothers[,c(4,6)]
AgeOfKids = Age[Age$length > 4,]; AgeOfKids$Sample = gsub("C1$|C2$|C3$|C4$|C5$",'',AgeOfKids$Sample)
AgeOfKids = AgeOfKids[AgeOfKids$Sample != 'M502G',]
AgeOfKids$AgeOfKids = AgeOfKids$AgeAtCollection; AgeOfKids=AgeOfKids[,c(4,6)]
Mut = merge(Mut,AgeOfMothers, by = 'Sample', all.x = TRUE)
Mut = merge(Mut,AgeOfKids, by = 'Sample', all.x = TRUE)
Mut$MotherMinusKid = Mut$AgeOfMothers - Mut$AgeOfKids
summary(Mut$MotherMinusKid)
table(Mut$FromTo)
# A_C A_G A_T C_T G_A T_C
#  1  34   1  14  19  31
table(Mut[Mut$FromTo == 'T_C',]$Category)
Child = Mut[Mut$Category == 'child',]
# Child = Child[Child$Annotation == 'synonymous_variant',] # !!!!!
# Child = Child[Child$Mitomap == 'annotated',] # !!!!!
table(Child$FromTo)
View(Child)
View(Child)
young=Child[Child$MotherMinusKid < median(Child$MotherMinusKid),]
old=Child[Child$MotherMinusKid >= median(Child$MotherMinusKid),]
View(old)
View(young)
View(old)
View(young)
View(old)
View(young)
View(young)
old$MotherMinusKid
range(old$MotherMinusKid)
range(young$MotherMinusKid)
young
nrow(young$FromTo)
nrow(young[young$FromTo == T_C,])
nrow(young[young$FromTo == "T_C",])
nrow(young[young$FromTo == "G_A",])
nrow(young[young$FromTo == "T_C",])+nrow(young[young$FromTo == "G_A",])
nrow(old[old$FromTo == "T_C",])+nrow(old[old$FromTo == "G_A",])
nrow(old[old$FromTo == "T_C",])
(old[old$FromTo == "G_A",])
nrow(old[old$FromTo == "G_A",])
propTC = nrow(young[young$FromTo == "T_C",])(nrow(young[young$FromTo == "T_C",])+nrow(young[young$FromTo == "G_A",]))
propTC = nrow(young[young$FromTo == "T_C",])/(nrow(young[young$FromTo == "T_C",])+nrow(young[young$FromTo == "G_A",]))
propGA = nrow(young[young$FromTo == "G_A",])/(nrow(young[young$FromTo == "T_C",])+nrow(young[young$FromTo == "G_A",]))
propTC
propGA
propTCo = nrow(old[old$FromTo == "T_C",])/(nrow(old[old$FromTo == "T_C",])+nrow(old[old$FromTo == "G_A",]))
propGAo = nrow(old[old$FromTo == "G_A",])/(nrow(old[old$FromTo == "T_C",])+nrow(old[old$FromTo == "G_A",]))
propTCo
subs = c("T>C","G>A","T>C","G>A")
age = c(">33", "<34", "<34",">33")
pr = c(propTCy, propGAo, propTCo, propGAy)
pl = data.frame (subs, age, pr)
pr = c(propTCy, propGAo, propTCo, propGAy)
propTCy = nrow(young[young$FromTo == "T_C",])/(nrow(young[young$FromTo == "T_C",])+nrow(young[young$FromTo == "G_A",]))
propGAy = nrow(young[young$FromTo == "G_A",])/(nrow(young[young$FromTo == "T_C",])+nrow(young[young$FromTo == "G_A",]))
propTCo = nrow(old[old$FromTo == "T_C",])/(nrow(old[old$FromTo == "T_C",])+nrow(old[old$FromTo == "G_A",]))
propGAo = nrow(old[old$FromTo == "G_A",])/(nrow(old[old$FromTo == "T_C",])+nrow(old[old$FromTo == "G_A",]))
subs = c("T>C","G>A","T>C","G>A")
age = c(">33", "<34", "<34",">33")
pr = c(propTCy, propGAo, propTCo, propGAy)
pl = data.frame (subs, age, pr)
pl
library(ggpubr)
ggbarplot(pl, "Transitions", "Proportion of Ts types",
fill = "subs", color = "subs", palette = "Paired",
label = TRUE, lab.col = "white", lab.pos = "in")
pl = data.frame(subs, age, pr)
ggbarplot(pl, "Transitions", "Proportion of Ts types",
fill = "subs", color = "subs", palette = "Paired",
label = TRUE, lab.col = "white", lab.pos = "in")
pl = data.frame(subs, age, pr, row.names = NULL)
pl
ggbarplot(pl, "Transitions", "Proportion of Ts types",
fill = "subs", color = "subs", palette = "Paired",
label = TRUE, lab.col = "white", lab.pos = "in")
pl
ggbarplot(pl, "Transitions", "Proportion of Ts types", fill = "subs", color = "subs", palette = "Paired", label = TRUE, lab.col = "white", lab.pos = "in")
rm(list=ls(all=TRUE))
Mut = read.table("../../Body/1Raw/Rebolledo2014/S3.txt", header = TRUE)
Mut$FromTo = paste(Mut$MajorAllele,"_",Mut$MinorAllele,sep = '')
Mut$PosFromTo = paste(Mut$Position,Mut$MajorAllele,">",Mut$MinorAllele,sep = '')
write.table(Mut$PosFromTo,"../../Body/2Derived/Humans.RebolledoAnalyses.ForAnnotation.txt", quote = FALSE, row.names = FALSE, col.names = FALSE)
### write the file in order to annotate manually: go to https://mseqdr.org/mvtool.php, paste my variants and save file: "../../Body/1Raw/Rebolledo2014/mseqdr_mvTool_annotation_vep_2019_2_5_15_25.csv"
Ann = read.table("../../Body/1Raw/Rebolledo2014/mseqdr_mvTool_annotation_vep_2019_2_5_15_25.csv", sep = ',', header = TRUE)
table(Ann$consequence_terms)
#    -                   missense_variant non_coding_transcript_exon_variant                 synonymous_variant              upstream_gene_variant
#   47                                 27                                 15                                 19                                108
Ann = unique(Ann[,grep("Input|consequence_terms",colnames(Ann))]); names(Ann)=c('PosFromTo','Annotation')
Mut = merge(Mut,Ann, all.x = TRUE)
Age = read.table("../../Body/1Raw/Rebolledo2014/S1.txt", sep = '\t', header = TRUE)
Age$Sample = gsub("-bl",'',Age$BloodId)
Age$length = 0;
for (i in 1:nrow(Age)){
Age$length[i] = length(unlist(strsplit(Age$Sample[i],split='')))
}
AgeOfMothers = Age[Age$length <= 4,];  AgeOfMothers$AgeOfMothers = AgeOfMothers$AgeAtCollection; AgeOfMothers=AgeOfMothers[,c(4,6)]
AgeOfKids = Age[Age$length > 4,]; AgeOfKids$Sample = gsub("C1$|C2$|C3$|C4$|C5$",'',AgeOfKids$Sample)
AgeOfKids = AgeOfKids[AgeOfKids$Sample != 'M502G',]
AgeOfKids$AgeOfKids = AgeOfKids$AgeAtCollection; AgeOfKids=AgeOfKids[,c(4,6)]
Mut = merge(Mut,AgeOfMothers, by = 'Sample', all.x = TRUE)
Mut = merge(Mut,AgeOfKids, by = 'Sample', all.x = TRUE)
Mut$MotherMinusKid = Mut$AgeOfMothers - Mut$AgeOfKids
summary(Mut$MotherMinusKid)
# Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's
# 21.00   26.70   32.40   31.13   34.00   39.00       3
table(Mut$FromTo)
# A_C A_G A_T C_T G_A T_C
#  1  34   1  14  19  31
table(Mut[Mut$FromTo == 'T_C',]$Category)
Child = Mut[Mut$Category == 'child',]
# Child = Child[Child$Annotation == 'synonymous_variant',] # !!!!!
# Child = Child[Child$Mitomap == 'annotated',] # !!!!!
table(Child$FromTo)
# A_G A_T C_T G_A T_C
# 6   1   1   4   4
## compare reproduction age for different mutation types: We can just report this result, no more!!!! Do it.
## Cite the main conclusion of the paper (reread it and say that T_C might be the strongest driver, because the maximal mean age)
## report the trend, not statistical result - it is difficult to get significant result with so low numbers.
mean(Child[Child$FromTo == 'T_C',]$MotherMinusKid); nrow(Child[Child$FromTo == 'T_C',]) # 34.075
mean(Child[Child$FromTo != 'T_C',]$MotherMinusKid); nrow(Child[Child$FromTo != 'T_C',])  # 32.066
mean(Child[Child$FromTo == 'A_G',]$MotherMinusKid) # 33.7
mean(Child[Child$FromTo == 'G_A',]$MotherMinusKid); nrow(Child[Child$FromTo == 'G_A',]) # 29.9
mean(Child[Child$FromTo == 'A_T',]$MotherMinusKid) # 37.9 - just one
mean(Child[Child$FromTo == 'C_T',]$MotherMinusKid) # 25.1 - just one
wilcox.test(Child[Child$FromTo == 'T_C',]$MotherMinusKid,Child[Child$FromTo == 'G_A',]$MotherMinusKid, alternative = 'greater')  # p = 0.0956
wilcox.test(Child[Child$FromTo == 'T_C',]$MotherMinusKid, Child[Child$FromTo != 'T_C',]$MotherMinusKid, alternative = 'greater') # p = 0.19
wilcox.test(Child[Child$FromTo == 'T_C' | Child$FromTo == 'A_G',]$MotherMinusKid, Child[Child$FromTo != 'T_C' || Child$FromTo != 'A_G',]$MotherMinusKid, alternative = 'greater') # p = 0.19
TCGA = Child[Child$FromTo == 'T_C' | Child$FromTo == 'G_A',]
summary(Child$MotherMinusKid) # 33.55
nrow(Child[Child$FromTo == 'T_C' & Child$MotherMinusKid < median(Child$MotherMinusKid),])/nrow(Child[Child$FromTo == 'G_A' & Child$MotherMinusKid < median(Child$MotherMinusKid),])   # 1 to 3
nrow(Child[Child$FromTo == 'T_C' & Child$MotherMinusKid >= median(Child$MotherMinusKid),])/nrow(Child[Child$FromTo == 'G_A' & Child$MotherMinusKid >= median(Child$MotherMinusKid),]) # 3 vs 1
## Take a subset of kids with several de novo mtDNA mutations and compare them according to their VAFs:
## somatic mutations in mothers versus their age - no difference:
SomGain = Mut[Mut$Category == 'somatic-gain' & !is.na(Mut$AgeOfMothers),]
mean(SomGain[SomGain$FromTo == 'T_C',]$AgeOfMothers); nrow(SomGain[SomGain$FromTo == 'T_C',]);
mean(SomGain[SomGain$FromTo != 'T_C',]$AgeOfMothers); nrow(SomGain[SomGain$FromTo != 'T_C',]);
#######two groups to compare
young=Child[Child$MotherMinusKid < median(Child$MotherMinusKid),] # under 33
old=Child[Child$MotherMinusKid >= median(Child$MotherMinusKid),]  # over 34
propTCy = nrow(young[young$FromTo == "T_C",])/(nrow(young[young$FromTo == "T_C",])+nrow(young[young$FromTo == "G_A",]))
propGAy = nrow(young[young$FromTo == "G_A",])/(nrow(young[young$FromTo == "T_C",])+nrow(young[young$FromTo == "G_A",]))
propTCo = nrow(old[old$FromTo == "T_C",])/(nrow(old[old$FromTo == "T_C",])+nrow(old[old$FromTo == "G_A",]))
propGAo = nrow(old[old$FromTo == "G_A",])/(nrow(old[old$FromTo == "T_C",])+nrow(old[old$FromTo == "G_A",]))
subs = c("T>C","G>A","T>C","G>A")
age = c(">33", "<34", "<34",">33")
pr = c(propTCy, propGAo, propTCo, propGAy)
ploot = data.frame(subs, age, pr, row.names = NULL)
ploot
rm(list=ls(all=TRUE))
Mut = read.table("../../Body/1Raw/Rebolledo2014/S3.txt", header = TRUE)
Mut$FromTo = paste(Mut$MajorAllele,"_",Mut$MinorAllele,sep = '')
Mut$PosFromTo = paste(Mut$Position,Mut$MajorAllele,">",Mut$MinorAllele,sep = '')
write.table(Mut$PosFromTo,"../../Body/2Derived/Humans.RebolledoAnalyses.ForAnnotation.txt", quote = FALSE, row.names = FALSE, col.names = FALSE)
### write the file in order to annotate manually: go to https://mseqdr.org/mvtool.php, paste my variants and save file: "../../Body/1Raw/Rebolledo2014/mseqdr_mvTool_annotation_vep_2019_2_5_15_25.csv"
Ann = read.table("../../Body/1Raw/Rebolledo2014/mseqdr_mvTool_annotation_vep_2019_2_5_15_25.csv", sep = ',', header = TRUE)
table(Ann$consequence_terms)
#    -                   missense_variant non_coding_transcript_exon_variant                 synonymous_variant              upstream_gene_variant
#   47                                 27                                 15                                 19                                108
Ann = unique(Ann[,grep("Input|consequence_terms",colnames(Ann))]); names(Ann)=c('PosFromTo','Annotation')
Mut = merge(Mut,Ann, all.x = TRUE)
Age = read.table("../../Body/1Raw/Rebolledo2014/S1.txt", sep = '\t', header = TRUE)
Age$Sample = gsub("-bl",'',Age$BloodId)
Age$length = 0;
for (i in 1:nrow(Age)){
Age$length[i] = length(unlist(strsplit(Age$Sample[i],split='')))
}
AgeOfMothers = Age[Age$length <= 4,];  AgeOfMothers$AgeOfMothers = AgeOfMothers$AgeAtCollection; AgeOfMothers=AgeOfMothers[,c(4,6)]
AgeOfKids = Age[Age$length > 4,]; AgeOfKids$Sample = gsub("C1$|C2$|C3$|C4$|C5$",'',AgeOfKids$Sample)
AgeOfKids = AgeOfKids[AgeOfKids$Sample != 'M502G',]
AgeOfKids$AgeOfKids = AgeOfKids$AgeAtCollection; AgeOfKids=AgeOfKids[,c(4,6)]
Mut = merge(Mut,AgeOfMothers, by = 'Sample', all.x = TRUE)
Mut = merge(Mut,AgeOfKids, by = 'Sample', all.x = TRUE)
Mut$MotherMinusKid = Mut$AgeOfMothers - Mut$AgeOfKids
summary(Mut$MotherMinusKid)
# Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's
# 21.00   26.70   32.40   31.13   34.00   39.00       3
table(Mut$FromTo)
# A_C A_G A_T C_T G_A T_C
#  1  34   1  14  19  31
table(Mut[Mut$FromTo == 'T_C',]$Category)
Child = Mut[Mut$Category == 'child',]
# Child = Child[Child$Annotation == 'synonymous_variant',] # !!!!!
# Child = Child[Child$Mitomap == 'annotated',] # !!!!!
table(Child$FromTo)
# A_G A_T C_T G_A T_C
# 6   1   1   4   4
## compare reproduction age for different mutation types: We can just report this result, no more!!!! Do it.
## Cite the main conclusion of the paper (reread it and say that T_C might be the strongest driver, because the maximal mean age)
## report the trend, not statistical result - it is difficult to get significant result with so low numbers.
mean(Child[Child$FromTo == 'T_C',]$MotherMinusKid); nrow(Child[Child$FromTo == 'T_C',]) # 34.075
mean(Child[Child$FromTo != 'T_C',]$MotherMinusKid); nrow(Child[Child$FromTo != 'T_C',])  # 32.066
mean(Child[Child$FromTo == 'A_G',]$MotherMinusKid) # 33.7
mean(Child[Child$FromTo == 'G_A',]$MotherMinusKid); nrow(Child[Child$FromTo == 'G_A',]) # 29.9
mean(Child[Child$FromTo == 'A_T',]$MotherMinusKid) # 37.9 - just one
mean(Child[Child$FromTo == 'C_T',]$MotherMinusKid) # 25.1 - just one
wilcox.test(Child[Child$FromTo == 'T_C',]$MotherMinusKid,Child[Child$FromTo == 'G_A',]$MotherMinusKid, alternative = 'greater')  # p = 0.0956
wilcox.test(Child[Child$FromTo == 'T_C',]$MotherMinusKid, Child[Child$FromTo != 'T_C',]$MotherMinusKid, alternative = 'greater') # p = 0.19
wilcox.test(Child[Child$FromTo == 'T_C' | Child$FromTo == 'A_G',]$MotherMinusKid, Child[Child$FromTo != 'T_C' || Child$FromTo != 'A_G',]$MotherMinusKid, alternative = 'greater') # p = 0.19
TCGA = Child[Child$FromTo == 'T_C' | Child$FromTo == 'G_A',]
summary(Child$MotherMinusKid) # 33.55
nrow(Child[Child$FromTo == 'T_C' & Child$MotherMinusKid < median(Child$MotherMinusKid),])/nrow(Child[Child$FromTo == 'G_A' & Child$MotherMinusKid < median(Child$MotherMinusKid),])   # 1 to 3
nrow(Child[Child$FromTo == 'T_C' & Child$MotherMinusKid >= median(Child$MotherMinusKid),])/nrow(Child[Child$FromTo == 'G_A' & Child$MotherMinusKid >= median(Child$MotherMinusKid),]) # 3 vs 1
## Take a subset of kids with several de novo mtDNA mutations and compare them according to their VAFs:
## somatic mutations in mothers versus their age - no difference:
SomGain = Mut[Mut$Category == 'somatic-gain' & !is.na(Mut$AgeOfMothers),]
mean(SomGain[SomGain$FromTo == 'T_C',]$AgeOfMothers); nrow(SomGain[SomGain$FromTo == 'T_C',]);
mean(SomGain[SomGain$FromTo != 'T_C',]$AgeOfMothers); nrow(SomGain[SomGain$FromTo != 'T_C',]);
#######two groups to compare
young=Child[Child$MotherMinusKid < median(Child$MotherMinusKid),] # under 33
old=Child[Child$MotherMinusKid >= median(Child$MotherMinusKid),]  # over 34
propTCy = nrow(young[young$FromTo == "T_C",])/(nrow(young[young$FromTo == "T_C",])+nrow(young[young$FromTo == "G_A",]))
propGAy = nrow(young[young$FromTo == "G_A",])/(nrow(young[young$FromTo == "T_C",])+nrow(young[young$FromTo == "G_A",]))
propTCo = nrow(old[old$FromTo == "T_C",])/(nrow(old[old$FromTo == "T_C",])+nrow(old[old$FromTo == "G_A",]))
propGAo = nrow(old[old$FromTo == "G_A",])/(nrow(old[old$FromTo == "T_C",])+nrow(old[old$FromTo == "G_A",]))
subs = c("T>C","G>A","T>C","G>A")
age = c(">33", "<34", "<34",">33")
pr = c(propTCy, propGAo, propTCo, propGAy)
ploot = data.frame(subs, age, pr, row.names = NULL)
#need barplot! x="Transitions" y="Proportion of Ts types"
class(ploot$pr)
class(ploot$subs)
library(ggplot2)
detach("package:ggplot2", unload = TRUE)
library(ggpubr)
#need barplot! x="Transitions" y="Proportion of Ts types"
ggbarplot(df2, "age", "pr",
fill = "subs", color = "subs", palette = "Paired",
label = TRUE, lab.col = "white", lab.pos = "in")
#need barplot! x="Transitions" y="Proportion of Ts types"
ggbarplot(ploot, "age", "pr",
fill = "subs", color = "subs", palette = "Paired",
label = TRUE, lab.col = "white", lab.pos = "in")
#need barplot! x="Age of mothers" y="Proportion of Ts types"
ggbarplot(ploot, "age", "pr", xlab="Age of mothers", ylab = "Proportion of Ts types",
fill = "subs", color = "subs", palette = "Paired",
label = TRUE, lab.col = "white", lab.pos = "in")
subs = c("A>G","C>T","A>G","C>T")
age = c(">33", "<34", "<34",">33")
pr = c(propTCy, propGAo, propTCo, propGAy)
ploot = data.frame(subs, age, pr, row.names = NULL)
class(ploot$subs)
#need barplot! x="Age of mothers" y="Proportion of Ts types"
ggbarplot(ploot, "age", "pr", xlab="Age of mothers", ylab = "Proportion of Ts types",
fill = "subs", color = "subs", palette = "Paired",
label = TRUE, lab.col = "white", lab.pos = "in")
rm(list=ls(all=TRUE))
Mut = read.table("../../Body/1Raw/Rebolledo2014/S3.txt", header = TRUE)
Mut$FromTo = paste(Mut$MajorAllele,"_",Mut$MinorAllele,sep = '')
Mut$PosFromTo = paste(Mut$Position,Mut$MajorAllele,">",Mut$MinorAllele,sep = '')
write.table(Mut$PosFromTo,"../../Body/2Derived/Humans.RebolledoAnalyses.ForAnnotation.txt", quote = FALSE, row.names = FALSE, col.names = FALSE)
### write the file in order to annotate manually: go to https://mseqdr.org/mvtool.php, paste my variants and save file: "../../Body/1Raw/Rebolledo2014/mseqdr_mvTool_annotation_vep_2019_2_5_15_25.csv"
Ann = read.table("../../Body/1Raw/Rebolledo2014/mseqdr_mvTool_annotation_vep_2019_2_5_15_25.csv", sep = ',', header = TRUE)
table(Ann$consequence_terms)
#    -                   missense_variant non_coding_transcript_exon_variant                 synonymous_variant              upstream_gene_variant
#   47                                 27                                 15                                 19                                108
Ann = unique(Ann[,grep("Input|consequence_terms",colnames(Ann))]); names(Ann)=c('PosFromTo','Annotation')
Mut = merge(Mut,Ann, all.x = TRUE)
Age = read.table("../../Body/1Raw/Rebolledo2014/S1.txt", sep = '\t', header = TRUE)
Age$Sample = gsub("-bl",'',Age$BloodId)
Age$length = 0;
for (i in 1:nrow(Age)){
Age$length[i] = length(unlist(strsplit(Age$Sample[i],split='')))
}
AgeOfMothers = Age[Age$length <= 4,];  AgeOfMothers$AgeOfMothers = AgeOfMothers$AgeAtCollection; AgeOfMothers=AgeOfMothers[,c(4,6)]
AgeOfKids = Age[Age$length > 4,]; AgeOfKids$Sample = gsub("C1$|C2$|C3$|C4$|C5$",'',AgeOfKids$Sample)
AgeOfKids = AgeOfKids[AgeOfKids$Sample != 'M502G',]
AgeOfKids$AgeOfKids = AgeOfKids$AgeAtCollection; AgeOfKids=AgeOfKids[,c(4,6)]
Mut = merge(Mut,AgeOfMothers, by = 'Sample', all.x = TRUE)
Mut = merge(Mut,AgeOfKids, by = 'Sample', all.x = TRUE)
Mut$MotherMinusKid = Mut$AgeOfMothers - Mut$AgeOfKids
summary(Mut$MotherMinusKid)
# Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's
# 21.00   26.70   32.40   31.13   34.00   39.00       3
table(Mut$FromTo)
# A_C A_G A_T C_T G_A T_C
#  1  34   1  14  19  31
table(Mut[Mut$FromTo == 'T_C',]$Category)
Child = Mut[Mut$Category == 'child',]
# Child = Child[Child$Annotation == 'synonymous_variant',] # !!!!!
# Child = Child[Child$Mitomap == 'annotated',] # !!!!!
table(Child$FromTo)
# A_G A_T C_T G_A T_C
# 6   1   1   4   4
## compare reproduction age for different mutation types: We can just report this result, no more!!!! Do it.
## Cite the main conclusion of the paper (reread it and say that T_C might be the strongest driver, because the maximal mean age)
## report the trend, not statistical result - it is difficult to get significant result with so low numbers.
mean(Child[Child$FromTo == 'T_C',]$MotherMinusKid); nrow(Child[Child$FromTo == 'T_C',]) # 34.075
mean(Child[Child$FromTo != 'T_C',]$MotherMinusKid); nrow(Child[Child$FromTo != 'T_C',])  # 32.066
mean(Child[Child$FromTo == 'A_G',]$MotherMinusKid) # 33.7
mean(Child[Child$FromTo == 'G_A',]$MotherMinusKid); nrow(Child[Child$FromTo == 'G_A',]) # 29.9
mean(Child[Child$FromTo == 'A_T',]$MotherMinusKid) # 37.9 - just one
mean(Child[Child$FromTo == 'C_T',]$MotherMinusKid) # 25.1 - just one
wilcox.test(Child[Child$FromTo == 'T_C',]$MotherMinusKid,Child[Child$FromTo == 'G_A',]$MotherMinusKid, alternative = 'greater')  # p = 0.0956
wilcox.test(Child[Child$FromTo == 'T_C',]$MotherMinusKid, Child[Child$FromTo != 'T_C',]$MotherMinusKid, alternative = 'greater') # p = 0.19
wilcox.test(Child[Child$FromTo == 'T_C' | Child$FromTo == 'A_G',]$MotherMinusKid, Child[Child$FromTo != 'T_C' || Child$FromTo != 'A_G',]$MotherMinusKid, alternative = 'greater') # p = 0.19
TCGA = Child[Child$FromTo == 'T_C' | Child$FromTo == 'G_A',]
summary(Child$MotherMinusKid) # 33.55
nrow(Child[Child$FromTo == 'T_C' & Child$MotherMinusKid < median(Child$MotherMinusKid),])/nrow(Child[Child$FromTo == 'G_A' & Child$MotherMinusKid < median(Child$MotherMinusKid),])   # 1 to 3
nrow(Child[Child$FromTo == 'T_C' & Child$MotherMinusKid >= median(Child$MotherMinusKid),])/nrow(Child[Child$FromTo == 'G_A' & Child$MotherMinusKid >= median(Child$MotherMinusKid),]) # 3 vs 1
## Take a subset of kids with several de novo mtDNA mutations and compare them according to their VAFs:
## somatic mutations in mothers versus their age - no difference:
SomGain = Mut[Mut$Category == 'somatic-gain' & !is.na(Mut$AgeOfMothers),]
mean(SomGain[SomGain$FromTo == 'T_C',]$AgeOfMothers); nrow(SomGain[SomGain$FromTo == 'T_C',]);
mean(SomGain[SomGain$FromTo != 'T_C',]$AgeOfMothers); nrow(SomGain[SomGain$FromTo != 'T_C',]);
#######two groups to compare
young=Child[Child$MotherMinusKid < median(Child$MotherMinusKid),] # under 33
old=Child[Child$MotherMinusKid >= median(Child$MotherMinusKid),]  # over 34
propTCy = nrow(young[young$FromTo == "T_C",])/(nrow(young[young$FromTo == "T_C",])+nrow(young[young$FromTo == "G_A",]))
propGAy = nrow(young[young$FromTo == "G_A",])/(nrow(young[young$FromTo == "T_C",])+nrow(young[young$FromTo == "G_A",]))
propTCo = nrow(old[old$FromTo == "T_C",])/(nrow(old[old$FromTo == "T_C",])+nrow(old[old$FromTo == "G_A",]))
propGAo = nrow(old[old$FromTo == "G_A",])/(nrow(old[old$FromTo == "T_C",])+nrow(old[old$FromTo == "G_A",]))
subs = c("A>G","C>T","A>G","C>T")
age = c("<33", ">34", ">34","<33")
pr = c(propTCy, propGAo, propTCo, propGAy)
ploot = data.frame(subs, age, pr, row.names = NULL)
class(ploot$subs)
#need barplot! x="Age of mothers" y="Proportion of Ts types"
ggbarplot(ploot, "age", "pr", xlab="Age of mothers", ylab = "Proportion of Ts types",
fill = "subs", color = "subs", palette = "Paired",
label = TRUE, lab.col = "white", lab.pos = "in")
library(ggpubr)
rm(list=ls(all=TRUE))
Mut = read.table("../../Body/1Raw/Rebolledo2014/S3.txt", header = TRUE)
Mut$FromTo = paste(Mut$MajorAllele,"_",Mut$MinorAllele,sep = '')
Mut$PosFromTo = paste(Mut$Position,Mut$MajorAllele,">",Mut$MinorAllele,sep = '')
write.table(Mut$PosFromTo,"../../Body/2Derived/Humans.RebolledoAnalyses.ForAnnotation.txt", quote = FALSE, row.names = FALSE, col.names = FALSE)
### write the file in order to annotate manually: go to https://mseqdr.org/mvtool.php, paste my variants and save file: "../../Body/1Raw/Rebolledo2014/mseqdr_mvTool_annotation_vep_2019_2_5_15_25.csv"
Ann = read.table("../../Body/1Raw/Rebolledo2014/mseqdr_mvTool_annotation_vep_2019_2_5_15_25.csv", sep = ',', header = TRUE)
table(Ann$consequence_terms)
#    -                   missense_variant non_coding_transcript_exon_variant                 synonymous_variant              upstream_gene_variant
#   47                                 27                                 15                                 19                                108
Ann = unique(Ann[,grep("Input|consequence_terms",colnames(Ann))]); names(Ann)=c('PosFromTo','Annotation')
Mut = merge(Mut,Ann, all.x = TRUE)
Age = read.table("../../Body/1Raw/Rebolledo2014/S1.txt", sep = '\t', header = TRUE)
Age$Sample = gsub("-bl",'',Age$BloodId)
Age$length = 0;
for (i in 1:nrow(Age)){
Age$length[i] = length(unlist(strsplit(Age$Sample[i],split='')))
}
AgeOfMothers = Age[Age$length <= 4,];  AgeOfMothers$AgeOfMothers = AgeOfMothers$AgeAtCollection; AgeOfMothers=AgeOfMothers[,c(4,6)]
AgeOfKids = Age[Age$length > 4,]; AgeOfKids$Sample = gsub("C1$|C2$|C3$|C4$|C5$",'',AgeOfKids$Sample)
AgeOfKids = AgeOfKids[AgeOfKids$Sample != 'M502G',]
AgeOfKids$AgeOfKids = AgeOfKids$AgeAtCollection; AgeOfKids=AgeOfKids[,c(4,6)]
Mut = merge(Mut,AgeOfMothers, by = 'Sample', all.x = TRUE)
Mut = merge(Mut,AgeOfKids, by = 'Sample', all.x = TRUE)
Mut$MotherMinusKid = Mut$AgeOfMothers - Mut$AgeOfKids
summary(Mut$MotherMinusKid)
# Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's
# 21.00   26.70   32.40   31.13   34.00   39.00       3
table(Mut$FromTo)
# A_C A_G A_T C_T G_A T_C
#  1  34   1  14  19  31
table(Mut[Mut$FromTo == 'T_C',]$Category)
Child = Mut[Mut$Category == 'child',]
# Child = Child[Child$Annotation == 'synonymous_variant',] # !!!!!
# Child = Child[Child$Mitomap == 'annotated',] # !!!!!
table(Child$FromTo)
# A_G A_T C_T G_A T_C
# 6   1   1   4   4
## compare reproduction age for different mutation types: We can just report this result, no more!!!! Do it.
## Cite the main conclusion of the paper (reread it and say that T_C might be the strongest driver, because the maximal mean age)
## report the trend, not statistical result - it is difficult to get significant result with so low numbers.
mean(Child[Child$FromTo == 'T_C',]$MotherMinusKid); nrow(Child[Child$FromTo == 'T_C',]) # 34.075
mean(Child[Child$FromTo != 'T_C',]$MotherMinusKid); nrow(Child[Child$FromTo != 'T_C',])  # 32.066
mean(Child[Child$FromTo == 'A_G',]$MotherMinusKid) # 33.7
mean(Child[Child$FromTo == 'G_A',]$MotherMinusKid); nrow(Child[Child$FromTo == 'G_A',]) # 29.9
mean(Child[Child$FromTo == 'A_T',]$MotherMinusKid) # 37.9 - just one
mean(Child[Child$FromTo == 'C_T',]$MotherMinusKid) # 25.1 - just one
wilcox.test(Child[Child$FromTo == 'T_C',]$MotherMinusKid,Child[Child$FromTo == 'G_A',]$MotherMinusKid, alternative = 'greater')  # p = 0.0956
wilcox.test(Child[Child$FromTo == 'T_C',]$MotherMinusKid, Child[Child$FromTo != 'T_C',]$MotherMinusKid, alternative = 'greater') # p = 0.19
wilcox.test(Child[Child$FromTo == 'T_C' | Child$FromTo == 'A_G',]$MotherMinusKid, Child[Child$FromTo != 'T_C' || Child$FromTo != 'A_G',]$MotherMinusKid, alternative = 'greater') # p = 0.19
TCGA = Child[Child$FromTo == 'T_C' | Child$FromTo == 'G_A',]
summary(Child$MotherMinusKid) # 33.55
nrow(Child[Child$FromTo == 'T_C' & Child$MotherMinusKid < median(Child$MotherMinusKid),])/nrow(Child[Child$FromTo == 'G_A' & Child$MotherMinusKid < median(Child$MotherMinusKid),])   # 1 to 3
nrow(Child[Child$FromTo == 'T_C' & Child$MotherMinusKid >= median(Child$MotherMinusKid),])/nrow(Child[Child$FromTo == 'G_A' & Child$MotherMinusKid >= median(Child$MotherMinusKid),]) # 3 vs 1
## Take a subset of kids with several de novo mtDNA mutations and compare them according to their VAFs:
## somatic mutations in mothers versus their age - no difference:
SomGain = Mut[Mut$Category == 'somatic-gain' & !is.na(Mut$AgeOfMothers),]
mean(SomGain[SomGain$FromTo == 'T_C',]$AgeOfMothers); nrow(SomGain[SomGain$FromTo == 'T_C',]);
mean(SomGain[SomGain$FromTo != 'T_C',]$AgeOfMothers); nrow(SomGain[SomGain$FromTo != 'T_C',]);
#######two groups to compare
young=Child[Child$MotherMinusKid < median(Child$MotherMinusKid),] # under 33
old=Child[Child$MotherMinusKid >= median(Child$MotherMinusKid),]  # over 34
propTCy = nrow(young[young$FromTo == "T_C",])/(nrow(young[young$FromTo == "T_C",])+nrow(young[young$FromTo == "G_A",]))
propGAy = nrow(young[young$FromTo == "G_A",])/(nrow(young[young$FromTo == "T_C",])+nrow(young[young$FromTo == "G_A",]))
propTCo = nrow(old[old$FromTo == "T_C",])/(nrow(old[old$FromTo == "T_C",])+nrow(old[old$FromTo == "G_A",]))
propGAo = nrow(old[old$FromTo == "G_A",])/(nrow(old[old$FromTo == "T_C",])+nrow(old[old$FromTo == "G_A",]))
subs = c("A>G","C>T","A>G","C>T")
age = c("<33", ">34", ">34","<33")
pr = c(propTCy, propGAo, propTCo, propGAy)
ploot = data.frame(subs, age, pr, row.names = NULL)
class(ploot$subs)
#need barplot! x="Age of mothers" y="Proportion of Ts types"
ggbarplot(ploot, "age", "pr", xlab="Age of mothers", ylab = "Proportion of Ts types",
fill = "subs", color = "subs", palette = "Paired",
label = TRUE, lab.col = "white", lab.pos = "in")
rm(list=ls())
data = read.table("../../Body/1Raw/Wei2019HumanDuos.txt", sep='\t', header = TRUE)
str(data)
str(data)
View(data)
View(data)
length(unique(data$PairID))
View(data)
table(unique(data$MotherOffspring)) # 928
table(data$MotherOffspring) # 928
table(data$HeteroplasmiCategory)
data$Allele = as.character(data$Allele)
data$Allele = as.character(data$Allele)
data$mutType = paste(substr(data$Allele, 1, 1), substr(data$Allele, nchar(data$Allele), nchar(data$Allele)), sep="")
offspring = data[which(data$MotherOffspring == 'Offspring'),]
# check frequencies => indeed this is light chain notation
TotalMutSpec = as.data.frame(table(offspring$mutType)); TotalMutSpec = TotalMutSpec[order(-TotalMutSpec$Freq),]
table(offspring$mutType)
table(offspring$HeteroplasmiCategory)
offspring = data[which(data$MotherOffspring == 'Offspring'),]
table(offspring$HeteroplasmiCategory) # de novo: 477; inherited: 416
Off = data[which(data$MotherOffspring == 'Offspring'),]
table(Off$HeteroplasmiCategory) # de novo: 477; inherited: 416
OffDeNovo = Off[Off$HeteroplasmiCategory == 'de novo',]
TotalMutSpec = as.data.frame(table(OffDeNovo$mutType)); TotalMutSpec = TotalMutSpec[order(-TotalMutSpec$Freq),]
TotalMutSpec
rm(list=ls())
data = read.table("../../Body/1Raw/Wei2019HumanDuos.txt", sep='\t', header = TRUE)
str(data)
length(unique(data$PairID)) # 928
table(data$MotherOffspring) # Mother: 1043 Offspring: 893
table(data$HeteroplasmiCategory) # de novo: 477; inherited: 416; lost: 614; tansmitted: 429
### Add mutation type column
data$Allele = as.character(data$Allele)
data$mutType = paste(substr(data$Allele, 1, 1), substr(data$Allele, nchar(data$Allele), nchar(data$Allele)), sep="")
### we need to work with offspring who has several de novo variants (to compare their VAFs)
Off = data[which(data$MotherOffspring == 'Offspring'),]
table(Off$HeteroplasmiCategory) # de novo: 477; inherited: 416
OffDeNovo = Off[Off$HeteroplasmiCategory == 'de novo',]  # 477
### check frequencies => indeed this is light chain notation
TotalMutSpec = as.data.frame(table(OffDeNovo$mutType)); TotalMutSpec = TotalMutSpec[order(-TotalMutSpec$Freq),]
TotalMutSpec
OffDeNovo$mutType = gsub('TC','A>G',OffDeNovo$mutType);  OffDeNovo$mutType = gsub('GA','C>T',OffDeNovo$mutType); OffDeNovo$mutType = gsub('AG','T>C',OffDeNovo$mutType); OffDeNovo$mutType = gsub('CT','G>A',OffDeNovo$mutType);
OffDeNovo$mutType = gsub("AC|CA|GT|TG|AT|TA|CG|GC", 'Tv',OffDeNovo$mutType);
TotalMutSpec = as.data.frame(table(OffDeNovo$mutType)); TotalMutSpec = TotalMutSpec[order(-TotalMutSpec$Freq),]
TotalMutSpec
View(data)
rm(list=ls())
data = read.table("../../Body/1Raw/Wei2019HumanDuos.txt", sep='\t', header = TRUE)
str(data)
length(unique(data$PairID)) # 928
table(data$MotherOffspring) # Mother: 1043 Offspring: 893
table(data$HeteroplasmiCategory) # de novo: 477; inherited: 416; lost: 614; tansmitted: 429  # inherited - transmitted&&&
### Add mutation type column
data$Allele = as.character(data$Allele)
data$mutType = paste(substr(data$Allele, 1, 1), substr(data$Allele, nchar(data$Allele), nchar(data$Allele)), sep="")
### we need to work with offspring who has several de novo variants (to compare their VAFs)
Off = data[which(data$MotherOffspring == 'Offspring'),]
table(Off$HeteroplasmiCategory) # de novo: 477; inherited: 416
OffDeNovo = Off[Off$HeteroplasmiCategory == 'de novo',]  # 477
### check that this is indeed light chain notation (default as expected) and check - how reasonable the MutSpec in general
TotalMutSpecLightChain = as.data.frame(table(OffDeNovo$mutType)); TotalMutSpecLightChain = TotalMutSpecLightChain[order(-TotalMutSpecLightChain$Freq),]
TotalMutSpecLightChain
TotalMutSpecHeavyChain
OffDeNovo$mutType = gsub('TC','A>G',OffDeNovo$mutType);  OffDeNovo$mutType = gsub('GA','C>T',OffDeNovo$mutType); OffDeNovo$mutType = gsub('AG','T>C',OffDeNovo$mutType); OffDeNovo$mutType = gsub('CT','G>A',OffDeNovo$mutType);
OffDeNovo$mutType = gsub("AC|CA|GT|TG|AT|TA|CG|GC", 'Tv',OffDeNovo$mutType);
TotalMutSpecHeavyChain = as.data.frame(table(OffDeNovo$mutType)); TotalMutSpecHeavyChain = TotalMutSpecHeavyChain[order(-TotalMutSpecHeavyChain$Freq),]
TotalMutSpecHeavyChain
Agg1 = aggregate(OffDeNovo$HeteroplasmicFraction, by = list(OffDeNovo$mutType), FUN = mean)
Agg1
Agg1 = aggregate(OffDeNovo$HeteroplasmicFraction, by = list(OffDeNovo$mutType), FUN = mean)
Agg1
boxplot(OffDeNovo$HeteroplasmicFraction ~ OffDeNovo$mutType, varwidth = TRUE, notch = TRUE)
