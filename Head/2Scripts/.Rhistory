rm(list=ls(all=TRUE))
############ Syn mut
unzip("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt.zip")
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep = '\t')
if (file.exists("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")) {file.remove("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")}
###################################
######
###################################
rm(list=ls(all=TRUE))
unzip("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt.zip")
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep = '\t')
if (file.exists("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")) {file.remove("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")}
kuptsovtable = read.table("../../Body/2Derived/EcologyMammalianTable01_KuptsovA_ver2_Full.txt", sep='\t', header=TRUE)
### make ND6 complementary:
SynNuc = SynNuc[SynNuc$Gene != 'ND6',]
SynNuc = SynNuc[SynNuc$Gene != 'ND6',]
SynNuc$FrA = SynNuc$NeutralA / (SynNuc$NeutralA + SynNuc$NeutralT + SynNuc$NeutralG + SynNuc$NeutralC)
SynNuc$FrT = SynNuc$NeutralT / (SynNuc$NeutralA + SynNuc$NeutralT + SynNuc$NeutralG + SynNuc$NeutralC)
SynNuc$FrG = SynNuc$NeutralG / (SynNuc$NeutralA + SynNuc$NeutralT + SynNuc$NeutralG + SynNuc$NeutralC)
SynNuc$FrC = SynNuc$NeutralC / (SynNuc$NeutralA + SynNuc$NeutralT + SynNuc$NeutralG + SynNuc$NeutralC)
VecOfTaxa = unique(SynNuc$Class)
VecOfTaxa
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep = '\t')
############ Syn mut
unzip("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt.zip")
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep = '\t')
if (file.exists("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")) {file.remove("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")}
kuptsovtable = read.table("../../Body/2Derived/EcologyMammalianTable01_KuptsovA_ver2_Full.txt", sep='\t', header=TRUE)
SynNuc = SynNuc[SynNuc$Gene != 'ND6',]
SynNuc = aggregate(list(SynNuc$NeutralA,SynNuc$NeutralT,SynNuc$NeutralG,SynNuc$NeutralC), by = list(SynNuc$Species), FUN = sum)
names(SynNuc) = c('Species','NeutralA','NeutralT','NeutralG','NeutralC')
SynNuc$FrA = SynNuc$NeutralA / (SynNuc$NeutralA + SynNuc$NeutralT + SynNuc$NeutralG + SynNuc$NeutralC)
SynNuc$FrT = SynNuc$NeutralT / (SynNuc$NeutralA + SynNuc$NeutralT + SynNuc$NeutralG + SynNuc$NeutralC)
SynNuc$FrG = SynNuc$NeutralG / (SynNuc$NeutralA + SynNuc$NeutralT + SynNuc$NeutralG + SynNuc$NeutralC)
SynNuc$FrC = SynNuc$NeutralC / (SynNuc$NeutralA + SynNuc$NeutralT + SynNuc$NeutralG + SynNuc$NeutralC)
kuptsovtable$FrT= NULL
kuptsovtable$FrA= NULL
kuptsovtable$FrG= NULL
kuptsovtable$FrC= NULL
allparameters = merge(kuptsovtable, SynNuc, by="Species")
allparameters$Temper = as.numeric(gsub(",", ".", allparameters$Temperature.C._White2003.2006.other.close.species))
allparameters$GenerationLength_d = as.numeric(gsub(",", ".", allparameters$GenerationLength_d))
summary(allparameters$Temper)
ltest = lm(formula = FrT.y ~ scale(GenerationLength_d)+scale(Hib.unconfirmedHib), data = allparameters)
summary(lm(formula = FrT ~ scale(GenerationLength_d)+scale(Hib.unconfirmedHib), data = allparameters))
#######Lm ~ Daily
ltest = lm(formula = FrT ~ scale(GenerationLength_d)+scale(Daily.unconfirmedDaily), data = allparameters)
summary(ltest)
allparameters$MarsMono = allparameters$Mars + allparameters$Mono
table(allparameters$MarsMono)
ltest = lm(formula = FrT.y ~ scale(GenerationLength_d)+scale(MarsMono), data = allparameters)
summary(lm(formula = FrT ~ scale(GenerationLength_d)+scale(MarsMono), data = allparameters))
ltest = lm(formula = FrT ~ scale(GenerationLength_d)+scale(Temper), data = allparameters)
summary(lm(formula = FrT ~ scale(GenerationLength_d)+scale(Temper), data = allparameters))
#######Lm ~ cold
summary(allparameters$Temper)
coldspeciesnames = allparameters[allparameters$Temper <= median(allparameters$Temper) & !is.na(allparameters$Temper),]$Species
allparameters$colddummy = 0
allparameters[allparameters$Species %in% coldspeciesnames,]$colddummy = 1
#######Lm ~ cold
summary(allparameters$Temper)
coldspeciesnames = allparameters[allparameters$Temper <= median(allparameters$Temper) & !is.na(allparameters$Temper),]$Species
allparameters$colddummy = 0
allparameters[allparameters$Species %in% coldspeciesnames,]$colddummy = 1
coldspeciesnames
median(allparameters$Temper)
allparameters
allparameters = merge(kuptsovtable, SynNuc, by="Species")
allparameters$Temper = as.numeric(gsub(",", ".", allparameters$Temperature.C._White2003.2006.other.close.species))
allparameters$GenerationLength_d = as.numeric(gsub(",", ".", allparameters$GenerationLength_d))
summary(allparameters$Temper)
allparameters$MarsMono = allparameters$Mars + allparameters$Mono
table(allparameters$MarsMono)
summary(lm(formula = FrT ~ scale(GenerationLength_d)+scale(MarsMono), data = allparameters))
summary(lm(formula = FrT ~ scale(GenerationLength_d)+scale(Temper), data = allparameters))
median(allparameters$Temper)
summary(allparameters$Temper)
median(allparameters$Temper)
mean(allparameters$Temper)
allparameters$Temper
#######Lm ~ cold
meantemp = allparameters[!is.na(allparameters$Temper),]
meantemp
formediantemperature
#######Lm ~ cold
formediantemperature = allparameters[!is.na(allparameters$Temper),]
summary(allparameters$Temper)
median(formediantemperature)
#######Lm ~ cold
formediantemperature = allparameters[!is.na(allparameters$Temper),]$Temper
median(formediantemperature)
coldspeciesnames = allparameters[allparameters$Temper <= median(formediantemperature) & !is.na(allparameters$Temper),]$Species
coldspeciesnames = allparameters[allparameters$Temper <= mean(formediantemperature) & !is.na(allparameters$Temper),]$Species
allparameters$colddummy = 0
allparameters[allparameters$Species %in% coldspeciesnames,]$colddummy = 1
summary(lm(formula = FrT.y ~ scale(GenerationLength_d)+scale(colddummy), data = allparameters))
summary(lm(formula = FrT ~ scale(GenerationLength_d)+scale(colddummy), data = allparameters))
allparameters$allcolddummy = allparameters$Hib.unconfirmedHib + allparameters$Daily.unconfirmedDaily + allparameters$MarsMono + allparameters$colddummy
table(allparameters$allcolddummy)
allparameters[allparameters$allcolddummy > 0,]$allcolddummy = 1
summary(lm(formula = FrT ~ log2(GenerationLength_d)+scale(allcolddummy), data = allparameters))
summary(lm(formula = FrT  ~ log2(GenerationLength_d), data = allparameters))
allparameters$residuals = ltest$residuals
ltest$residuals
summary(lm(formula = FrT  ~ log2(GenerationLength_d), data = allparameters))
ltest = lm(formula = FrT  ~ log2(GenerationLength_d), data = allparameters)
summary(ltest)
allparameters$residuals = ltest$residuals
View(kuptsovtable)
#################Lm ~ Xen
allparameters$Xen = 0
allparameters[allparameters$Superorder == "Xenarthra", ]$Xen = 1
table(allparameters$Xen)
summary(lm(formula = FrT ~ scale(GenerationLength_d)+scale(Xen), data = allparameters))
summary(lm(formula = FrT.y ~ scale(GenerationLength_d)+scale(Xen)+scale(allcolddummy), data = allparameters))
summary(lm(formula = FrT ~ scale(GenerationLength_d)+scale(Xen)+scale(allcolddummy), data = allparameters))
ltest = lm(formula = FrG ~ scale(GenerationLength_d), data = allparameters)
summary(ltest)
ltest = lm(formula = FrG ~ scale(GenerationLength_d)+scale(Hib.unconfirmedHib), data = allparameters)
summary(ltest)
ltest = lm(formula = FrG ~ scale(allcolddummy), data = allparameters)
summary(ltest)
ltest = lm(formula = FrG ~ scale(GenerationLength_d)*scale(allcolddummy), data = allparameters)
summary(ltest)
allparameters[allparameters$Species == "Cryptomys_hottentotus",]$Temper
allparameters[allparameters$Species == "Heterocephalus_glaber",]$Temper
allparameters[allparameters$Species == "Heterocephalus_glaber",]$GenerationLength_d
allparameters[allparameters$Species == "Cryptomys_hottentotus",]$GenerationLength_d
kuptsovtable = read.table("../../Body/2Derived/EcologyMammalianTable01_KuptsovA_ver2_Full.txt", sep='\t', header=TRUE)
SynNuc = SynNuc[SynNuc$Gene != 'ND6',]
SynNuc = aggregate(list(SynNuc$NeutralA,SynNuc$NeutralT,SynNuc$NeutralG,SynNuc$NeutralC), by = list(SynNuc$Species), FUN = sum)
names(SynNuc) = c('Species','NeutralA','NeutralT','NeutralG','NeutralC')
###################################
######
###################################
rm(list=ls(all=TRUE))
library(ggpubr)
############ Syn mut
unzip("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt.zip")
SynNuc = read.table("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt", header = TRUE, sep = '\t')
if (file.exists("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")) {file.remove("../../Body/3Results/AllGenesCodonUsageNoOverlap.txt")}
kuptsovtable = read.table("../../Body/2Derived/EcologyMammalianTable01_KuptsovA_ver2_Full.txt", sep='\t', header=TRUE)
SynNuc = SynNuc[SynNuc$Gene != 'ND6',]
SynNuc = aggregate(list(SynNuc$NeutralA,SynNuc$NeutralT,SynNuc$NeutralG,SynNuc$NeutralC), by = list(SynNuc$Species), FUN = sum)
names(SynNuc) = c('Species','NeutralA','NeutralT','NeutralG','NeutralC')
SynNuc$FrA = SynNuc$NeutralA / (SynNuc$NeutralA + SynNuc$NeutralT + SynNuc$NeutralG + SynNuc$NeutralC)
SynNuc$FrT = SynNuc$NeutralT / (SynNuc$NeutralA + SynNuc$NeutralT + SynNuc$NeutralG + SynNuc$NeutralC)
SynNuc$FrG = SynNuc$NeutralG / (SynNuc$NeutralA + SynNuc$NeutralT + SynNuc$NeutralG + SynNuc$NeutralC)
SynNuc$FrC = SynNuc$NeutralC / (SynNuc$NeutralA + SynNuc$NeutralT + SynNuc$NeutralG + SynNuc$NeutralC)
kuptsovtable$FrT= NULL
allparameters = merge(kuptsovtable, SynNuc, by="Species")
allparameters$Temper = as.numeric(gsub(",", ".", allparameters$Temperature.C._White2003.2006.other.close.species))
allparameters$GenerationLength_d = as.numeric(gsub(",", ".", allparameters$GenerationLength_d))
summary(allparameters$Temper)
summary(lm(formula = FrT ~ scale(GenerationLength_d)+scale(Hib), data = allparameters))
summary(lm(formula = FrT ~ scale(GenerationLength_d)+scale(Hib.unconfirmedHib), data = allparameters))
ltest = lm(formula = FrT ~ scale(GenerationLength_d)+scale(Daily), data = allparameters)
summary(ltest)
#######Lm ~ Daily
summary(lm(formula = FrT ~ scale(GenerationLength_d)+scale(Daily.unconfirmedDaily), data = allparameters))
allparameters$MarsMono = allparameters$Mars + allparameters$Mono
table(allparameters$MarsMono)
summary(lm(formula = FrT ~ scale(GenerationLength_d)+scale(MarsMono), data = allparameters))
summary(lm(formula = FrT ~ scale(GenerationLength_d)+scale(Temper), data = allparameters))
#######Lm ~ cold
formediantemperature = allparameters[!is.na(allparameters$Temper),]$Temper
coldspeciesnames = allparameters[allparameters$Temper <= mean(formediantemperature) & !is.na(allparameters$Temper),]$Species
allparameters$colddummy = 0
allparameters[allparameters$Species %in% coldspeciesnames,]$colddummy = 1
summary(lm(formula = FrT ~ scale(GenerationLength_d)+scale(colddummy), data = allparameters))
allparameters$allcolddummy = allparameters$Hib.unconfirmedHib + allparameters$Daily.unconfirmedDaily + allparameters$MarsMono + allparameters$colddummy
table(allparameters$allcolddummy)
allparameters[allparameters$allcolddummy > 0,]$allcolddummy = 1
summary(lm(formula = FrT ~ log2(GenerationLength_d)+scale(allcolddummy), data = allparameters))
ltest = lm(formula = FrT  ~ log2(GenerationLength_d), data = allparameters)
summary(ltest)
allparameters$residuals = ltest$residuals ## residuals added
#################Lm ~ Xen
allparameters$Xen = 0
allparameters[allparameters$Superorder == "Xenarthra", ]$Xen = 1
summary(lm(formula = FrT ~ scale(GenerationLength_d)+scale(Xen), data = allparameters))
summary(lm(formula = FrT ~ scale(GenerationLength_d)+scale(Xen)+scale(allcolddummy), data = allparameters))
ltest = lm(formula = FrG ~ scale(GenerationLength_d), data = allparameters)
summary(ltest)
ltest = lm(formula = FrG ~ scale(GenerationLength_d)+scale(Hib.unconfirmedHib), data = allparameters)
summary(ltest)
ltest = lm(formula = FrG ~ scale(allcolddummy), data = allparameters)
summary(ltest)
ltest = lm(formula = FrG ~ scale(GenerationLength_d)*scale(allcolddummy), data = allparameters)
summary(ltest)
ggscatter(allparameters, x = "GenerationLength_d", y = "FrT",
color = "allcolddummy", shape = "allcolddummy",
palette = c("#08519c", "#3182bd"),
ellipse = TRUE, mean.point = TRUE, add = "reg.line",  xscale = "log2", xlab="Generation Length, log2", ylab="Fraction of A")
allcolddummy
allparameters
#######Lm ~ cold
formediantemperature = allparameters[!is.na(allparameters$Temper),]$Temper
coldspeciesnames = allparameters[allparameters$Temper <= mean(formediantemperature) & !is.na(allparameters$Temper),]$Species
allparameters$colddummy = 0
allparameters[allparameters$Species %in% coldspeciesnames,]$colddummy = 1
summary(lm(formula = FrT ~ scale(GenerationLength_d)+scale(colddummy), data = allparameters))
allparameters$allcolddummy = allparameters$Hib.unconfirmedHib + allparameters$Daily.unconfirmedDaily + allparameters$MarsMono + allparameters$colddummy
table(allparameters$allcolddummy)
allparameters[allparameters$allcolddummy > 0,]$allcolddummy = 1
summary(lm(formula = FrT ~ log2(GenerationLength_d)+scale(allcolddummy), data = allparameters))
ltest = lm(formula = FrT  ~ log2(GenerationLength_d), data = allparameters)
summary(ltest)
allparameters$residuals = ltest$residuals ## residuals added
#################Lm ~ Xen
allparameters$Xen = 0
allparameters[allparameters$Superorder == "Xenarthra", ]$Xen = 1
summary(lm(formula = FrT ~ scale(GenerationLength_d)+scale(Xen), data = allparameters))
summary(lm(formula = FrT ~ scale(GenerationLength_d)+scale(Xen)+scale(allcolddummy), data = allparameters))
ltest = lm(formula = FrG ~ scale(GenerationLength_d), data = allparameters)
summary(ltest)
ltest = lm(formula = FrG ~ scale(GenerationLength_d)+scale(Hib.unconfirmedHib), data = allparameters)
summary(ltest)
ltest = lm(formula = FrG ~ scale(allcolddummy), data = allparameters)
summary(ltest)
ltest = lm(formula = FrG ~ scale(GenerationLength_d)*scale(allcolddummy), data = allparameters)
summary(ltest)
ggscatter(allparameters, x = "GenerationLength_d", y = "FrT",
color = "allcolddummy", shape = "allcolddummy",
palette = c("#08519c", "#3182bd"),
ellipse = TRUE, mean.point = TRUE, add = "reg.line",  xscale = "log2", xlab="Generation Length, log2", ylab="Fraction of A")
##########mutspec
MUT = read.table('../../Body/3Results/VertebratePolymorphisms.MutSpecData.OnlyFourFoldDegAllGenes.txt', header = TRUE)
ggscatter(allparameters, x = "GenerationLength_d", y = "FrT",
color = "allcolddummy", shape = "allcolddummy",
palette = c("#08519c", "#3182bd"),
ellipse = TRUE, mean.point = TRUE, add = "reg.line",  xscale = "log2", xlab="Generation Length, log2", ylab="Fraction of A")
allparameters$allcolddummyASchar = as.character(allparameters$allcolddummy)
ggscatter(allparameters, x = "GenerationLength_d", y = "FrT",
color = "allcolddummyASchar", shape = "allcolddummyASchar",
palette = c("#08519c", "#3182bd"),
ellipse = TRUE, mean.point = TRUE, add = "reg.line",  xscale = "log2", xlab="Generation Length, log2", ylab="Fraction of A")
allparameters$allcolddummyASchar[1]
for (i in 1:nrow(allparameters)){
if(allparameters$allcolddummyASchar[i] == 0){
allparameters$allcolddummyASchar[i] = "Warmer mammals"
}else{
allparameters$allcolddummyASchar[i] = "Colder mammals"
}
}
ggscatter(allparameters, x = "GenerationLength_d", y = "FrT",
color = "allcolddummyASchar", shape = "allcolddummyASchar",
palette = c("#08519c", "#3182bd"),
ellipse = TRUE, mean.point = TRUE, add = "reg.line",  xscale = "log2", xlab="Generation Length, log2", ylab="Fraction of A")
allparameters$allcolddummyASchar = as.character(allparameters$allcolddummy)
ggscatter(allparameters, x = "GenerationLength_d", y = "FrT",
color = "allcolddummyASchar", shape = "allcolddummyASchar",
palette = c("#08519c", "#3182bd"),
ellipse = TRUE, mean.point = TRUE, add = "reg.line",  xscale = "log2", xlab="Generation Length, log2", ylab="Fraction of A")
for (i in 1:nrow(allparameters)){
if(allparameters$allcolddummyASchar[i] == 0){
allparameters$allcolddummyASchar[i] = "Warmer mammals"
}else{
allparameters$allcolddummyASchar[i] = "Colder mammals"
}
}
ggscatter(allparameters, x = "GenerationLength_d", y = "FrT",
color = "allcolddummyASchar", shape = "allcolddummyASchar",
palette = c("#08519c", "#3182bd"),
ellipse = TRUE, mean.point = TRUE, add = "reg.line",  xscale = "log2", xlab="Generation Length, log2", ylab="Fraction of A")
allparameters$TwoMammaliaGroups = as.character(allparameters$allcolddummy)
ggscatter(allparameters, x = "GenerationLength_d", y = "FrT",
color = "TwoMammaliaGroups", shape = "TwoMammaliaGroups",
palette = c("#08519c", "#3182bd"),
ellipse = TRUE, mean.point = TRUE, add = "reg.line",  xscale = "log2", xlab="Generation Length, log2", ylab="Fraction of A")
for (i in 1:nrow(allparameters)){
if(allparameters$TwoMammaliaGroups[i] == 0){
allparameters$TwoMammaliaGroups[i] = "Warmer mammals"
}else{
allparameters$TwoMammaliaGroups[i] = "Colder mammals"
}
}
ggscatter(allparameters, x = "GenerationLength_d", y = "FrT",
color = "TwoMammaliaGroups", shape = "TwoMammaliaGroups",
palette = c("#08519c", "#3182bd"),
ellipse = TRUE, mean.point = TRUE, add = "reg.line",  xscale = "log2", xlab="Generation Length, log2", ylab="Fraction of A")
ggscatter(allparameters, x = "GenerationLength_d", y = "FrT",
color = "TwoMammaliaGroups", shape = "TwoMammaliaGroups",
palette = c("#08519c", "#de6a85"),
ellipse = TRUE, mean.point = TRUE, add = "reg.line",  xscale = "log2", xlab="Generation Length, log2", ylab="Fraction of A")
pdf("../../Body/4Figures/WholeGenomeAnalyses.EcologyAndMutSpecChordata.Mammals.KuptsovData.FIGURE3.pdf")
ggscatter(allparameters, x = "GenerationLength_d", y = "FrT",
color = "TwoMammaliaGroups", shape = "TwoMammaliaGroups",
palette = c("#08519c", "#de6a85"),
ellipse = TRUE, mean.point = TRUE, add = "reg.line",  xscale = "log2", xlab="Generation Length, log2", ylab="Fraction of A")
dev.off()
pdf("../../Body/4Figures/WholeGenomeAnalyses.EcologyAndMutSpecChordata.Mammals.KuptsovData.FIGURE3.pdf", width = 9, height = 5.5)
ggscatter(allparameters, x = "GenerationLength_d", y = "FrT",
color = "TwoMammaliaGroups", shape = "TwoMammaliaGroups",
palette = c("#08519c", "#de6a85"),
ellipse = TRUE, mean.point = TRUE, add = "reg.line",  xscale = "log2", xlab="Generation Length, log2", ylab="Fraction of A")
dev.off()
